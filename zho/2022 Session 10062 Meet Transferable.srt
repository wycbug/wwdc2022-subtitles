1
00:00:00,200 --> 00:00:03,370
♪ 柔和乐器演奏的嘻哈音乐 ♪

2
00:00:03,370 --> 00:00:09,643
♪

3
00:00:09,643 --> 00:00:13,347
大家好 欢迎观看
“Meet Transferable”讲座

4
00:00:13,347 --> 00:00:16,717
我是 SwiftUI 工程师
Julia

5
00:00:16,717 --> 00:00:19,152
很高兴能
向大家介绍 Transferable

6
00:00:19,152 --> 00:00:21,889
一种支持在您的 App 中

7
00:00:21,889 --> 00:00:26,226
拖放 复制/粘贴
及其他功能的声明方式

8
00:00:26,226 --> 00:00:29,997
除了在 SwiftUI 工作
和为 Mac 开发 App

9
00:00:29,997 --> 00:00:32,566
我也很想了解
在计算机行业打拼的女性

10
00:00:32,566 --> 00:00:34,601
想要倾听她们的故事

11
00:00:34,601 --> 00:00:38,539
我觉得英雄前辈们的
事迹十分值得我们学习

12
00:00:38,539 --> 00:00:41,208
所以我决定创建一个目录 App

13
00:00:41,208 --> 00:00:46,580
我可以在其中
查看 添加和编辑一份名单

14
00:00:46,580 --> 00:00:50,484
该名单囊括了女性发明家 工程师
和科学家的简介资料

15
00:00:50,484 --> 00:00:54,188
我希望该 App 能够完美地支持

16
00:00:54,188 --> 00:00:58,659
将科学家的肖像拖放到 App 中

17
00:00:58,659 --> 00:01:01,528
能够使用剪贴板内容

18
00:01:01,528 --> 00:01:04,798
来粘贴有趣的事迹

19
00:01:04,798 --> 00:01:06,366
并且我的 App 首次

20
00:01:06,366 --> 00:01:10,003
支持在 watchOS 上分享！

21
00:01:10,003 --> 00:01:12,606
我的潜在用户表示他们希望

22
00:01:12,606 --> 00:01:15,209
能够从手表中

23
00:01:15,209 --> 00:01:17,578
分享个人资料

24
00:01:17,578 --> 00:01:23,884
此外 目前可以通过 SwiftUI
实现在 iOS 和 Mac 上的分享

25
00:01:23,884 --> 00:01:29,523
这也是今年
ShareSheet 的全新设计

26
00:01:29,523 --> 00:01:32,726
在背后 启用所有这些功能

27
00:01:32,726 --> 00:01:35,829
需要将我们已有的模型

28
00:01:35,829 --> 00:01:39,600
支持发送到一个
我们 app 里的接收方

29
00:01:39,600 --> 00:01:42,336
甚至其他 App

30
00:01:42,336 --> 00:01:46,039
个人资料结构包含我们所掌握的

31
00:01:46,039 --> 00:01:49,476
个体的所有信息

32
00:01:49,476 --> 00:01:52,212
打包在存档中的所有个人资料

33
00:01:52,212 --> 00:01:54,982
可以在朋友之间分享

34
00:01:54,982 --> 00:01:58,685
我们将个体有趣事迹存储在字符串中

35
00:01:58,685 --> 00:02:01,455
甚至可以附加视频

36
00:02:01,455 --> 00:02:06,059
这里一种新的简单方法
可以将所有这些模型类型

37
00:02:06,059 --> 00:02:07,828
支持分享功能

38
00:02:07,828 --> 00:02:09,863
这就是 Transferable！

39
00:02:09,863 --> 00:02:14,401
这是一种 Swift 优先的声明方式
说明了如何将您的模型

40
00:02:14,401 --> 00:02:17,571
序列化和反序列化

41
00:02:17,571 --> 00:02:20,240
来用于分享和数据传输

42
00:02:20,240 --> 00:02:22,809
今天我们就来聊聊

43
00:02:22,809 --> 00:02:24,611
什么是 Transferable

44
00:02:24,611 --> 00:02:28,448
以及当我们在使用时
它在幕后是怎样运作的

45
00:02:28,448 --> 00:02:32,786
以及如何符合自定义类型 最后

46
00:02:32,786 --> 00:02:35,189
我将分享一些高级技巧和窍门

47
00:02:35,189 --> 00:02:37,658
可以帮助自定义 Transferable

48
00:02:37,658 --> 00:02:40,827
来精准地满足您的需求

49
00:02:40,827 --> 00:02:43,197
我们开始吧！

50
00:02:43,197 --> 00:02:46,633
假设有两个 App 正在运行

51
00:02:46,633 --> 00:02:50,337
用户想从一个 App 传递数据
到另一个 App

52
00:02:50,337 --> 00:02:54,975
通过复制/粘贴 分享面板 拖拽

53
00:02:54,975 --> 00:02:58,579
或者使用一些其它的 App 功能

54
00:02:58,579 --> 00:03:02,149
当在两个不同的 App 间
发送内容时

55
00:03:02,149 --> 00:03:05,986
数据将以二进制形式进行传输

56
00:03:05,986 --> 00:03:08,755
发送此数据的一个重要方面

57
00:03:08,755 --> 00:03:12,226
是确定其对应的内容

58
00:03:12,226 --> 00:03:15,662
可以是文字 视频

59
00:03:15,662 --> 00:03:21,235
我最喜欢的女工程师资料
或整个存档

60
00:03:21,235 --> 00:03:26,073
这里是
描述数据用途的 UTType

61
00:03:26,073 --> 00:03:31,144
让我们仔细研究 App 是
如何生成这种二进制数据的

62
00:03:31,144 --> 00:03:34,448
可以与其他 App
甚至在单个 App 中

63
00:03:34,448 --> 00:03:36,750
共享的所有类型

64
00:03:36,750 --> 00:03:40,254
都必须提供两个信息

65
00:03:40,254 --> 00:03:45,526
将其和二进制数据之间
互相转换的方法

66
00:03:45,526 --> 00:03:48,562
与二进制数据结构对应的

67
00:03:48,562 --> 00:03:55,002
内容类型并告知接收方
他们实际获取的数据类型

68
00:03:55,002 --> 00:03:56,537
内容类型

69
00:03:56,537 --> 00:03:59,606
也称为统一类型标识符

70
00:03:59,606 --> 00:04:03,277
是一种 Apple 特有的技术
该技术描述不同

71
00:04:03,277 --> 00:04:07,814
二进制结构以及抽象概念的标识符

72
00:04:07,814 --> 00:04:09,983
该标识符形成一棵树

73
00:04:09,983 --> 00:04:13,453
并且我们还可以定义自定义标识符

74
00:04:13,453 --> 00:04:18,959
例如 一个用于由我们的配置文件
使用的二进制结构

75
00:04:18,959 --> 00:04:21,828
要声明一个自定义标识符

76
00:04:21,828 --> 00:04:26,366
首先 将其声明
添加到 Info.plist 文件中

77
00:04:26,366 --> 00:04:30,304
添加一个文件扩展名
也是个不错的选择

78
00:04:30,304 --> 00:04:32,739
如果数据保存在磁盘上

79
00:04:32,739 --> 00:04:37,110
系统了解到您的 App
可以打开该文件

80
00:04:37,110 --> 00:04:40,981
其次 在代码中声明该标识符

81
00:04:40,981 --> 00:04:43,483
要了解有关内容类型的更多信息

82
00:04:43,483 --> 00:04:45,586
您可以观看视频

83
00:04:45,586 --> 00:04:49,423
“统一类型标识符 — 重新介绍”

84
00:04:49,423 --> 00:04:53,594
我个人十分喜欢该视频
其清晰地阐述了

85
00:04:53,594 --> 00:04:58,899
什么是统一类型标识符以及如何使用

86
00:04:58,899 --> 00:05:01,835
好消息是许多标准类型

87
00:05:01,835 --> 00:05:04,238
已符合 Transferable

88
00:05:04,238 --> 00:05:10,744
例如 字符串 数据
URL 属性字符串和图像

89
00:05:10,744 --> 00:05:14,982
您只需几行代码即可
使用全新 SwiftUI 粘贴按钮界面

90
00:05:14,982 --> 00:05:20,053
将有趣的事迹粘贴到个人资料中

91
00:05:20,053 --> 00:05:23,090
支持从视图中拖动图像

92
00:05:23,090 --> 00:05:27,794
或从访达
或其他 App 接收拖进来的图像

93
00:05:27,794 --> 00:05:29,963
使用全新的 ShareLink

94
00:05:29,963 --> 00:05:34,101
现在可以从手表实现分享体验

95
00:05:34,101 --> 00:05:37,871
介绍了基础知识后
现在您有了一个想法

96
00:05:37,871 --> 00:05:40,941
什么是 Transferable
且如何使用

97
00:05:40,941 --> 00:05:43,477
我们看看
如何向我们 App 中的模型

98
00:05:43,477 --> 00:05:47,514
添加
遵循 Transferable 协议

99
00:05:47,514 --> 00:05:51,885
正如我之前提到的
我们的 App 中有四种要分享的

100
00:05:51,885 --> 00:05:54,821
模型类型

101
00:05:54,821 --> 00:05:58,959
其中一个是字符串
已经遵循 Transferable

102
00:05:58,959 --> 00:06:01,728
我们不需要再对其进行任何操作了

103
00:06:01,728 --> 00:06:05,165
但是单个个人资料
ProfilesArchive

104
00:06:05,165 --> 00:06:09,136
和我想分享的视频呢？

105
00:06:09,136 --> 00:06:11,939
要使类型符合
Transferable

106
00:06:11,939 --> 00:06:15,142
只需实现一个属性

107
00:06:15,142 --> 00:06:17,511
TransferRepresentation

108
00:06:17,511 --> 00:06:22,049
该属性描述了模型将如何被传输

109
00:06:22,049 --> 00:06:25,786
需要注意三个重要的表示形式

110
00:06:25,786 --> 00:06:27,521
CodableRepresentation

111
00:06:27,521 --> 00:06:29,256
DataRepresentation

112
00:06:29,256 --> 00:06:31,358
和 FileRepresentation

113
00:06:31,358 --> 00:06:34,094
我将分别介绍

114
00:06:34,094 --> 00:06:39,066
但首先 先研究
我们最重要的模型 Profile 结构

115
00:06:39,066 --> 00:06:43,070
其包括 ID 姓名 简历
或许还包括有趣的事迹

116
00:06:43,070 --> 00:06:46,106
肖像和视频

117
00:06:46,106 --> 00:06:48,742
Profile 结构
已符合 Codable

118
00:06:48,742 --> 00:06:52,112
因此 我们可以将
CodableRepresentation

119
00:06:52,112 --> 00:06:56,049
包含到我们的
Transferable 一致性中

120
00:06:56,049 --> 00:06:59,019
Codable 表示使用编码器

121
00:06:59,019 --> 00:07:02,022
将个人资料转换为二进制数据

122
00:07:02,022 --> 00:07:05,158
并且解码器进行相反的转化

123
00:07:05,158 --> 00:07:09,162
默认情况下
其使用 JSON 但您也可以提供

124
00:07:09,162 --> 00:07:12,566
您自己的编码器/解码器对

125
00:07:12,566 --> 00:07:15,169
想要了解
有关 Codable 协议

126
00:07:15,169 --> 00:07:18,005
以及编码器和解码器
工作原理的更多信息

127
00:07:18,005 --> 00:07:22,276
我邀请您观看首次引入此协议的

128
00:07:22,276 --> 00:07:26,413
WWDC 讲座：“可信任的数据”

129
00:07:26,413 --> 00:07:28,348
回到我们的个人资料

130
00:07:28,348 --> 00:07:31,018
Codable 唯一需要的

131
00:07:31,018 --> 00:07:34,254
就是了解所需的内容类型

132
00:07:34,254 --> 00:07:37,124
由于这是一种自定义格式

133
00:07:37,124 --> 00:07:41,562
所以我们将使用
自定义声明的统一类型标识符

134
00:07:41,562 --> 00:07:45,666
添加个人资料内容类型后
我们就可以开始了

135
00:07:45,666 --> 00:07:49,603
Profile 现在符合
Transferable 了！

136
00:07:49,603 --> 00:07:54,441
现在 我们看一下另一种类型
ProfilesArchive

137
00:07:54,441 --> 00:07:58,078
其已经支持转换为 CSV 数据

138
00:07:58,078 --> 00:08:02,749
我可以在 CSV 文件中
导出女性个人资料列表

139
00:08:02,749 --> 00:08:08,522
然后可以与朋友分享
或将其导入另一台计算机

140
00:08:08,522 --> 00:08:13,760
存档可以和数据之间来回转换

141
00:08:13,760 --> 00:08:18,432
这意味着我们可以用
DataRepresentation

142
00:08:18,432 --> 00:08:20,434
如果我们研究的更深一点 就会发现

143
00:08:20,434 --> 00:08:23,737
DataRepresentation
使用转换函数

144
00:08:23,737 --> 00:08:26,740
来直接创建二进制表示形式

145
00:08:26,740 --> 00:08:30,677
并重建接收器的值

146
00:08:30,677 --> 00:08:34,114
这就是用
DataRepresentation

147
00:08:34,114 --> 00:08:36,583
可以很容易地
符合 Transferable

148
00:08:36,583 --> 00:08:41,388
只需调用我们已有的两个函数

149
00:08:41,388 --> 00:08:46,560
初始化函数和转换为 CSV 的函数

150
00:08:46,560 --> 00:08:50,163
如果个体资料附有视频

151
00:08:50,163 --> 00:08:53,867
我还希望能将其拖动或分享

152
00:08:53,867 --> 00:08:55,569
但是视频可能很大

153
00:08:55,569 --> 00:08:58,472
我不想让其加载到内存中

154
00:08:58,472 --> 00:09:02,109
这时候就应该用到
FileRepresentation

155
00:09:02,109 --> 00:09:04,311
如果我们再次深究

156
00:09:04,311 --> 00:09:06,780
我们会发现
FileRepresentation

157
00:09:06,780 --> 00:09:09,983
把已提供的 URL
传递给了接收器

158
00:09:09,983 --> 00:09:14,821
并用 URL 为接收器
重建了 Transferable 项

159
00:09:14,821 --> 00:09:18,025
FileRepresentation
允许我们共享项目

160
00:09:18,025 --> 00:09:21,862
且该项目由写入磁盘的
二进制表示形式支持

161
00:09:21,862 --> 00:09:23,597
例如文件

162
00:09:23,597 --> 00:09:25,132
我们总结一下

163
00:09:25,132 --> 00:09:27,734
如果您只想为一个简单的用例

164
00:09:27,734 --> 00:09:29,570
选择一个表示形式

165
00:09:29,570 --> 00:09:32,840
首先检查模型
是否具有 Codable 一致性

166
00:09:32,840 --> 00:09:37,077
并且是否没有
任何特定的二进制格式要求

167
00:09:37,077 --> 00:09:40,581
如果具有一致性 便使用
CodableRepresentation

168
00:09:40,581 --> 00:09:45,052
如果不具有 请检查
模型存储在内存中还是磁盘上

169
00:09:45,052 --> 00:09:48,188
如果存储在内存中 那么
DataRepresentation 再适合不过了

170
00:09:48,188 --> 00:09:51,558
如果在磁盘上
则是 FileRepresetnation

171
00:09:51,558 --> 00:09:54,962
Transferable
不仅涵盖简单的用例

172
00:09:54,962 --> 00:09:57,397
还有一些复杂的用例

173
00:09:57,397 --> 00:10:01,401
大多数情况下
只需几行代码便都可解决

174
00:10:01,401 --> 00:10:04,338
自己去发现吧！

175
00:10:04,338 --> 00:10:07,040
之前 我们向个人资料中添加了

176
00:10:07,040 --> 00:10:10,711
Transferable 一致性
现在我们看得更远一些

177
00:10:10,711 --> 00:10:13,380
将个人资料复制到粘贴板

178
00:10:13,380 --> 00:10:16,483
并粘贴到任何文本字段中时

179
00:10:16,483 --> 00:10:19,686
我想粘贴个人资料的名称

180
00:10:19,686 --> 00:10:23,524
这意味着我们
需要额外添加一个表示形式

181
00:10:23,524 --> 00:10:27,361
ProxyRepresentation 允许
其他 Transferable 类型

182
00:10:27,361 --> 00:10:29,930
来表示我们的模型

183
00:10:29,930 --> 00:10:34,968
只需一行 个人资料便可粘贴为文本

184
00:10:34,968 --> 00:10:37,771
请注意
我是在 Codable 之后

185
00:10:37,771 --> 00:10:41,475
添加的 ProxyRepresentation
顺序不能反

186
00:10:41,475 --> 00:10:44,144
接收器将使用第一种表示形式

187
00:10:44,144 --> 00:10:47,014
和其支持的内容类型

188
00:10:47,014 --> 00:10:50,984
如果接收器检测到
我们的自定义内容类型 Profile

189
00:10:50,984 --> 00:10:52,553
便应让其使用

190
00:10:52,553 --> 00:10:55,556
如果没有检测到 但其支持文本类型

191
00:10:55,556 --> 00:11:00,761
便要让其使用
ProxyRepresentation

192
00:11:00,761 --> 00:11:04,698
现在 Profile
支持编码器/解码器转换

193
00:11:04,698 --> 00:11:07,501
并支持转换为文本

194
00:11:07,501 --> 00:11:09,603
本例中的
ProxyRepresentation

195
00:11:09,603 --> 00:11:12,039
仅描述导出为文本

196
00:11:12,039 --> 00:11:15,442
不从中重建配置文件

197
00:11:15,442 --> 00:11:20,714
任何表示形式都
可以描述两种或一种转换

198
00:11:20,714 --> 00:11:24,551
现在 我们了解了
ProxyRepresentations

199
00:11:24,551 --> 00:11:26,954
我们需要对视频应用

200
00:11:26,954 --> 00:11:28,622
FileRepresentation 吗？

201
00:11:28,622 --> 00:11:31,491
我们可以使用带有 URL 的代理

202
00:11:31,491 --> 00:11:33,760
差异很小

203
00:11:33,760 --> 00:11:37,064
FileRepresentation
是用来处理

204
00:11:37,064 --> 00:11:38,432
写入磁盘的 URL

205
00:11:38,432 --> 00:11:42,569
并通过授予临时沙盒扩展程序

206
00:11:42,569 --> 00:11:46,106
来确保接收器
可以访问此文件或其副本

207
00:11:46,106 --> 00:11:49,376
ProxyRepresentation
处理 URL 的方式

208
00:11:49,376 --> 00:11:53,146
与处理其他 Transferable 项一样
例如字符串

209
00:11:53,146 --> 00:11:55,983
其不具备我们对文件所需的

210
00:11:55,983 --> 00:11:58,485
任何这些附加功能

211
00:11:58,485 --> 00:12:01,088
这意味着两个都可以使用

212
00:12:01,088 --> 00:12:04,191
首先是 FileRepresentation

213
00:12:04,191 --> 00:12:06,927
允许接收器访问电影文件

214
00:12:06,927 --> 00:12:08,929
及其内容

215
00:12:08,929 --> 00:12:11,665
当我将已复制的
视频粘贴到文本字段中时

216
00:12:11,665 --> 00:12:15,269
将用到 ProxyRepresentation

217
00:12:15,269 --> 00:12:18,305
因此 以上两种
处理 URL 的方式

218
00:12:18,305 --> 00:12:21,108
有很大不同

219
00:12:21,108 --> 00:12:26,713
在第一种情况下
实际有效负载是磁盘上的资产

220
00:12:26,713 --> 00:12:31,218
第二种情况下 有效负载是可以指向

221
00:12:31,218 --> 00:12:35,422
远程网站的 URL 结构本身

222
00:12:35,422 --> 00:12:39,993
我还想升级另一个模型
ProfilesArchive

223
00:12:39,993 --> 00:12:43,830
在某些情况下
其不支持转换为 CSV

224
00:12:43,830 --> 00:12:46,934
我想在代码中体现这一点

225
00:12:46,934 --> 00:12:48,168
我们一起看看

226
00:12:48,168 --> 00:12:52,973
我们添加一个布尔属性
来弄清是否可以导出为 CSV

227
00:12:52,973 --> 00:12:57,878
和数据间的转换函数

228
00:12:57,878 --> 00:13:03,016
为了将这个想法在代码中体现
我们可以使用 .exportingCondition

229
00:13:03,016 --> 00:13:05,786
如果给定的存档不支持 CSV

230
00:13:05,786 --> 00:13:09,489
则存档不会以这种格式导出

231
00:13:09,489 --> 00:13:11,992
使用此 API 您甚至可以构建

232
00:13:11,992 --> 00:13:14,228
customTransferRepresentation

233
00:13:14,228 --> 00:13:16,930
就像 SwiftUI 中的
customViews 一样

234
00:13:16,930 --> 00:13:20,300
只需要提供 body 属性

235
00:13:20,300 --> 00:13:22,503
您就可以在其中以您想要的方式

236
00:13:22,503 --> 00:13:24,905
配置其他表示形式

237
00:13:24,905 --> 00:13:27,107
如果您想重新使用表示形式的组合

238
00:13:27,107 --> 00:13:29,476
或者您有一些不想公开的

239
00:13:29,476 --> 00:13:32,045
私有数据表示形式

240
00:13:32,045 --> 00:13:35,249
这种方法都会起到很大的作用

241
00:13:35,249 --> 00:13:38,685
Transferable 帮助我
快速构建了这个 App

242
00:13:38,685 --> 00:13:42,723
并拥有了我想要的所有功能

243
00:13:42,723 --> 00:13:46,460
我希望它可以帮助您在最短的时间里

244
00:13:46,460 --> 00:13:49,463
构建出功能最丰富的 App

245
00:13:49,463 --> 00:13:51,665
感谢您参加本期讲座

246
00:13:51,665 --> 00:13:54,201
祝您可以设计出最棒的 App！

247
00:13:54,201 --> 00:13:58,472
♪

