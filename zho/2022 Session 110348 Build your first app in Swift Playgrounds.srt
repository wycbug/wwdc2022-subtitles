1
00:00:00,334 --> 00:00:06,340
[欢快的音乐]

2
00:00:09,309 --> 00:00:13,447
欢迎来到“在 Swift Playgrounds 中
构建您的首个 App”

3
00:00:13,480 --> 00:00:17,684
我是 Swift Playgrounds 团队的工程师
Collett Charlton

4
00:00:17,718 --> 00:00:19,019
我是 Connor Wakamo

5
00:00:19,052 --> 00:00:21,588
Swift Playgrounds 团队的
另一位工程师

6
00:00:21,622 --> 00:00:26,159
Swift Playgrounds
是学习 Swift 编码的绝佳工具

7
00:00:26,193 --> 00:00:31,498
现在您可以更进一步
可以通过它构建 App！

8
00:00:31,532 --> 00:00:36,170
今天 我们将介绍在 Swift Playgrounds 中
如何从一个空白模版

9
00:00:36,203 --> 00:00:38,472
构建一个 App

10
00:00:38,505 --> 00:00:42,809
然后我们将展示
如何使用预览和控制台进行调试

11
00:00:42,843 --> 00:00:46,446
最后 我们会将 App
提交给 TestFlight

12
00:00:48,282 --> 00:00:52,719
我们的团队非常喜欢泡茶和喝茶

13
00:00:52,753 --> 00:00:56,857
我们非常喜欢这个活动
以至于我们想为此制作一个 App

14
00:00:56,890 --> 00:01:01,094
Connor 和我将构建一个 App
来帮助我们在下午茶时间

15
00:01:01,128 --> 00:01:06,033
提供给我们一份茶清单
用来帮助我们选择每天喝什么

16
00:01:06,066 --> 00:01:09,970
Swift Playgrounds
在 Mac 和 iPad 上工作得很好

17
00:01:10,003 --> 00:01:11,738
因为我今天带着 Mac 电脑

18
00:01:11,772 --> 00:01:15,008
所以我要开始在这里构建这个 App

19
00:01:17,044 --> 00:01:20,614
无论您是编程新手
还是经验丰富的开发者

20
00:01:20,647 --> 00:01:25,018
Swift Playgrounds
都会为您提供开始编程的

21
00:01:25,052 --> 00:01:26,753
各种模版和教学内容

22
00:01:26,787 --> 00:01:31,391
对于开发我们的选茶 App
我们要首先单击空白 App 模板

23
00:01:31,425 --> 00:01:33,827
它在屏幕的左下角

24
00:01:37,431 --> 00:01:40,801
现在我们有了模板 让我们双击打开

25
00:01:42,636 --> 00:01:48,442
好了 右侧的实时交互式预览里
显示了“Hello World”文本

26
00:01:50,777 --> 00:01:55,549
在我们开始写代码前 要使用 App 设置
对程序进行一些功能的自定义

27
00:01:55,582 --> 00:01:58,485
为此 我需要单击边栏左上角的

28
00:01:58,519 --> 00:02:00,988
App Settings (App 设置) 按钮

29
00:02:02,356 --> 00:02:06,660
在这里 您可以自定义各种项目属性
例如 App 名称

30
00:02:06,693 --> 00:02:08,695
和主题颜色

31
00:02:08,729 --> 00:02:12,399
您还可以添加自定义
或占位符程序图标

32
00:02:12,432 --> 00:02:17,437
软件功能或用途的
描述字符串和 Bundle ID

33
00:02:17,471 --> 00:02:20,274
我会将 App 的名称
更改为“Tea Time”

34
00:02:23,477 --> 00:02:25,679
然后将主题颜色设置为棕色

35
00:02:27,047 --> 00:02:30,217
然后把程序图标换成
咖啡杯的占位符图标

36
00:02:32,252 --> 00:02:35,756
好的 现在重要的部分已经设置完毕

37
00:02:35,789 --> 00:02:39,393
让我们通过选择模板文本
开始编写一些代码

38
00:02:39,426 --> 00:02:43,163
并将其替换为
我们在库中的第一个视图

39
00:02:44,131 --> 00:02:50,237
可以通过单击项目工具栏
中的加号按钮访问库

40
00:02:50,270 --> 00:02:53,807
它包含易于使用的
代码片段 如：视图

41
00:02:53,841 --> 00:02:59,379
修饰符、SF 符号和颜色

42
00:02:59,413 --> 00:03:03,016
我们将使用列表视图
来显示我们的茶列表

43
00:03:03,050 --> 00:03:07,921
所以我将在搜索中键入 list (列表)
并单击将其插入代码段

44
00:03:11,258 --> 00:03:14,895
现在我们有了列表视图
下面向其中添加一些茶的项目

45
00:03:16,363 --> 00:03:19,132
我将开始输入文本…

46
00:03:19,166 --> 00:03:20,734
并使用回车键

47
00:03:20,767 --> 00:03:23,670
从内联代码完成面板

48
00:03:23,704 --> 00:03:26,240
接受并插入建议的完整代码

49
00:03:30,711 --> 00:03:35,048
好的 现在我们的列表视图里
有了一个茶项目

50
00:03:35,082 --> 00:03:36,884
让我们再添加一些

51
00:03:42,289 --> 00:03:46,460
等等 我好像不小心
加了两次“茉莉绿茶”

52
00:03:46,493 --> 00:03:51,431
为了避免我们输入重复 我们应该
将它们存储为 orderedSet

53
00:03:51,465 --> 00:03:56,069
幸运的是 Apple 的 swift-collection 包
提供了这一功能

54
00:03:56,103 --> 00:03:59,306
所以 让我们将 swift-collection 包
添加到我们的项目中

55
00:04:00,574 --> 00:04:04,578
为此 让我们打开“文件”菜单
并选择 Add Package (添加软件包)

56
00:04:07,681 --> 00:04:11,985
我将首先输入 swift-collections 包
的 URL 地址

57
00:04:12,019 --> 00:04:12,853
然后按回车键

58
00:04:17,357 --> 00:04:20,294
获取包后 我们需要查看包的版本

59
00:04:20,327 --> 00:04:23,664
以及其他可以添加到
我们项目中的功能

60
00:04:23,697 --> 00:04:28,335
对于这个 App 我们将只选择 Collections (合集)
然后单击 Add to Project (添加至项目)

61
00:04:31,772 --> 00:04:36,577
现在我们在 Packages 下的侧边栏中将
swift-collections 添加到我们的项目中

62
00:04:36,610 --> 00:04:41,381
让我们创建一个 String 类型的
OrderedSet 用来存储我们的茶列表

63
00:04:47,421 --> 00:04:50,824
等等 好像我们的程序有点问题

64
00:04:50,858 --> 00:04:53,393
让我们通过点击问题图标来看看

65
00:04:54,928 --> 00:04:57,497
“在范围内找不到类型有序集”

66
00:04:57,531 --> 00:05:00,701
哦 我明白是什么问题了

67
00:05:00,734 --> 00:05:03,937
我忘记在我们的项目中导入
Collections 模块

68
00:05:03,971 --> 00:05:06,373
现在让我们导入它
问题应该能得到解决

69
00:05:13,046 --> 00:05:15,582
现在我们已经解决了这个问题

70
00:05:15,616 --> 00:05:19,419
下面让我们更新列表视图
以使用我们刚刚创建的集合

71
00:05:19,453 --> 00:05:22,656
为此 我们需要
使用 ForEach 视图

72
00:05:43,577 --> 00:05:45,712
好的 这里就有内容了

73
00:05:45,746 --> 00:05:49,449
我们的列表正在从
茶集合中展示各种茶的信息

74
00:05:49,483 --> 00:05:51,919
在我做这个项目时

75
00:05:51,952 --> 00:05:55,789
我对要添加的功能
产生了越来越多的想法

76
00:05:55,822 --> 00:06:00,127
如果我们的 App 可以听到
茶壶的叫声那就太酷了

77
00:06:00,160 --> 00:06:02,896
可以让我们知道什么时候倒茶

78
00:06:02,930 --> 00:06:05,165
我现在还不打算添加这个功能

79
00:06:05,199 --> 00:06:07,835
但让我们先来看看 将采取哪些做法

80
00:06:07,868 --> 00:06:12,105
才能向用户解释清楚为什么
我们的 App 需要使用麦克风

81
00:06:13,173 --> 00:06:17,344
要添加它
让我们回到我们的 App 设置

82
00:06:17,377 --> 00:06:19,346
并单击 Capability (功能)

83
00:06:20,714 --> 00:06:23,650
使用右上角的加号按钮

84
00:06:23,684 --> 00:06:27,020
我们将看到
可以添加到项目中的功能列表

85
00:06:27,054 --> 00:06:30,490
让我们找到“麦克风”
并点击“Add”将其添加

86
00:06:31,358 --> 00:06:35,963
对于目标描述字符串
我们将编写：“Tea Time 使用麦克风

87
00:06:35,996 --> 00:06:38,265
监听茶壶的声音”

88
00:06:38,298 --> 00:06:41,702
然后单击“Add”
关闭 App 设置

89
00:06:44,738 --> 00:06:49,476
好的 我们今天做了很多
并且我非常高兴为您分享这个项目

90
00:06:49,510 --> 00:06:52,212
以及我与 Connor
在这个项目之中那些很酷的想法

91
00:06:53,780 --> 00:06:57,818
我会与 Connor 在我们共享的
iCloud 文件夹中共享这个项目

92
00:06:57,851 --> 00:07:01,955
但首先 我们要给它起一个比
My App 更好听的文件名称

93
00:07:08,795 --> 00:07:12,566
现在 我需要将文件拖拽到
iCloud 共享文件夹中

94
00:07:15,335 --> 00:07:20,007
我已完成我的工作内容 现在我将
交给 Connor 来完成这个 App

95
00:07:20,040 --> 00:07:23,844
谢谢 Collett 我会在
iPad 上完成优化这个项目

96
00:07:23,877 --> 00:07:26,980
由于我们是通过 iCloud 共享文件夹
来共享我们的项目文件

97
00:07:27,014 --> 00:07:29,583
因此项目文件没有出现在
Swift Playgrounds 的项目的主列表中

98
00:07:29,616 --> 00:07:32,119
但如果
我点击 Locations (位置)

99
00:07:32,152 --> 00:07:34,888
我就可以从
iCloud 访问项目文件

100
00:07:34,922 --> 00:07:37,758
或者甚至可以从
第三方文件提供商获取

101
00:07:37,791 --> 00:07:39,760
现在我已经处于
我们的共享文件夹中

102
00:07:39,793 --> 00:07:42,829
所以我会点击
Tea Time 文件来打开项目

103
00:07:42,863 --> 00:07:47,067
我所做的任何程序更改
都会自动更新这个共享项目

104
00:07:47,100 --> 00:07:49,803
看起来 Collett
是个很好的工程师

105
00:07:49,837 --> 00:07:53,473
把只添加了一些额外功能
的项目文件上传到 iCloud

106
00:07:53,507 --> 00:07:57,578
她在这里实现了一个 TabView 控件
所以我们的项目不只有一个茶列表

107
00:07:57,611 --> 00:07:59,847
同时它还是一个助手类程序

108
00:07:59,880 --> 00:08:01,782
如果我点击 Assistant (助手) 选项卡

109
00:08:01,815 --> 00:08:04,952
可以看到它非常简单 但可以工作

110
00:08:04,985 --> 00:08:08,555
我可以做一个推荐功能
并且提供一些可能要喝的茶的建议

111
00:08:09,957 --> 00:08:12,726
看来今天我应该喝茉莉清茶

112
00:08:13,694 --> 00:08:17,064
现在我知道 Collett
正在制作一种有趣的选茶新方法

113
00:08:17,097 --> 00:08:18,966
为它添加一些有趣的风格

114
00:08:18,999 --> 00:08:21,134
让我们打开侧边栏来找找看

115
00:08:23,403 --> 00:08:26,874
看起来 TeaWheelView
像是我们正在找的 所以让我们打开它

116
00:08:28,408 --> 00:08:31,945
我们看到
这里有一个收集数据集的视图

117
00:08:31,979 --> 00:08:34,982
让我们添加一个视图预览
以便我们可以

118
00:08:35,015 --> 00:08:37,584
在 TeaWheelView
添加到主程序之前 先看看效果

119
00:08:37,618 --> 00:08:39,520
滑到文件的底部

120
00:08:42,856 --> 00:08:45,325
然后输入“PreviewProvider”

121
00:08:47,060 --> 00:08:50,531
在这里我将通过按回车键
来应用代码完成建议

122
00:08:50,564 --> 00:08:54,234
然后将其命名为
TeaWheelView_Previews

123
00:08:56,436 --> 00:08:59,506
在右侧预览区域的底部
此时出现页面切换箭头

124
00:08:59,540 --> 00:09:03,544
这表示 Swift Playgrounds
可以识别我的程序

125
00:09:03,577 --> 00:09:07,681
如果我点击
App 预览下方的右箭头…

126
00:09:07,714 --> 00:09:11,618
这样就可以只使用我的视图预览
而不是使用 App 的预览

127
00:09:11,652 --> 00:09:13,620
现在这里只显示了
“Hello, world!”

128
00:09:13,654 --> 00:09:16,657
那么现在让我们添加一些代码
来创建 TeaWheelView

129
00:09:16,690 --> 00:09:20,694
首先 我将添加一个
包含一些条目的数组 作为静态属性

130
00:09:20,727 --> 00:09:23,030
以便于我的预览可以使用它们

131
00:09:29,436 --> 00:09:31,972
我会将光标放在两个方括号之间

132
00:09:32,005 --> 00:09:35,976
然后通过拖动右括号添加占位符

133
00:09:40,447 --> 00:09:44,551
接下来我将用
条目内容描述字符串替换这些占位符

134
00:09:52,626 --> 00:09:56,029
现在我们已经有了一些条目
让我们把它添加至 TeaWheelView

135
00:09:56,063 --> 00:09:57,865
我会选择 Hello, world! 示例

136
00:09:57,898 --> 00:10:01,001
然后将其替换为显示刚创建的条目的
TeaWheelView 实例

137
00:10:10,811 --> 00:10:12,813
我还需要
添加一点 padding 空间

138
00:10:16,049 --> 00:10:19,019
太好了 现在我们的视图预览里
显示了一个轮盘

139
00:10:19,052 --> 00:10:20,888
多漂亮的轮盘

140
00:10:20,921 --> 00:10:26,527
我可以旋转它 它会根据
停止的位置 来选择不同的条目

141
00:10:26,560 --> 00:10:30,631
让我们回到助手选项卡
并添加这个轮盘

142
00:10:30,664 --> 00:10:34,768
我将使用侧边栏打开名为
AssistantTab Swift 文件

143
00:10:34,801 --> 00:10:38,238
我将删除 Button 控件
并将其替换为 TeaWheelView

144
00:10:48,749 --> 00:10:51,451
TeaWheelView 可以通过
使用可选的操作闭包

145
00:10:51,485 --> 00:10:53,720
当轮盘停止旋转时调用

146
00:10:55,622 --> 00:11:00,494
我会用它把上一次选择的茶
设置为 “选定的茶”

147
00:11:00,527 --> 00:11:05,399
然后将 showPickAlert
设置为 true 以便 SwiftUI 显示告警信息

148
00:11:08,869 --> 00:11:12,339
好的太棒了 我们已把轮盘编辑好了
那么现在让我们来试试吧

149
00:11:12,372 --> 00:11:17,411
我会旋转它…
然后它建议我喝字节乌龙茶

150
00:11:17,444 --> 00:11:19,546
我再刷一遍…

151
00:11:22,015 --> 00:11:24,251
还是字节乌龙茶

152
00:11:24,284 --> 00:11:25,919
再一次

153
00:11:28,856 --> 00:11:31,391
唔 似乎有些不对劲

154
00:11:31,425 --> 00:11:33,627
即使它落在轮盘上的不同位置

155
00:11:33,660 --> 00:11:36,830
程序还总是推荐字节乌龙

156
00:11:36,864 --> 00:11:40,634
虽然那是一种很好的茶
但我还是想要一些多样性的选择

157
00:11:40,667 --> 00:11:43,370
让我们切换回轮盘视图
并试着查查到底怎么回事

158
00:11:45,405 --> 00:11:47,341
从这里看不出哪里出了问题

159
00:11:47,374 --> 00:11:50,410
因为轮盘确实旋转了
并降落在不同的位置

160
00:11:50,444 --> 00:11:52,880
让我们在视图预览中
添加一个打印语句

161
00:11:52,913 --> 00:11:55,048
以便于检查预览是否也出了问题

162
00:12:02,656 --> 00:12:04,458
现在 当我转动轮盘时…

163
00:12:05,993 --> 00:12:09,463
在源编辑器的左下方会
弹出一条控制台消息

164
00:12:09,496 --> 00:12:11,765
条目一…

165
00:12:11,798 --> 00:12:15,035
条目一…条目一

166
00:12:15,068 --> 00:12:18,338
啊哈 每次旋转都会给我们条目一

167
00:12:18,372 --> 00:12:21,175
这表明某些功能
并没有正确的关联起来

168
00:12:21,208 --> 00:12:23,877
因为它每次都给我第一个条目

169
00:12:23,911 --> 00:12:28,215
我将首先使用项目范围内
的查找进行搜索

170
00:12:28,248 --> 00:12:30,484
我将点击位于屏幕左侧的
侧边栏顶部

171
00:12:30,517 --> 00:12:33,120
的搜索框

172
00:12:33,153 --> 00:12:36,557
然后键入“first”
并按回车键

173
00:12:38,458 --> 00:12:41,428
这个结果看起来像是我正在找的
所以我会点击它

174
00:12:42,896 --> 00:12:45,933
啊 看来 Collett 在这里
留下了一些调试代码

175
00:12:45,966 --> 00:12:50,103
这使轮盘每次都返回第一个条目
而不是正确的结果

176
00:12:50,137 --> 00:12:52,940
让我们快速修改它 然后再旋转一次

177
00:13:00,047 --> 00:13:01,715
条目二 …

178
00:13:01,748 --> 00:13:03,217
条目四

179
00:13:03,250 --> 00:13:05,652
太好了！
看起来它已经可以正常工作了

180
00:13:05,686 --> 00:13:07,788
如果我们通过点击预览下方的左箭头

181
00:13:07,821 --> 00:13:10,524
切换回我们的 App 预览

182
00:13:10,557 --> 00:13:13,260
我们就可以在真实的
App 中测试一下功能

183
00:13:13,293 --> 00:13:18,198
转动轮盘 然后它推荐给我英式早餐茶

184
00:13:18,232 --> 00:13:20,701
所以现在我们有了一个助手功能

185
00:13:20,734 --> 00:13:24,571
太厉害了！为了确认 App
在各种屏幕尺寸下都能正常工作

186
00:13:24,605 --> 00:13:28,008
我可以通过按下
屏幕左上角的 Run (运行) 按钮

187
00:13:28,041 --> 00:13:29,943
让它在这个设备的
真实窗口中运行程序

188
00:13:33,413 --> 00:13:35,616
好的 看起来 所有功能都在这里了

189
00:13:35,649 --> 00:13:38,685
我有我的茶单功能

190
00:13:38,719 --> 00:13:41,255
和包含一个轮盘的助手功能

191
00:13:41,288 --> 00:13:43,524
我可以通过点击
状态栏右侧的小 Swift 图标

192
00:13:43,557 --> 00:13:46,260
返回 Swift
Playgrounds 项目

193
00:13:46,293 --> 00:13:50,130
然后在弹出的视窗中
选择 Show Project (显示项目) 按钮

194
00:13:52,299 --> 00:13:56,103
我已准备好 我与朋友和家人
一起测试这个 App

195
00:13:56,136 --> 00:13:58,405
Swift Playgrounds
让测试变得容易

196
00:13:58,438 --> 00:14:00,340
因为您可以从 Swift Playgrounds

197
00:14:00,374 --> 00:14:02,009
把项目直接提交到 TestFlight

198
00:14:02,042 --> 00:14:07,481
如果我打开 App Settings
并滚动到底部

199
00:14:07,514 --> 00:14:10,250
您会看到有一个
“Upload to App Store Connect”的按钮

200
00:14:10,284 --> 00:14:14,121
如果我点击这个按钮 Swift Playgrounds
会完成创建 App 记录

201
00:14:14,154 --> 00:14:17,658
以及将 App 上传到
App Store Connect 的所有麻烦工作

202
00:14:17,691 --> 00:14:21,495
这样我就可以将它发布到
TestFlight 并最终发布到 App Store

203
00:14:27,935 --> 00:14:31,405
现在我的 App 已上传
我可以前往 App Store Connect

204
00:14:31,438 --> 00:14:33,740
并将其提交给 Beta App Review

205
00:14:33,774 --> 00:14:36,844
稍等片刻后
我们可以转到 TestFlight

206
00:14:36,877 --> 00:14:39,980
并从那里安装它
甚至可以安装在 iPhone 上

207
00:14:42,549 --> 00:14:45,118
我将点击 Install (安装)
来安装 Tea Time

208
00:14:46,486 --> 00:14:50,290
现在它已安装
我点击 Open (打开) 按钮将其打开

209
00:14:50,324 --> 00:14:52,826
我会点击测试按钮

210
00:14:52,860 --> 00:14:55,596
这里会显示
关于如何提供反馈的说明

211
00:14:57,030 --> 00:15:00,534
好了 我们的 App
正在 iPhone 上运行

212
00:15:00,567 --> 00:15:02,603
我今天应该喝什么茶？

213
00:15:04,771 --> 00:15:07,374
看起来我要参加
Matt P 的茶话会了

214
00:15:07,407 --> 00:15:10,944
今天 Collett 和我向您展示了
如何使用 Swift Playgrounds

215
00:15:10,978 --> 00:15:13,480
在 Mac 和 iPad 上构建 App

216
00:15:13,514 --> 00:15:17,217
我们演示了如何使用库和代码
完成插入新的代码

217
00:15:17,251 --> 00:15:20,487
我们通过 iCloud 共享文件夹
分享了我们的项目

218
00:15:20,521 --> 00:15:24,758
我们使用视图预览和控制台
来调试我们的代码问题

219
00:15:24,791 --> 00:15:28,328
我们甚至直接从 iPad 向
TestFlight 提交了一个 App

220
00:15:28,362 --> 00:15:30,697
希望您在此过程中学到了一些内容

221
00:15:30,731 --> 00:15:33,667
我们迫不及待地想看看
您使用 Swift Playgrounds 构建的内容

222
00:15:33,700 --> 00:15:37,938
感谢您的收看
希望您享受 WWDC 的其他讲座

