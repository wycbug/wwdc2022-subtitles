1
00:00:00,334 --> 00:00:07,341
♪ ♪

2
00:00:09,743 --> 00:00:12,546
MaryAshley Etefia: 大家好
我是 MaryAshley Etefia

3
00:00:12,579 --> 00:00:15,349
我是 Screen Time 的
软件工程师

4
00:00:15,382 --> 00:00:18,886
新冠病毒给我们行业带来了
很大的压力

5
00:00:18,919 --> 00:00:23,624
我们需要应对数字健康
和生产率资源方面急剧增长的需求

6
00:00:23,657 --> 00:00:26,527
新冠病毒增强了我们社会
对平衡的需求

7
00:00:26,560 --> 00:00:29,796
成功将大家的能力用于管理
个人空间

8
00:00:29,830 --> 00:00:31,565
以供测试

9
00:00:31,598 --> 00:00:34,935
去年 我们
推出了 Screen Time API

10
00:00:34,968 --> 00:00:37,538
让您可以构建新的 App
帮助用户

11
00:00:37,571 --> 00:00:40,607
管理孩子的设备时间

12
00:00:40,641 --> 00:00:43,410
我们很高兴地看到
大家在使用我们的产品时

13
00:00:43,443 --> 00:00:45,579
都有许多极具创意和成效的方法

14
00:00:45,612 --> 00:00:49,583
我也很激动看到大家与我们的
企业文化所说的那样 非同凡响

15
00:00:49,616 --> 00:00:53,487
我们也非常感激过去一年来
收到的所有反馈

16
00:00:53,520 --> 00:00:57,558
在为大家介绍 iOS 16 中
ScreenTime API 的更新前

17
00:00:57,591 --> 00:01:01,828
我先回顾下 iOS 15 发布会上的
一些亮点

18
00:01:01,862 --> 00:01:05,299
去年的 Screen Time API
推出了三个全新框架

19
00:01:05,332 --> 00:01:09,570
Family Controls， Managed Settings
和 Device Activity

20
00:01:09,603 --> 00:01:12,806
在 iOS 15 中 这些框架为
您 App 的家长控制模块

21
00:01:12,840 --> 00:01:14,975
带来了新的可能

22
00:01:15,008 --> 00:01:18,145
我们先来快速浏览下
这三个框架 激活大家的记忆

23
00:01:18,178 --> 00:01:20,447
Family Controls 从根本上说
就是一道闸口

24
00:01:20,480 --> 00:01:23,350
能授权访问 Screen Time API

25
00:01:23,383 --> 00:01:25,719
该框架让您实现避免

26
00:01:25,752 --> 00:01:29,022
家长控制 App 被移除
也可通过不透明的token

27
00:01:29,056 --> 00:01:33,694
来识别 App 和网站
从而保护用户隐私

28
00:01:33,727 --> 00:01:36,997
有了 ManagedSettings
您的 App 可以采取限制来

29
00:01:37,030 --> 00:01:40,567
过滤网络流量 屏蔽活动
这一点与 Screen Time 的功能类似

30
00:01:40,601 --> 00:01:43,837
但根据您 App 的品牌
和功能进行自定义

31
00:01:43,871 --> 00:01:47,241
Device Activity 框架让您可以
在时间窗口的开始和结束时

32
00:01:47,274 --> 00:01:49,943
以及在 App 或网站的使用

33
00:01:49,977 --> 00:01:52,145
超过限值时 执行代码

34
00:01:52,179 --> 00:01:56,950
这三个框架在 iOS 16 中
都有激动人心的更新

35
00:01:56,984 --> 00:02:00,754
这些更新不仅仅让我们的
API 使用更简单

36
00:02:00,787 --> 00:02:04,858
也能提高用户的使用体验

37
00:02:04,892 --> 00:02:08,962
我用 demo App Worklog
来为大家详细解释下

38
00:02:08,996 --> 00:02:12,633
Worklog 可通过在
某个使用指标达到前

39
00:02:12,666 --> 00:02:16,737
限值指定 App 的使用
从而鼓励新专业人员培养好习惯

40
00:02:16,770 --> 00:02:20,107
我为大家演示下
这部 iPhone 的主人 Aniyah

41
00:02:20,140 --> 00:02:24,978
是如何用 iOS 16 的 ScreenTime API
来用这些限制约束自己的

42
00:02:25,012 --> 00:02:27,614
首先是 Family Controls

43
00:02:27,648 --> 00:02:31,485
如果您还有印象的话
iOS 15 中 Family Controls 只能

44
00:02:31,518 --> 00:02:35,455
通过 iCloud 认证
来授权儿童设备

45
00:02:35,489 --> 00:02:39,693
我们很高兴地告诉您 在 iOS 16 中
Family Controls 现在可以

46
00:02:39,726 --> 00:02:43,330
在各自的设备上授权独立用户了

47
00:02:43,363 --> 00:02:47,167
这个新的授权方式意味着
Screen Time API 可以

48
00:02:47,201 --> 00:02:50,070
用于搭建更多功能的 App
而不仅是家长控制

49
00:02:50,103 --> 00:02:52,873
和当前的家长控制授权不同

50
00:02:52,906 --> 00:02:57,344
每个设备的个人授权可以
任意数量的 App 上使用

51
00:02:57,377 --> 00:03:02,182
同时 由于个人授权并不是
为了家长控制这一使用情况搭建的

52
00:03:02,216 --> 00:03:06,854
无需隐式限制 iCloud 登出
或删除 App

53
00:03:06,887 --> 00:03:09,389
我们来看看这个新的授权
如何使用

54
00:03:09,423 --> 00:03:13,160
您启动 App 时第一步
就是为 FamilyControls

55
00:03:13,193 --> 00:03:14,862
请求授权

56
00:03:14,895 --> 00:03:17,130
我用的是共享授权中心

57
00:03:17,164 --> 00:03:20,434
在 Worklog 首次启动时
就要发起请求

58
00:03:20,467 --> 00:03:23,937
这个请求可以更新授权状态

59
00:03:23,971 --> 00:03:26,139
或弹出错误

60
00:03:26,173 --> 00:03:28,876
由于 App 之前没有在
这部 iPhone 上用过

61
00:03:28,909 --> 00:03:32,913
requestAuthorization 会弹出预警
询问 Aniyah 的许可

62
00:03:32,946 --> 00:03:36,149
点击 Allow 可以提示用户

63
00:03:36,183 --> 00:03:40,287
用 面容 ID 触控 ID
或设备密码授权以继续

64
00:03:40,320 --> 00:03:42,656
用户成功授权后

65
00:03:42,689 --> 00:03:46,426
会再次调用 requestAuthorization
但不会提示预警

66
00:03:46,460 --> 00:03:48,529
而是后台成功运行

67
00:03:48,562 --> 00:03:51,265
App 获得 Family Controls 的
授权后

68
00:03:51,298 --> 00:03:54,468
App 的设置中会增加
两个开关

69
00:03:54,501 --> 00:03:57,804
如果 App 有 Screen Time 访问列表
那就在 Screen Time 下

70
00:03:57,838 --> 00:04:01,675
另一个在每个 App 的设置中
标记为 Screen Time Restrictions

71
00:04:01,708 --> 00:04:04,845
家长和个人用户可以
在 Family Controls 中

72
00:04:04,878 --> 00:04:07,581
用这几个开关
解除 App 的授权

73
00:04:07,614 --> 00:04:10,751
如您所见 使用新的个人授权

74
00:04:10,784 --> 00:04:13,887
和使用家长控制授权一样简单

75
00:04:13,921 --> 00:04:17,558
我们对异步使用都做了
很不错的改进

76
00:04:17,591 --> 00:04:20,527
现在 我们来看下
Managed Settings 的更新

77
00:04:20,561 --> 00:04:24,364
Managed Settings 更新后
开发者使用更简便

78
00:04:24,398 --> 00:04:27,401
尤其是使用
Managed Settings Store 时

79
00:04:27,434 --> 00:04:31,471
可能有些开发者还不熟悉
Managed Settings Store 是一个数据储存区

80
00:04:31,505 --> 00:04:34,474
可以将设置
应用到当前用户或设备

81
00:04:34,508 --> 00:04:39,580
在 iOS 15 您每个步骤只能有
一个 Managed Settings Store

82
00:04:39,613 --> 00:04:42,115
您的 App 和设备活动扩展

83
00:04:42,149 --> 00:04:44,818
也要有不同的 Managed Settings Stores

84
00:04:44,852 --> 00:04:48,822
如果根据设备活动来改变设置
就比较困难

85
00:04:48,856 --> 00:04:53,493
现在 在 iOS 16 中
每个步骤您可以创建

86
00:04:53,527 --> 00:04:56,964
高达 50 个Managed Settings Stores
每个都有自己专有的命名

87
00:04:56,997 --> 00:04:59,800
这些命名储存也可自动在
您的 App

88
00:04:59,833 --> 00:05:02,636
和所有 App 扩展中共享

89
00:05:02,669 --> 00:05:07,341
同时 您现在也可以一次性
移除指定命名储存区的所有设置

90
00:05:07,374 --> 00:05:10,844
我为大家演示下 Worklog 是
如何使用命名储存区的

91
00:05:10,878 --> 00:05:14,348
Worklog 首次启动时
Aniyah 的设备已经

92
00:05:14,381 --> 00:05:18,852
成功获得授权 我们创建了
Gaming Managed Settings Store

93
00:05:18,886 --> 00:05:21,255
该储存区包含我们的游戏限制

94
00:05:21,288 --> 00:05:25,792
比如在 Worklog 中
包括屏蔽所有游戏网站

95
00:05:25,826 --> 00:05:29,596
Worklog 也有一个储存区
命名为“Social”

96
00:05:29,630 --> 00:05:33,734
可以在 App 首次运行后
屏蔽所有社交媒体 App 和网站

97
00:05:33,767 --> 00:05:35,402
然而 使用 Worklog 时

98
00:05:35,435 --> 00:05:38,138
Aniyah 可以点击
Allow for Evenings 按钮

99
00:05:38,172 --> 00:05:40,340
创建一个
Device Activity Schedule

100
00:05:40,374 --> 00:05:44,545
允许下午 5:00 至 晚上 8:00 期间
使用社交媒体平台

101
00:05:44,578 --> 00:05:47,948
到了下午 5:00
我们的 Device Activity Monitor

102
00:05:47,981 --> 00:05:49,883
就会解除对应命名储存区的限制

103
00:05:49,917 --> 00:05:53,153
当时间窗口于晚上 8:00 结束后
会重新在 Aniyah 的设备上

104
00:05:53,187 --> 00:05:56,190
对社交媒体 App 和网站
重新应用限制

105
00:05:56,223 --> 00:05:58,225
开发者可能会感到疑惑

106
00:05:58,258 --> 00:06:00,827
“我们的 Gaming store
不是限制了所有游戏网站吗”

107
00:06:00,861 --> 00:06:03,197
“如果清除 Social store 中的
所有设置”

108
00:06:03,230 --> 00:06:05,799
“不会和 Gaming store 的
设置相冲突吗”

109
00:06:05,832 --> 00:06:07,134
答案是否定的

110
00:06:07,167 --> 00:06:11,104
通常优先应用最严格的限制
因此 游戏网站

111
00:06:11,138 --> 00:06:13,774
在 Aniyah 的设备中
还是会保留限制

112
00:06:13,807 --> 00:06:16,743
我们觉得这些新的
命名储存区很强大

113
00:06:16,777 --> 00:06:20,814
会让您用 Managed Settings
开发 App 更简便

114
00:06:20,848 --> 00:06:22,449
但这还没有结束

115
00:06:22,482 --> 00:06:26,386
我们还为 Device Activity 框架
添加了非常激动人心的功能

116
00:06:26,420 --> 00:06:30,057
在 iOS 15 中
Device Activity 让您的 App

117
00:06:30,090 --> 00:06:32,726
可以响应时间窗口的
开始和结束

118
00:06:32,759 --> 00:06:35,596
以及 App 和网站的使用限值

119
00:06:35,629 --> 00:06:40,067
在 iOS 16 中 Device Activity
有一个新的报告服务

120
00:06:40,100 --> 00:06:45,005
让您的 App 可以用 SwiftUI
创建完全自定义的使用报告

121
00:06:45,038 --> 00:06:49,076
使用数据可提供至新的扩展接口
您可以自定义

122
00:06:49,109 --> 00:06:53,080
向客户展示哪些数据
以及如何在屏幕上渲染

123
00:06:53,113 --> 00:06:56,116
这些设备活动报告让您可以

124
00:06:56,149 --> 00:06:58,285
完全自定义用户体验

125
00:06:58,318 --> 00:07:02,222
同时为终端用户提供完整隐私

126
00:07:02,256 --> 00:07:06,059
在 Worklog 中 您可以看到我们
建立了 Device Activity Report Context

127
00:07:06,093 --> 00:07:08,762
和 Device Activity Filter

128
00:07:08,795 --> 00:07:11,064
您可以
将 Device Activity Report Context

129
00:07:11,098 --> 00:07:13,500
当成自定义类型 可提示您的报告

130
00:07:13,534 --> 00:07:17,604
根据 Device Activity 数据
绘制哪种视图

131
00:07:17,638 --> 00:07:20,841
您可以通过指定
Device Activity Filter 来自定义

132
00:07:20,874 --> 00:07:23,177
任意报告内容的时间窗口

133
00:07:23,210 --> 00:07:27,047
然后 我们可以
在 Device Activity Report Scene 中

134
00:07:27,080 --> 00:07:29,516
设置设备活动报告内容的定义

135
00:07:29,550 --> 00:07:32,286
从而提示场景要展示什么内容

136
00:07:32,319 --> 00:07:37,191
我们的内容确定了
自定义配置 PieChartView.Configuration

137
00:07:37,224 --> 00:07:40,661
以及最终报告的 SwiftUI 视图

138
00:07:40,694 --> 00:07:45,432
然后在 makeConfiguration 中
我们映射到 Aniyah 的 Device Activity Data

139
00:07:45,465 --> 00:07:48,969
以补充饼图视图配置

140
00:07:49,002 --> 00:07:50,938
这个框架在抓取到
新的使用数据时

141
00:07:50,971 --> 00:07:56,176
会唤醒 makeConfiguration
这样您无需自己唤醒

142
00:07:56,210 --> 00:07:59,546
这里您可以
看到 PieChartView.Configuration

143
00:07:59,580 --> 00:08:01,782
是如何提供 Aniyah 的
设备活动数据视图

144
00:08:01,815 --> 00:08:05,219
作为我们饼图视图的
视图模型

145
00:08:05,252 --> 00:08:08,455
最后 我们可以通过将其定义到
Device Activity Report 扩展的主体中

146
00:08:08,488 --> 00:08:12,259
渲染自定义 SwiftUI 报告

147
00:08:12,292 --> 00:08:15,429
您自定义设备活动报告
有许多神奇的方法

148
00:08:15,462 --> 00:08:19,132
我们为 Worklog 创建的
饼图报告只是其中之一

149
00:08:19,166 --> 00:08:24,104
其中也包括我们对 iOS 16
Screen Time API 更新的简报

150
00:08:24,137 --> 00:08:27,407
如您所见
Screen Time API 可持续

151
00:08:27,441 --> 00:08:30,410
在安全且能保证隐私的方式下
与首次启动一样支持

152
00:08:30,444 --> 00:08:34,114
如核心限制
和设备活动监控的功能

153
00:08:34,147 --> 00:08:35,315
我们来回顾下

154
00:08:35,349 --> 00:08:38,819
独立用户现在可以
用 Family Controls

155
00:08:38,852 --> 00:08:42,623
授权各设备的多个第三方 App

156
00:08:42,656 --> 00:08:46,159
Managed Settings Stores 现在可以
本地共享 App

157
00:08:46,193 --> 00:08:47,461
和 App 扩展之间的设置

158
00:08:47,494 --> 00:08:49,563
因此 您现在可以在 App 中

159
00:08:49,596 --> 00:08:51,999
管理多个命名储存区

160
00:08:52,032 --> 00:08:57,004
最后 Device Activity 框架
推出了全新的隐私保护 UI

161
00:08:57,037 --> 00:09:01,074
可以向用户展示使用数据
同时也支持自定义

162
00:09:01,108 --> 00:09:03,944
我们相信这些增强和额外功能

163
00:09:03,977 --> 00:09:07,047
能让更多用户使用您的 App

164
00:09:07,080 --> 00:09:09,516
感谢大家为我们更新提供的灵感

165
00:09:09,550 --> 00:09:11,385
也感谢大家未来对数字健康

166
00:09:11,418 --> 00:09:13,921
和生产性空间所做的贡献

167
00:09:13,954 --> 00:09:16,757
我们迫不及待看您如何
以创新 激动人心的方式使用

168
00:09:16,790 --> 00:09:18,325
全新的 Screen Time API 了

169
00:09:18,358 --> 00:09:22,362
我们欢迎大家的反馈
同时也会持续改进这一技术

170
00:09:22,396 --> 00:09:25,566
让其对大家和我们的用户都适用

171
00:09:25,599 --> 00:09:26,700
谢谢

