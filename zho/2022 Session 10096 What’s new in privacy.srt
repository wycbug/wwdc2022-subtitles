1
00:00:00,334 --> 00:00:06,340
[欢快的音乐]

2
00:00:09,676 --> 00:00:12,546
Justin Sagurton: 大家好 我是
Privacy Engineering 部门的 Justin

3
00:00:12,579 --> 00:00:15,415
欢迎收看 “What's new in Privacy”

4
00:00:15,449 --> 00:00:19,686
在 Apple
我们相信隐私是一项基本人权

5
00:00:19,720 --> 00:00:24,758
保护人们的隐私是
我们所做一切的核心

6
00:00:24,791 --> 00:00:29,029
您希望人们喜欢您的 App
并且成为他们生活的一部分

7
00:00:29,062 --> 00:00:32,699
创建一个优秀的功能
是您获得用户关注的方式

8
00:00:32,733 --> 00:00:36,436
而建立隐私是您保持用户信任

9
00:00:36,470 --> 00:00:39,239
和您在他们生活中的地位的方式

10
00:00:39,273 --> 00:00:44,111
当人们了解收集了哪些关于他们的
数据以及如何使用这些数据时

11
00:00:44,144 --> 00:00:46,513
他们就更有可能完全参与到

12
00:00:46,547 --> 00:00:50,450
您的 App 或服务中
而不是选择替代方案

13
00:00:51,618 --> 00:00:55,856
在 Apple 我们优先为用户
提供优秀的

14
00:00:55,889 --> 00:00:57,891
功能和隐私保护

15
00:00:57,925 --> 00:01:01,161
我们也想帮助您把这个服务
传递给您的客户

16
00:01:01,195 --> 00:01:06,567
在 Apple 我们通过一系列
可操作的模式和隐私原则

17
00:01:06,600 --> 00:01:10,971
来实现出色的功能和隐私目标

18
00:01:11,004 --> 00:01:15,742
这些对于您以及如何在您的
App 中建立隐私是个很好的指南

19
00:01:15,776 --> 00:01:18,912
首先是数据最小化

20
00:01:18,946 --> 00:01:23,083
只使用构建功能所需的数据

21
00:01:23,116 --> 00:01:25,719
接着是设备上的处理

22
00:01:25,752 --> 00:01:28,889
如果该功能需要敏感数据

23
00:01:28,922 --> 00:01:33,260
请使用设备的能力
避免与服务器共享

24
00:01:33,293 --> 00:01:36,964
第三是透明度和控制权

25
00:01:36,997 --> 00:01:39,800
如果敏感数据从设备发送出去

26
00:01:39,833 --> 00:01:43,670
请确保人们了解发送的内容
如何使用

27
00:01:43,704 --> 00:01:46,206
并给予他们控制权

28
00:01:46,240 --> 00:01:48,976
最后 安全保护

29
00:01:49,009 --> 00:01:52,579
保护传输中的和存放的敏感数据

30
00:01:52,613 --> 00:01:55,682
无论是在设备上还是在设备外

31
00:01:56,683 --> 00:02:01,989
在这个视频中
我将谈论一些会影响您的平台变化

32
00:02:02,022 --> 00:02:06,093
一些您应该采用的新的隐私增强功能

33
00:02:06,126 --> 00:02:10,430
以及一个影响隐私的重要新功能

34
00:02:12,199 --> 00:02:17,571
首先 我来谈一些
将影响您的 App 的平台变化

35
00:02:17,604 --> 00:02:23,744
iOS 16 和 macOS Ventura
包括几个重要的变化

36
00:02:23,777 --> 00:02:28,115
新的设备名称授权
用于限制对设备名称的访问

37
00:02:29,349 --> 00:02:34,221
位置指示器现在会在
控制中心显示 App 的属性

38
00:02:35,789 --> 00:02:39,159
对 Gatekeeper 的改进
可以在更多地方验证

39
00:02:39,193 --> 00:02:42,262
经过公证的 App 的完整性

40
00:02:43,764 --> 00:02:47,301
现在 在登录时启动 Mac App
会通知人们添加了什么 App

41
00:02:47,334 --> 00:02:49,803
并具有简化的 API

42
00:02:51,371 --> 00:02:55,042
传统的剪贴板访问现在需要许可

43
00:02:55,976 --> 00:03:00,581
我将从更改设备名称访问开始

44
00:03:00,614 --> 00:03:03,016
为了更容易识别设备

45
00:03:03,050 --> 00:03:05,919
用户的 Apple ID 账户名

46
00:03:05,953 --> 00:03:11,225
默认包含在 iOS 设备名中

47
00:03:11,258 --> 00:03:15,495
在 iOS 16 之前
UIDevice API 允许 App

48
00:03:15,529 --> 00:03:18,832
访问用户分配的设备名称

49
00:03:18,866 --> 00:03:23,604
为了更好地使 App
对该值的访问与用户期望保持一致

50
00:03:23,637 --> 00:03:27,741
UIDevice.name API
将返回设备的型号

51
00:03:27,774 --> 00:03:32,980
不是用户分配的名称
也不管人们如何自定义

52
00:03:34,915 --> 00:03:38,852
我们了解到
某些利用设备名称的 App

53
00:03:38,886 --> 00:03:40,687
具有多设备体验

54
00:03:40,721 --> 00:03:44,324
例如让人们清楚地了解
上次编辑文档的位置

55
00:03:45,492 --> 00:03:51,331
如果您的 App 使用多设备功能
并使其在 App 的 UI 中可见

56
00:03:51,365 --> 00:03:55,469
您可以请求访问设备名称的授权

57
00:03:55,502 --> 00:04:00,073
即使有此授权
也不允许与云托管服务提供商

58
00:04:00,107 --> 00:04:04,411
以外的第三方共享设备名称

59
00:04:06,113 --> 00:04:10,417
接下来是更新位置使用属性

60
00:04:11,485 --> 00:04:16,390
当 App 使用位置功能时
iOS 会在状态栏中显示一个箭头

61
00:04:17,824 --> 00:04:21,361
在 iOS 16 中 从控制中心向下滑动

62
00:04:21,395 --> 00:04:25,065
显示哪个 App 正在使用位置

63
00:04:25,098 --> 00:04:28,202
确保您的 App 只在
用户预期的时候

64
00:04:28,235 --> 00:04:30,504
使用位置

65
00:04:32,873 --> 00:04:34,942
现在我想谈谈 Mac

66
00:04:34,975 --> 00:04:38,679
Gatekeeper 检查新下载的
App 的完整性

67
00:04:38,712 --> 00:04:41,481
在 macOS Ventura 中
Gatekeeper 将检查

68
00:04:41,515 --> 00:04:45,853
所有经过公证的 App 的完整性
而不仅仅是隔离的 App

69
00:04:46,920 --> 00:04:49,756
首先 App 需要正确签名

70
00:04:49,790 --> 00:04:51,525
从 macOS Ventura 开始

71
00:04:51,558 --> 00:04:54,761
如果您的已公证 App 签名失效

72
00:04:54,795 --> 00:04:58,298
将在首次启动时被 Gatekeeper 阻止

73
00:04:58,332 --> 00:05:01,001
您应该签名您所有的可执行文件和包

74
00:05:01,034 --> 00:05:05,706
并确保他们的签名在您
修改 App 时保持有效

75
00:05:05,739 --> 00:05:09,943
除了检查完整性 Gatekeeper 还会

76
00:05:09,977 --> 00:05:12,713
防止您的 App 被以某种方式修改

77
00:05:14,181 --> 00:05:17,885
最常见的 App 修改方式是更新

78
00:05:17,918 --> 00:05:23,090
由同一个开发者账户或团队
有效签名的 App

79
00:05:23,123 --> 00:05:24,424
将能够继续相互更新

80
00:05:24,458 --> 00:05:26,159
这样就行了

81
00:05:26,960 --> 00:05:29,563
为了让其他开发团队
更新您的 App

82
00:05:29,596 --> 00:05:32,833
或限制为仅允许您的更新程序

83
00:05:32,866 --> 00:05:35,936
您可以更新您的 info-plist

84
00:05:35,969 --> 00:05:39,540
例如 这里
Unrelated App 可以允许 Pal About 更新

85
00:05:39,573 --> 00:05:42,376
只需更改 plist
即可对其进行更新

86
00:05:44,745 --> 00:05:49,850
只需添加您希望允许的
NSUpdateSecurityPolicy

87
00:05:49,883 --> 00:05:55,489
在 NSUpdateSecurityPolicy 中
添加 AllowProcesses 字典

88
00:05:55,522 --> 00:06:00,194
将 team ID 射到
签名标识符数组

89
00:06:00,227 --> 00:06:03,664
在此示例中
该策略允许任何带有签名标识符

90
00:06:03,697 --> 00:06:09,036
com.example.pal.about 的进程

91
00:06:09,069 --> 00:06:13,774
通过 Pal About 的 team ID
来更新您的 App

92
00:06:13,807 --> 00:06:16,710
如果 App 被一些其他

93
00:06:16,743 --> 00:06:19,246
开发团队签名的东西修改

94
00:06:19,279 --> 00:06:23,617
且不被 NSUpdateSecurityPolicy 允许

95
00:06:23,650 --> 00:06:26,119
macOS 会阻止修改

96
00:06:26,153 --> 00:06:31,058
并通知用户有个 App
想要管理其他 App

97
00:06:31,091 --> 00:06:35,062
单击通知会将用户发送到
系统设置

98
00:06:35,095 --> 00:06:39,499
在那里他们可以允许一个 App
更新和修改其他 App

99
00:06:41,235 --> 00:06:44,805
为了准备 macOS Ventura
您应该签名您的 App 的可执行文件

100
00:06:44,838 --> 00:06:47,307
和包 并确保

101
00:06:47,341 --> 00:06:50,777
这些签名在更新后仍然有效

102
00:06:50,811 --> 00:06:57,050
采用 NSUpdateSecurityPolicy
并列举您使用的所有更新器

103
00:06:57,084 --> 00:07:02,523
记住 如果您的 App 尝试修改
策略之外的其他 App

104
00:07:02,556 --> 00:07:04,992
需要用户允许

105
00:07:07,027 --> 00:07:11,765
接下来 我将讨论如何
在 Mac 上登陆 App

106
00:07:11,798 --> 00:07:16,203
在 macOS Monterey 以及更早的版本中
当有人登录到他们的 Mac 时

107
00:07:16,236 --> 00:07:20,474
App 可以在登录时使用启动代理
或守护进程运行

108
00:07:20,507 --> 00:07:24,111
这很方便
因为它允许 App 运行菜单助手

109
00:07:24,144 --> 00:07:26,547
在后台检查软件更新

110
00:07:26,580 --> 00:07:29,950
或在多个 App 之间同步数据

111
00:07:31,051 --> 00:07:33,921
有时 当用户登录到他们的 Mac 时

112
00:07:33,954 --> 00:07:37,424
不相关的 App 会打开
并且可能会妨碍它们

113
00:07:37,457 --> 00:07:43,463
此外 App 或其他软件
可以访问传感器或位置等数据

114
00:07:43,497 --> 00:07:46,166
人们并不总是清楚这种情况正在发生

115
00:07:46,200 --> 00:07:49,236
因为可能看不到正在运行的内容

116
00:07:49,269 --> 00:07:50,737
对于开发人员来说

117
00:07:50,771 --> 00:07:54,174
并不总是很清楚登录时
使用哪种机制启动

118
00:07:54,208 --> 00:07:58,045
守护进程 代理 服务管理

119
00:07:58,078 --> 00:08:01,815
使用 macOS Ventura 这就简单多了

120
00:08:03,250 --> 00:08:08,255
在 macOS Ventura 中
您可以使用新的单一 API

121
00:08:08,288 --> 00:08:11,191
来启动您的 App 代理或守护进程

122
00:08:11,225 --> 00:08:14,361
默认情况下 您的 App
将被允许在登录时启动

123
00:08:14,394 --> 00:08:16,763
并且会通知用户

124
00:08:16,797 --> 00:08:19,867
如果您的 App 需要一个
具有更高权限的守护进程

125
00:08:19,900 --> 00:08:22,736
将需要管理员批准才能启用

126
00:08:25,339 --> 00:08:28,709
点击这个通知会打开
设置中的登录项窗口

127
00:08:28,742 --> 00:08:33,280
用户可以在那里管理
在其系统上启动的 App

128
00:08:33,313 --> 00:08:36,550
顶部控制登录时运行的 App

129
00:08:36,583 --> 00:08:40,487
底部控制登录时运行的其他项目

130
00:08:40,521 --> 00:08:44,324
此窗口现在控制 App
在登录时运行的不同方式

131
00:08:44,358 --> 00:08:48,362
包括代理 守护进程 SMLoginItems

132
00:08:48,395 --> 00:08:51,331
以及在登录时添加自己打开的 App

133
00:08:51,365 --> 00:08:53,967
下面介绍如何使用这个新 API

134
00:08:55,569 --> 00:08:58,605
Service Management 框架使您可以轻松地

135
00:08:58,639 --> 00:09:00,574
在登录时启动资源

136
00:09:00,607 --> 00:09:04,444
因为所有的代理和守护进程
都存在于您的 App 包中

137
00:09:04,478 --> 00:09:07,481
因此不再需要使用安装程序
来编写启动代理或创建清理脚本

138
00:09:07,514 --> 00:09:12,986
这也适用于 Mac App Store 的 App

139
00:09:13,020 --> 00:09:17,891
从您的 App 调用 SMAppService API

140
00:09:17,925 --> 00:09:22,229
来控制人们何时获得通知
以及您的 App 图标在设置中的外观

141
00:09:24,398 --> 00:09:27,634
接下来是剪贴板访问

142
00:09:29,736 --> 00:09:34,107
以前 当用户不是在编辑选项中
按下粘贴键时

143
00:09:34,141 --> 00:09:38,045
会有一个透明度的通知
让用户知道 App 何时访问了剪贴板

144
00:09:39,613 --> 00:09:44,985
在 iOS 16 中 系统会确认
访问其他 App 编写的

145
00:09:45,018 --> 00:09:47,688
剪贴板项目的意图

146
00:09:47,721 --> 00:09:51,425
如果您的 App 继续使用
UIPasteboard API

147
00:09:51,458 --> 00:09:57,130
访问剪贴板里的值
那么系统将显示一个模态提示

148
00:09:57,164 --> 00:10:00,801
有三种方法可以避免
该提示出现在 App 中

149
00:10:00,834 --> 00:10:03,904
第一种是使用编辑选项菜单

150
00:10:03,937 --> 00:10:07,074
第二种是使用键盘快捷键

151
00:10:07,107 --> 00:10:10,244
在 Features to adopt 部分
我将讨论第三个选项

152
00:10:10,277 --> 00:10:13,180
新的 UIKit 粘贴控件

153
00:10:14,448 --> 00:10:16,984
这些都是您需要了解的

154
00:10:17,017 --> 00:10:18,886
平台隐私变化

155
00:10:18,919 --> 00:10:22,856
此外 还有一些新的隐私增强技术

156
00:10:22,890 --> 00:10:26,159
可以让您更轻松地在您的 App 中

157
00:10:26,193 --> 00:10:28,595
构建无缝的隐私体验

158
00:10:29,730 --> 00:10:33,767
我将从讨论 UIKit 粘贴控件开始

159
00:10:35,169 --> 00:10:38,605
将 UIKit 粘贴控件添加到
您的 App 体验中

160
00:10:38,639 --> 00:10:44,144
因此人们可以通过按下按钮
直观地访问他们的剪贴板

161
00:10:44,178 --> 00:10:48,549
采用 UIKit 粘贴控件允许粘贴时

162
00:10:48,582 --> 00:10:50,984
不需要编辑菜单 快捷键或系统提示

163
00:10:51,018 --> 00:10:54,821
系统通过确认按钮是否可见并点击

164
00:10:54,855 --> 00:10:57,958
来确认意图

165
00:10:57,991 --> 00:11:00,594
自定义这些按钮
以适合您的 App 界面

166
00:11:00,627 --> 00:11:02,362
更改圆角或文本

167
00:11:02,396 --> 00:11:06,500
图标或背景的颜色

168
00:11:06,533 --> 00:11:09,536
只要确保按钮有足够的对比度

169
00:11:09,570 --> 00:11:11,872
没有隐藏在其他元素后面

170
00:11:11,905 --> 00:11:13,740
否则它将无法运行

171
00:11:13,774 --> 00:11:17,678
确保测试粘贴按钮是否按预期工作

172
00:11:19,680 --> 00:11:22,416
另一个在最小化数据访问的同时

173
00:11:22,449 --> 00:11:27,421
创建无缝体验的工具是媒体设备发现

174
00:11:27,454 --> 00:11:30,557
今天的 App 使用广泛的流协议

175
00:11:30,591 --> 00:11:33,994
具有自定义发现和通信逻辑

176
00:11:35,295 --> 00:11:38,165
以前使用这些协议流媒体时

177
00:11:38,198 --> 00:11:41,101
App 需要获得访问本地网络的许可

178
00:11:41,134 --> 00:11:43,770
通常还需要蓝牙

179
00:11:43,804 --> 00:11:47,174
这个许可是需要的
因为管理设备选择

180
00:11:47,207 --> 00:11:49,676
需要了解所有的设备

181
00:11:49,710 --> 00:11:53,380
但这提供了超出必要范围的信息

182
00:11:53,413 --> 00:11:56,817
并带来了设备指纹的风险

183
00:11:56,850 --> 00:12:01,388
媒体设备发现可让您的
App 流传输到选定的设备

184
00:12:01,421 --> 00:12:05,659
而无需显示网络或蓝牙访问提示

185
00:12:05,692 --> 00:12:09,263
流媒体设备与 AirPlay 显示在
同一个选择器中

186
00:12:09,296 --> 00:12:13,767
而App 只能看到
被选中的流传输到的设备

187
00:12:13,800 --> 00:12:17,638
这要得益于 DeviceDiscovery 扩展

188
00:12:19,239 --> 00:12:23,143
这个扩展可以搜索本地网络
和蓝牙设备

189
00:12:23,177 --> 00:12:28,549
但是沙盒独立于 App
因此无法将扫描结果发回

190
00:12:28,582 --> 00:12:33,120
这意味着 App 访问本地网络

191
00:12:33,153 --> 00:12:38,125
或蓝牙不需要广泛的权限
因为 App 不能看到整个网络

192
00:12:38,158 --> 00:12:42,129
相反 扩展只能将发现的附件

193
00:12:42,162 --> 00:12:45,666
发送到
DeviceDiscoveryExtension 框架

194
00:12:46,633 --> 00:12:50,304
DeviceDiscoveryExtension 框架

195
00:12:50,337 --> 00:12:54,508
在选择器中显示发现的设备列表

196
00:12:54,541 --> 00:12:58,011
做出选择后
系统启用与所选设备的通信

197
00:12:58,045 --> 00:13:01,081
不需要其他权限

198
00:13:02,549 --> 00:13:06,019
协议提供商应使用
DeviceDiscoveryExtension

199
00:13:06,053 --> 00:13:08,889
来创建 App 扩展

200
00:13:08,922 --> 00:13:14,194
扩展 AVRoutePickerView
以处理用户选择回调

201
00:13:14,228 --> 00:13:18,432
处理您的协议中用户选择的网络设备

202
00:13:18,465 --> 00:13:22,569
下载示例扩展和 App
来了解更多信息

203
00:13:22,603 --> 00:13:26,306
App 开发人员应联系
他们的流协议提供商

204
00:13:26,340 --> 00:13:30,310
以实现 DeviceDiscoveryExtension

205
00:13:30,344 --> 00:13:34,414
媒体设备发现是构建
具有极大隐私性的

206
00:13:34,448 --> 00:13:36,250
出色功能的机会

207
00:13:36,283 --> 00:13:40,254
您的 App 可以准确访问
流式传输需要的数据

208
00:13:40,287 --> 00:13:45,292
发现简单且无需提示
用户还能获得良好的网络隐私

209
00:13:45,325 --> 00:13:48,328
各方都能受益

210
00:13:48,362 --> 00:13:51,932
就像媒体设备发现提供
在没有提示的情况下

211
00:13:51,965 --> 00:13:54,334
仅访问所需设备的权限一样

212
00:13:54,368 --> 00:13:57,137
PHPicker API 提供了

213
00:13:57,171 --> 00:14:01,408
只访问所需照片的权限而没有提示

214
00:14:01,441 --> 00:14:04,978
PHPicker 现在在带有
macOS Ventura 的 Mac

215
00:14:05,012 --> 00:14:08,282
以及带有 watchOS 9 的手表上

216
00:14:08,315 --> 00:14:12,219
更新您的 Mac 和 Watch App
以访问照片 而不提示用户

217
00:14:12,252 --> 00:14:14,922
访问所有照片

218
00:14:17,224 --> 00:14:21,962
接下来是私有访问令牌
它是一种强大的工具

219
00:14:21,995 --> 00:14:24,398
可以在没有验证码的情况下
防止欺诈

220
00:14:26,166 --> 00:14:30,704
私有访问令牌取代了验证码
并使用盲令牌构建

221
00:14:30,737 --> 00:14:34,241
允许网站或 API 开发人员
识别合法设备

222
00:14:34,274 --> 00:14:38,679
而不能跟踪这些设备

223
00:14:38,712 --> 00:14:42,783
Apple 不知道设备
为哪些网站获取令牌

224
00:14:42,816 --> 00:14:46,119
接收令牌的服务器也不知道

225
00:14:46,153 --> 00:14:49,423
发送令牌的设备身份

226
00:14:49,456 --> 00:14:54,428
私有访问令牌是
Privacy Pass IETF 开放标准的一部分

227
00:14:54,461 --> 00:14:58,398
与我们用来验证
私有中继用户真实性的

228
00:14:58,432 --> 00:15:00,934
技术相同

229
00:15:00,968 --> 00:15:03,470
要了解更多信息 请观看视频

230
00:15:03,504 --> 00:15:06,907
“Replace CAPTCHAs
with Private Access Tokens”

231
00:15:08,809 --> 00:15:11,778
现在我来谈一谈 Passkey

232
00:15:12,713 --> 00:15:15,949
Passkey 是验证帐户和保护

233
00:15:15,983 --> 00:15:20,687
个人数据安全的核心
但它们存在严重问题

234
00:15:20,721 --> 00:15:24,491
很难记住 因此人们将它们简化

235
00:15:24,525 --> 00:15:27,227
或者在多个站点上重复使用

236
00:15:27,261 --> 00:15:29,029
他们可能被钓鱼

237
00:15:30,464 --> 00:15:34,001
Passkey 支持更强大的
身份验证解决方案

238
00:15:34,034 --> 00:15:37,271
并使用与密码自动填充相同的

239
00:15:37,304 --> 00:15:41,275
即时熟悉的 UI 样式和生物特征验证

240
00:15:45,179 --> 00:15:48,882
密钥建立在公开密钥加密的基础上

241
00:15:48,916 --> 00:15:51,952
因此服务器存储的值不会很弱

242
00:15:51,985 --> 00:15:53,453
如果泄露了也无所谓

243
00:15:53,487 --> 00:15:57,524
因为它是真正公开的

244
00:15:57,558 --> 00:16:01,862
因为密钥本身就与它们
对应的网站相关联

245
00:16:01,895 --> 00:16:04,231
所以不会被钓鱼

246
00:16:04,264 --> 00:16:07,034
关于实现密钥的更多信息

247
00:16:07,067 --> 00:16:10,370
有一个完整的视频 “Meet Passkeys”

248
00:16:12,339 --> 00:16:17,044
这些都是令人兴奋和重要的隐私更新
供你们采纳

249
00:16:18,412 --> 00:16:22,649
我想说的另一件重要的事情是
iOS 16 中的一个新的

250
00:16:22,683 --> 00:16:26,286
隐私工具 叫做 Safety Check

251
00:16:26,320 --> 00:16:29,890
Safety Check 旨在帮助遭受家庭暴力

252
00:16:29,923 --> 00:16:35,095
或亲密伴侣暴力的人审查和重置

253
00:16:35,128 --> 00:16:38,332
他们以前可能授予他人的访问权限

254
00:16:39,533 --> 00:16:42,569
Safety Check 通过以下方式提供帮助

255
00:16:42,603 --> 00:16:47,808
它通过关闭 FindMy 中的位置共享

256
00:16:47,841 --> 00:16:52,412
并停止在照片 便笺和日历中共享
来停止与人们共享数据

257
00:16:52,446 --> 00:16:56,884
它通过重置所有第三方 App 的
系统隐私权限

258
00:16:56,917 --> 00:16:59,186
来停止与 App 共享数据

259
00:16:59,219 --> 00:17:04,191
它可以帮助您在其他 iCloud设备上
退出 FaceTime 和 iMessage

260
00:17:04,224 --> 00:17:09,530
以确保消息和呼叫只发送到
您手中的设备

261
00:17:09,563 --> 00:17:13,700
它会引导您退出其他 iCloud 设备

262
00:17:13,734 --> 00:17:18,639
以确保其他设备无法接收
来自 FindMy 照片

263
00:17:18,672 --> 00:17:21,475
日历等的位置更新

264
00:17:21,508 --> 00:17:24,778
它可以帮助您更改设备

265
00:17:24,811 --> 00:17:26,813
和 iCloud 帐户的密码

266
00:17:26,847 --> 00:17:30,918
以及用于 iCloud 双重身份验证的
可信电话号码

267
00:17:30,951 --> 00:17:36,256
它还可以帮助您管理紧急联系人
以便根据需要进行任何更改

268
00:17:36,290 --> 00:17:40,727
所有这些东西一起帮助用户
应对个人安全威胁

269
00:17:40,761 --> 00:17:43,630
控制对他们数据的访问

270
00:17:44,698 --> 00:17:47,334
使用安全检查有两种方法

271
00:17:47,367 --> 00:17:52,339
第一个是紧急重置
适用于需要立即重置

272
00:17:52,372 --> 00:17:56,777
人员和 App 访问权限的紧急情况

273
00:17:57,778 --> 00:18:01,215
第二个是管理共享和访问

274
00:18:01,248 --> 00:18:06,653
它对 Safety Check 的每个功能
提供更细粒度的控制

275
00:18:08,288 --> 00:18:14,795
紧急重置可让您快速对
所有人和所有 App 采取行动

276
00:18:14,828 --> 00:18:20,133
并在您的其他设备上
禁用对 FaceTime 和 iMessage 的访问

277
00:18:20,167 --> 00:18:24,638
然后 您将完成手中设备的
iCloud 账户保护

278
00:18:24,671 --> 00:18:28,375
并检查您的紧急联系人

279
00:18:28,408 --> 00:18:30,811
和可信设备

280
00:18:30,844 --> 00:18:34,681
管理共享和访问可让您逐个查看

281
00:18:34,715 --> 00:18:39,119
以及逐 App 查看您的共享对象

282
00:18:39,152 --> 00:18:43,724
您可以按名称或您共享的信息类型
对其进行排序

283
00:18:43,757 --> 00:18:47,528
这是了解和控制您与特定用户

284
00:18:47,561 --> 00:18:49,563
共享的好工具

285
00:18:49,596 --> 00:18:52,499
它还可以帮助您找到
由有权访问您设备的人安装的

286
00:18:52,533 --> 00:18:55,669
具有敏感权限的 App

287
00:18:58,238 --> 00:19:01,642
快速退出在所有的
Safety Check 流程中都可用

288
00:19:01,675 --> 00:19:03,877
如果他们担心有人
可能会看到他们在做什么

289
00:19:03,911 --> 00:19:07,147
可以快速退出流程

290
00:19:07,181 --> 00:19:09,716
按下这个键 它们就会回到主屏幕

291
00:19:09,750 --> 00:19:11,852
下次进入设置时

292
00:19:11,885 --> 00:19:13,754
它们就会回到主设置页

293
00:19:13,787 --> 00:19:16,523
而不是 Safety Check

294
00:19:16,557 --> 00:19:21,461
Safety Check 可帮助遭受家庭暴力
或亲密伴侣暴力的人

295
00:19:21,495 --> 00:19:24,932
重新控制自己的私人数据

296
00:19:24,965 --> 00:19:29,436
隐私不仅仅是在您
分享数据的那一刻做出决定

297
00:19:29,469 --> 00:19:35,209
还包括能够在任何时候
理解并改变这个决定

298
00:19:35,242 --> 00:19:40,214
这只是 Apple
如何设计隐私的一个例子

299
00:19:40,247 --> 00:19:44,918
在您的 App 中设计隐私
将帮助您建立并保持

300
00:19:44,952 --> 00:19:46,887
与用户的信任

301
00:19:46,920 --> 00:19:53,427
iOS 16 和 macOS Ventura 带来了
许多新技术来助您一臂之力

302
00:19:53,460 --> 00:19:57,297
准备好新的平台更新
如 UI 设备名称的更改

303
00:19:57,331 --> 00:19:59,833
和 Gatekeeper 的改进

304
00:19:59,867 --> 00:20:02,569
采用媒体设备发现扩展

305
00:20:02,603 --> 00:20:05,038
UIKit 粘贴控件

306
00:20:05,072 --> 00:20:09,243
Private Access Token 和 Passkey

307
00:20:09,276 --> 00:20:10,811
谢谢大家今天参加我的节目

308
00:20:10,844 --> 00:20:13,380
我们迫不及待地想看看
你们如何在 App 中

309
00:20:13,413 --> 00:20:15,516
添加出色的功能和隐私保护

310
00:20:15,549 --> 00:20:19,987
[欢快的音乐]

