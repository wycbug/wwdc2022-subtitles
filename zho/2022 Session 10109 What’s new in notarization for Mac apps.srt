1
00:00:00,000 --> 00:00:03,170
♪ 柔和乐器演奏的嘻哈音乐 ♪

2
00:00:03,170 --> 00:00:10,043
♪

3
00:00:10,043 --> 00:00:12,312
大家好 我是 Johnathan

4
00:00:12,312 --> 00:00:15,215
macOS 开发人员将软件
提交给公证服务

5
00:00:15,215 --> 00:00:16,850
以帮助保护他们的客户

6
00:00:16,850 --> 00:00:18,852
免受恶意软件的侵害

7
00:00:18,852 --> 00:00:21,622
去年我们推出了
一种更快更简单的方式

8
00:00:21,622 --> 00:00:25,025
通过 notarytool CLI
(命令行界面)

9
00:00:25,025 --> 00:00:27,160
提交 App 进行公证

10
00:00:27,160 --> 00:00:30,264
今年 我们很高兴能通过为您与公证服务的交互

11
00:00:30,264 --> 00:00:32,833
做出的一些重大改进

12
00:00:32,833 --> 00:00:36,403
继续优化性能和灵活性

13
00:00:36,403 --> 00:00:39,907
在本讲座中 我们将讨论
三个主要的主题

14
00:00:39,907 --> 00:00:41,909
首先 我们将了解

15
00:00:41,909 --> 00:00:45,078
从使用 altool 转换为使用
notarytool 进行公证

16
00:00:45,078 --> 00:00:47,814
的重要截止日期

17
00:00:47,814 --> 00:00:51,118
接下来 我们将讨论
即将推出的 Xcode 14

18
00:00:51,118 --> 00:00:53,520
对 Xcode 集成所做的改进

19
00:00:53,520 --> 00:00:57,457
这为 Xcode 带来了
notarytool 的提交速度

20
00:00:57,457 --> 00:00:59,927
最后 我们将讨论一种灵活的

21
00:00:59,927 --> 00:01:01,995
与公证服务交互的新方式

22
00:01:01,995 --> 00:01:05,933
即 REST API
它让您可以在更多地方进行上传

23
00:01:05,933 --> 00:01:09,703
查看提交状态并检查提交内容

24
00:01:11,705 --> 00:01:14,775
去年我们推出了 notarytool

25
00:01:14,775 --> 00:01:18,212
这是一个替代 altool
进行公证的工具

26
00:01:18,212 --> 00:01:20,848
在本讲座的稍后部分
我将讨论 Xcode

27
00:01:20,848 --> 00:01:25,219
通过 Xcode 14 迁移到
我们最新的后端

28
00:01:25,219 --> 00:01:27,921
为通过 altool 和 Xcode 13
进行的公证

29
00:01:27,921 --> 00:01:30,457
准备好迁移路径之后

30
00:01:30,457 --> 00:01:32,826
我们宣布使用这些旧方法进行公证的

31
00:01:32,826 --> 00:01:37,431
截止日期是 2023 年秋季

32
00:01:37,431 --> 00:01:40,334
如果您从 altool 迁移到
notarytool 时需要帮助

33
00:01:40,334 --> 00:01:42,703
请参考去年的讲座

34
00:01:42,703 --> 00:01:47,140
“更快更简单的
Mac App公证方式”

35
00:01:47,140 --> 00:01:50,277
这里还有一些细节要说明

36
00:01:50,277 --> 00:01:53,847
包括捆绑在 Xcode 13 中的

37
00:01:53,847 --> 00:01:57,184
notarytool CLI 在 2023 年秋季的
截止日期之后还能继续工作

38
00:01:57,184 --> 00:01:59,086
不过 与往常一样
我们鼓励您进行更新

39
00:01:59,086 --> 00:02:02,990
以接收最新的改进和修补程序

40
00:02:02,990 --> 00:02:06,393
但我们将在该截止日期后停止支持

41
00:02:06,393 --> 00:02:09,062
使用 Xcode 13 UI
上传到公证服务

42
00:02:09,062 --> 00:02:11,298
请继续关注 Xcode 14 中的
一些性能改进

43
00:02:11,298 --> 00:02:14,368
但在很大程度上您可以预期

44
00:02:14,368 --> 00:02:17,337
您的工作流程不会改变

45
00:02:17,337 --> 00:02:20,507
最后
所有形式的 altool 公证

46
00:02:20,507 --> 00:02:23,443
将在 2023 年秋季停止工作

47
00:02:23,443 --> 00:02:27,214
有关迁移到
notarytool 的详细信息

48
00:02:27,214 --> 00:02:30,417
也请参考去年的 WWDC 讲座

49
00:02:30,417 --> 00:02:34,888
接下来 我们将谈谈
Xcode 14 中公证方式的变化

50
00:02:34,888 --> 00:02:37,191
我们已经迁移了

51
00:02:37,191 --> 00:02:40,160
Xcode 中内置的公证支持功能

52
00:02:40,160 --> 00:02:44,464
以使用与我们去年推出的
notarytool CLI 相同的可靠后端

53
00:02:44,464 --> 00:02:46,700
因此 我们很高兴
为 Xcode 14 带来

54
00:02:46,700 --> 00:02:49,970
大约 4 倍的性能提升
这与我们去年

55
00:02:49,970 --> 00:02:53,240
针对 notarytool 宣布的
性能提升是一致的

56
00:02:53,240 --> 00:02:55,809
最棒的是 除了更新

57
00:02:55,809 --> 00:02:58,412
您无需更改项目设置或工作流程

58
00:02:58,412 --> 00:03:01,481
即可获得这种性能提升

59
00:03:01,481 --> 00:03:03,684
对于本讲座的最后一个主题

60
00:03:03,684 --> 00:03:05,953
我们很高兴地宣布一项新服务

61
00:03:05,953 --> 00:03:08,121
Notary REST API

62
00:03:08,121 --> 00:03:10,457
这项新服务让您可以在更多地方

63
00:03:10,457 --> 00:03:14,361
更灵活地与公证服务进行交互

64
00:03:14,361 --> 00:03:16,630
我们看一下几个重要的概念

65
00:03:16,630 --> 00:03:18,465
这个新的 API 旨在

66
00:03:18,465 --> 00:03:21,735
为公证服务提供更灵活的界面

67
00:03:21,735 --> 00:03:23,770
作为基于 JSON 的
Web 服务

68
00:03:23,770 --> 00:03:27,140
集成在大多数语言里应该相当简单

69
00:03:27,140 --> 00:03:29,576
此 API 允许您

70
00:03:29,576 --> 00:03:32,379
从任何有网络连接的地方
上传提交文件

71
00:03:32,379 --> 00:03:34,615
包括持续集成服务器

72
00:03:34,615 --> 00:03:38,452
在这些地方您目前可能
没有运行 macOS

73
00:03:38,452 --> 00:03:41,188
此外 该 API 还支持

74
00:03:41,188 --> 00:03:43,557
与公证服务的其他交互

75
00:03:43,557 --> 00:03:45,392
例如检索您的提交历史记录

76
00:03:45,392 --> 00:03:48,295
或过去的提交详情

77
00:03:48,295 --> 00:03:50,197
我们引入 REST API 的
目标是

78
00:03:50,197 --> 00:03:52,799
支持从更多平台提交软件进行公证

79
00:03:52,799 --> 00:03:55,836
并允许在自动化系统中

80
00:03:55,836 --> 00:03:58,672
更轻松地与公证人进行交互

81
00:03:58,672 --> 00:04:00,908
提供了当前的提交方法
Xcode 和 notarytool 之外的补充方式

82
00:04:00,908 --> 00:04:04,011
可用于这些方法目前无法运行的地方

83
00:04:04,011 --> 00:04:07,147
比如基于 Linux 的持续集成

84
00:04:07,147 --> 00:04:09,750
举个例子 假设您希望部署管道

85
00:04:09,750 --> 00:04:11,485
在分发之前将您的 App

86
00:04:11,485 --> 00:04:13,453
提交给公证人

87
00:04:13,453 --> 00:04:15,689
通过这个新的 API
和一些基本的脚本

88
00:04:15,689 --> 00:04:18,926
您可以轻松地实现该过程的自动化

89
00:04:18,926 --> 00:04:20,227
在我开始正题之前

90
00:04:20,227 --> 00:04:22,896
一个重要的主题是身份验证

91
00:04:22,896 --> 00:04:26,366
您可以通过像其他
App Store Connect API 一样

92
00:04:26,366 --> 00:04:30,604
使用 JSON Web Tokens
或 JWT 的 API 进行身份验证

93
00:04:30,604 --> 00:04:32,339
有关身份验证或我将要展示的代码

94
00:04:32,339 --> 00:04:34,308
的更多详细信息

95
00:04:34,308 --> 00:04:38,212
请访问下面链接的
REST API 文档

96
00:04:38,212 --> 00:04:41,248
在这些代码片段中
我假设您将有效的 JWT

97
00:04:41,248 --> 00:04:44,284
作为令牌变量传递给函数

98
00:04:44,284 --> 00:04:46,954
我们来看一个在 Python 中

99
00:04:46,954 --> 00:04:49,022
向公证人提交文件的例子

100
00:04:49,022 --> 00:04:50,691
其他编程语言也适用

101
00:04:50,691 --> 00:04:53,360
同样的基本流程

102
00:04:53,360 --> 00:04:57,130
将文件上传给公证人有两个主要步骤

103
00:04:57,130 --> 00:04:58,932
第一步是通知公证人

104
00:04:58,932 --> 00:05:01,301
您希望上传文件

105
00:05:01,301 --> 00:05:04,671
其中包含有关该文件的一些基本信息

106
00:05:04,671 --> 00:05:07,674
如文件名和 SHA-256

107
00:05:07,674 --> 00:05:09,776
响应包含上传文件所需的信息

108
00:05:09,776 --> 00:05:13,080
和通过我们的管道

109
00:05:13,080 --> 00:05:15,415
跟踪提交文件的 ID

110
00:05:15,415 --> 00:05:18,252
第二步是通过 Amazon S3

111
00:05:18,252 --> 00:05:21,054
实际上传文件进行公证

112
00:05:21,054 --> 00:05:23,657
您需要利用
您最喜欢的 S3 SDK

113
00:05:23,657 --> 00:05:24,725
对于这个例子

114
00:05:24,725 --> 00:05:27,728
我将使用 boto3 库

115
00:05:27,728 --> 00:05:29,496
在这里我们使用

116
00:05:29,496 --> 00:05:31,498
上一次调用中返回的临时凭证

117
00:05:31,498 --> 00:05:34,168
进行身份验证并创建客户端

118
00:05:34,168 --> 00:05:37,037
然后 我们使用客户端将文件上传到

119
00:05:37,037 --> 00:05:40,807
第一步的响应中指定的存储桶和对象

120
00:05:40,807 --> 00:05:43,043
上传后 提交文件将

121
00:05:43,043 --> 00:05:45,412
通过公证管道处理

122
00:05:45,412 --> 00:05:47,981
对于大多数提交文件

123
00:05:47,981 --> 00:05:50,417
此过程应在 15 分钟内完成

124
00:05:50,417 --> 00:05:52,753
上传后 您应在分发前确认

125
00:05:52,753 --> 00:05:54,621
公证服务已成功处理

126
00:05:54,621 --> 00:05:56,757
您提交的文件

127
00:05:56,757 --> 00:05:59,993
从广义上讲
有两种方法可以做到这一点

128
00:05:59,993 --> 00:06:01,662
第一种方法 也是最简单的方法

129
00:06:01,662 --> 00:06:04,598
是通过相同的 API 来检查结果

130
00:06:04,598 --> 00:06:06,600
另一种选择是借助于
随 notarytool 引入的

131
00:06:06,600 --> 00:06:08,969
webhook 支持

132
00:06:08,969 --> 00:06:12,506
首先 我们看一下 API 方法

133
00:06:12,506 --> 00:06:14,675
查看向公证人提交的文件的状态

134
00:06:14,675 --> 00:06:17,010
非常简单

135
00:06:17,010 --> 00:06:19,079
您可以使用在上传过程中收到的
提交 ID

136
00:06:19,079 --> 00:06:22,316
提出请求

137
00:06:22,316 --> 00:06:24,418
响应包含提交文件的当前状态

138
00:06:24,418 --> 00:06:27,154
该状态将一直为“进行中”

139
00:06:27,154 --> 00:06:29,957
直到公证人完成处理

140
00:06:29,957 --> 00:06:32,226
然后该状态将转换为

141
00:06:32,226 --> 00:06:36,897
提交文件的最终状态
例如已接受或无效

142
00:06:36,897 --> 00:06:38,565
提交完成后

143
00:06:38,565 --> 00:06:39,933
您可以使用该 API

144
00:06:39,933 --> 00:06:43,237
来检索此次上传的公证日志

145
00:06:43,237 --> 00:06:46,073
有关这些端点的更多详情

146
00:06:46,073 --> 00:06:49,409
请参阅 Notary REST API 文档

147
00:06:49,409 --> 00:06:51,512
接下来 我们将讨论获取状态的

148
00:06:51,512 --> 00:06:53,914
第二种方法：webhook

149
00:06:53,914 --> 00:06:57,351
在 webhook 工作流程中
过程大致相同

150
00:06:57,351 --> 00:06:59,887
但这次您将在初始上传请求中

151
00:06:59,887 --> 00:07:02,422
提供 webhook URL

152
00:07:02,422 --> 00:07:04,992
有关格式的详细信息

153
00:07:04,992 --> 00:07:07,961
请参阅 Notary REST API 文档

154
00:07:07,961 --> 00:07:10,364
和以前一样 这将触发公证服务

155
00:07:10,364 --> 00:07:12,966
来分析您提交的文件

156
00:07:12,966 --> 00:07:16,403
当自动分析结束时 会创建工单

157
00:07:16,403 --> 00:07:19,039
并保存最终状态

158
00:07:19,039 --> 00:07:21,642
完成后 公证服务将调用

159
00:07:21,642 --> 00:07:23,844
提供的 webhook URL

160
00:07:23,844 --> 00:07:26,547
此调用的内容包括提交 ID

161
00:07:26,547 --> 00:07:32,085
团队 ID
和证明其来自我们的签名

162
00:07:32,085 --> 00:07:35,956
收到该通知后
您可以选择下一步做什么

163
00:07:35,956 --> 00:07:39,026
例如 您可以通知原始提交者

164
00:07:39,026 --> 00:07:42,496
或启动自动分发管道

165
00:07:42,496 --> 00:07:44,198
与使用
notarytool 等待相比

166
00:07:44,198 --> 00:07:47,201
这允许您将上传文件的系统

167
00:07:47,201 --> 00:07:51,905
与公证后自动执行操作的系统分离

168
00:07:51,905 --> 00:07:54,775
我们很高兴看到
这个新的 REST API 打开了

169
00:07:54,775 --> 00:07:57,945
与持续集成系统
和其他为 macOS 构建软件的工具

170
00:07:57,945 --> 00:08:01,281
进行更多集成的大门

171
00:08:01,281 --> 00:08:03,750
在本讲座即将结束时 再次提醒一下

172
00:08:03,750 --> 00:08:07,487
转换为使用
Xcode 14、notarytool

173
00:08:07,487 --> 00:08:11,458
或直接使用 REST API 的截止日期
是 2023 年秋季

174
00:08:11,458 --> 00:08:14,194
最后 如果您还不能在部署管道中

175
00:08:14,194 --> 00:08:15,929
使用 notarytool

176
00:08:15,929 --> 00:08:18,031
现在试用
Notary REST API

177
00:08:18,031 --> 00:08:20,734
将为您带来启动自动化的机会

178
00:08:20,734 --> 00:08:23,337
您可以在下面找到文档链接

179
00:08:23,337 --> 00:08:26,974
谢谢 我希望您喜欢
WWDC 22 的其余部分

180
00:08:26,974 --> 00:08:30,844
♪

