1
00:00:00,434 --> 00:00:06,440
[欢快的音乐]

2
00:00:09,309 --> 00:00:13,747
大家好 欢迎来到
“利用 CarPlay 车载让您的 App 一日千里”

3
00:00:13,780 --> 00:00:18,018
我是André
今天的讲座将由我为大家介绍

4
00:00:19,553 --> 00:00:24,525
众所周知 CarPlay 车载是在车内使用
iPhone 更智能 更安全的方式

5
00:00:24,558 --> 00:00:30,163
今天的讲座主要是关于您的 App
如何在 CarPlay 车载中使用

6
00:00:30,197 --> 00:00:34,334
首先 我们将快速回顾一下
CarPlay 车载所支持的 App 类别

7
00:00:34,368 --> 00:00:38,672
然后 谈谈我们今年正在启用的
新的 App 类别

8
00:00:38,705 --> 00:00:42,242
最后 介绍一个支持

9
00:00:42,276 --> 00:00:45,245
App开发的新工具

10
00:00:45,279 --> 00:00:50,184
并以导航 App 的重要新功能
作为今天的收尾

11
00:00:50,217 --> 00:00:53,220
话不多说 我们开始吧

12
00:00:55,155 --> 00:01:00,327
为驾驶员而设计是 CarPlay 车载
最基础的特性之一

13
00:01:00,360 --> 00:01:04,932
在开发您的 App 时
应该首要考虑

14
00:01:04,965 --> 00:01:06,867
经常开车人群的需求

15
00:01:06,900 --> 00:01:12,272
因此 驾驶相关的使用场景
是唯一需要考虑的

16
00:01:12,306 --> 00:01:17,377
与驾驶无关的使用场景
都应忽略

17
00:01:17,411 --> 00:01:20,881
如一次性配置 登录 App

18
00:01:20,914 --> 00:01:24,952
或阅读条款
最好都在驾驶前后完成

19
00:01:24,985 --> 00:01:29,289
而不应出现在您 App 的
CarPlayUI 界面中

20
00:01:30,490 --> 00:01:34,828
App 在 CarPlay 车载中显示
需要获得相应的资质

21
00:01:34,862 --> 00:01:38,699
您可以在 Apple CarPlay 车载
开发者网站上

22
00:01:38,732 --> 00:01:42,402
根据 App 的类别申请资质

23
00:01:42,436 --> 00:01:47,541
这是我们目前 CarPlay 车载中
支持的 App 类别

24
00:01:47,574 --> 00:01:52,112
这些 App 涵盖了大多
驾驶期间可能会执行的操作

25
00:01:52,145 --> 00:01:55,482
但很多用户反馈

26
00:01:55,516 --> 00:01:59,219
希望有更多驾驶相关的 App

27
00:01:59,253 --> 00:02:03,156
我在此宣布 我们今年
将增加两种新的 App 类别

28
00:02:03,190 --> 00:02:06,326
加油和驾驶任务 App

29
00:02:06,360 --> 00:02:09,630
我们稍后会详细讨论这些内容

30
00:02:09,663 --> 00:02:14,301
但首先 我们先谈谈开发模板

31
00:02:14,334 --> 00:02:18,005
开发模板决定了 CarPlay 车载中
App 的 UI 界面如何呈现

32
00:02:18,038 --> 00:02:22,242
您的 App 提供数据
系统负责把 UI 绘制到

33
00:02:22,276 --> 00:02:25,279
车辆显示屏上

34
00:02:25,312 --> 00:02:28,949
这个模板的系统使用简便

35
00:02:28,982 --> 00:02:32,519
并且有很多好处
包括帮助改善您的 App

36
00:02:32,553 --> 00:02:35,355
使其更适用驾驶场景

37
00:02:35,389 --> 00:02:38,392
您不必担心字体大小等问题

38
00:02:38,425 --> 00:02:42,462
模板可帮助你们
建立简单的 UI

39
00:02:42,496 --> 00:02:47,601
及最后确保您 App 的 UI
与 CarPlay 车载中其它 App 一致

40
00:02:47,634 --> 00:02:52,105
使用户在需要时 操作更快捷

41
00:02:52,139 --> 00:02:56,643
这些模板可确保 App 的 UI
在所有支持 CarPlay 车载的

42
00:02:56,677 --> 00:03:00,714
车型上正常运行
这也是同样重要的一点

43
00:03:00,747 --> 00:03:04,651
无论汽车搭载的输入设备
是哪种屏幕类型

44
00:03:04,685 --> 00:03:08,488
您可能还想在不同的配置中
测试自己的 App

45
00:03:08,522 --> 00:03:11,592
我们稍后将会讨论更多
关于测试的内容

46
00:03:11,625 --> 00:03:16,663
但可以说 开发模板
已为您做了大部分的工作

47
00:03:16,697 --> 00:03:19,499
在构建 App 时
有多个模板可供选择

48
00:03:19,533 --> 00:03:23,036
从数组按钮形式的网格模板

49
00:03:23,070 --> 00:03:25,472
到表格形式的列表模板

50
00:03:25,506 --> 00:03:31,178
开发人员和 iOS 用户
应该都很熟悉了

51
00:03:31,211 --> 00:03:34,882
最重要的是 这些模板
与整个 CarPlay 车载系统一致

52
00:03:34,915 --> 00:03:38,986
您的用户也了然于心

53
00:03:39,019 --> 00:03:43,223
之前我们谈到了 CarPlay 车载
所支持 App 的类别

54
00:03:43,257 --> 00:03:49,196
有些模板与特定类别的
相关性更高

55
00:03:49,229 --> 00:03:53,667
此图表可帮助您了解
根据您 App 的类别

56
00:03:53,700 --> 00:03:55,769
可以选择哪些模板

57
00:03:55,802 --> 00:04:01,708
我知道这表格看起来
像 DMV 视力表 不过不用担心

58
00:04:01,742 --> 00:04:07,014
您可以在我们的在线开发者文档中
找到这个表格

59
00:04:07,047 --> 00:04:11,118
这里需要注意的是
App 可以使用的模板

60
00:04:11,151 --> 00:04:13,253
取决于它的类别

61
00:04:13,287 --> 00:04:16,490
仅允许使用与 App 类别相关

62
00:04:16,523 --> 00:04:19,793
且适用的模板

63
00:04:19,826 --> 00:04:23,330
现在我们已经讨论了模板
我们再来仔细看看

64
00:04:23,363 --> 00:04:26,667
iOS16 推出的新 App 类别

65
00:04:26,700 --> 00:04:30,604
首先看下新的加油 App

66
00:04:31,972 --> 00:04:37,211
在 iOS14 中 我们推出了
支持电动汽车充电的 App

67
00:04:37,244 --> 00:04:40,948
这些 App 不仅可查找
电动汽车充电站的位置

68
00:04:40,981 --> 00:04:45,953
它们的功能还不止于此 例如
它们可帮助用户连接到

69
00:04:45,986 --> 00:04:48,589
正确的充电站并启动充电

70
00:04:48,622 --> 00:04:52,025
我们听许多开发人员说
这种类型的功能将

71
00:04:52,059 --> 00:04:56,196
不仅适用于电动汽车

72
00:04:56,230 --> 00:05:00,634
无论是传统的汽油车
还是替代燃料汽车

73
00:05:00,667 --> 00:05:06,273
这个新类别都可以让您的
加油 App 支持 CarPlay 车载

74
00:05:06,306 --> 00:05:09,443
许多用户使用导航 App 来查找

75
00:05:09,476 --> 00:05:12,546
并驾驶到特定的位置
因此您的加油 App 应在

76
00:05:12,579 --> 00:05:17,351
其 CarPlayUI 中启用更多功能
而不仅仅是查找位置

77
00:05:17,384 --> 00:05:19,887
关于 App 可以启用的功能
其中一个很好的例子

78
00:05:19,920 --> 00:05:22,656
就是启动加油

79
00:05:22,689 --> 00:05:27,528
现在 我们谈谈驾驶任务 App

80
00:05:27,561 --> 00:05:30,964
驾驶任务是一款新型
CarPlay 车载 App

81
00:05:30,998 --> 00:05:36,003
旨在支持各种非常简单的App

82
00:05:36,036 --> 00:05:40,073
请记住 这些 App 的主要目的
必须是实现人们

83
00:05:40,107 --> 00:05:44,511
驾驶时需要完成的操作
要对驾驶有实际帮助

84
00:05:44,545 --> 00:05:47,814
而不仅是一项任务

85
00:05:49,349 --> 00:05:53,187
这类 App 包括帮助
控制汽车配件的应用

86
00:05:53,220 --> 00:05:58,825
提供驾驶或道路
状态和信息的应用

87
00:05:58,859 --> 00:06:05,165
以及帮助完成驾驶前后
操作的应用

88
00:06:05,199 --> 00:06:08,202
让我们看一些更具体的例子

89
00:06:09,670 --> 00:06:13,707
首先 我们有一个路况 App
可以通知用户

90
00:06:13,740 --> 00:06:16,677
重要的道路信息

91
00:06:16,710 --> 00:06:21,181
这个应用程序是使用
CPPointOfInterestTemplate 搭建的

92
00:06:21,215 --> 00:06:24,184
请记住
使用此 App 的用户正在驾驶

93
00:06:24,218 --> 00:06:28,956
因此这样的 App 应在
用户位置附近提供

94
00:06:28,989 --> 00:06:31,225
非常简短的重要项目列表

95
00:06:31,258 --> 00:06:34,828
这并不是帮助用户在驾驶前

96
00:06:34,862 --> 00:06:36,697
做完整的路线规划

97
00:06:38,465 --> 00:06:43,136
在这个 App 中 这是用户
在选择位置时看到的内容

98
00:06:43,170 --> 00:06:47,341
要注意控制文本长度
从而信息可以一目了然

99
00:06:47,374 --> 00:06:51,879
因此 此处语言应尽量简洁

100
00:06:54,181 --> 00:06:58,819
接下来 我们看一个
控制汽车配件的App

101
00:06:58,852 --> 00:07:01,855
在这个案例中是

102
00:07:01,889 --> 00:07:06,693
该 App 使用 CPInformationTemplate
提供所连接配件的基本信息

103
00:07:06,727 --> 00:07:12,900
以及供用户操作的几个按钮

104
00:07:12,933 --> 00:07:17,871
注意 在本例中 这是 App 在
CarPlay 车载中的整个UI

105
00:07:17,905 --> 00:07:20,073
没有其它画面了

106
00:07:20,107 --> 00:07:23,110
当然 这款 App 还有
很多其它功能

107
00:07:23,143 --> 00:07:26,980
比如管理配对的附件

108
00:07:27,014 --> 00:07:30,884
但任何驾驶无关的功能

109
00:07:30,918 --> 00:07:34,755
都不包括在该 App 的
CarPlay UI 中

110
00:07:34,788 --> 00:07:38,225
用户下车时
最好在 iPhone 上使用

111
00:07:38,258 --> 00:07:42,362
该 App 主 UI 进行
非驾驶相关任务

112
00:07:44,031 --> 00:07:49,870
最后 让我们看几个
使用 CPGridTemplate 的例子

113
00:07:49,903 --> 00:07:53,974
这是一个极其简单的 App
只有两个按钮 其它没了

114
00:07:54,007 --> 00:07:56,543
用户可以记录

115
00:07:56,577 --> 00:07:59,546
个人或商务里程

116
00:07:59,580 --> 00:08:03,283
这款 App 完全符合
新的驾驶任务 App 类别

117
00:08:03,317 --> 00:08:07,921
因为它让用户可以在驾驶时
执行所需的非常简单操作

118
00:08:07,955 --> 00:08:11,658
而无需启用任何其它
非关键操作

119
00:08:11,692 --> 00:08:14,695
简单 切中要害

120
00:08:14,728 --> 00:08:18,765
通过该例可以看到 这种风格的 UI
可以服务于多种类别的 App

121
00:08:18,799 --> 00:08:23,170
这里有另一个例子
它的 UI 基本一样

122
00:08:23,203 --> 00:08:28,108
这是一个快速通道
收费应答器 App

123
00:08:28,141 --> 00:08:32,479
使用 CPGridTemplate
用户可选择车内有多少乘客

124
00:08:32,513 --> 00:08:36,383
它与前面案例的目标完全相同

125
00:08:36,416 --> 00:08:39,019
是另一个完美的驾驶任务 App

126
00:08:40,287 --> 00:08:42,990
简而言之
在设计驾驶任务 App 时

127
00:08:43,023 --> 00:08:46,627
一定要考虑制作单屏 App

128
00:08:46,660 --> 00:08:50,130
可供用户进行驾驶期间
最少的必要操作

129
00:08:50,163 --> 00:08:54,801
且在数秒内就能完成

130
00:08:54,835 --> 00:08:59,072
应该避免启用复杂
或不常见的使用场景

131
00:08:59,106 --> 00:09:04,044
一个很好的例子就是
首次设置或详细配置

132
00:09:04,077 --> 00:09:07,080
最后 您的 App 不应
添加驾驶时不需要的功能

133
00:09:07,114 --> 00:09:11,151
即使是与汽车有关的

134
00:09:11,185 --> 00:09:13,921
这不是大杂烩

135
00:09:13,954 --> 00:09:16,657
以上就是驾驶任务 App

136
00:09:16,690 --> 00:09:21,795
现在我们换一个话题
谈谈如何测试 CarPlay 车载 App

137
00:09:21,828 --> 00:09:25,098
我们将回顾当前的
不同测试方式

138
00:09:25,132 --> 00:09:29,102
之后我会介绍一个新的工具
CarPlay 车载模拟器

139
00:09:29,136 --> 00:09:32,840
开发人员可以使用
不同的工具测试

140
00:09:32,873 --> 00:09:36,276
支持 CarPlay 车载的 App

141
00:09:36,310 --> 00:09:42,282
首先 大家可以使用内置 CarPlay 车载
窗口的 Xcode 模拟器

142
00:09:42,316 --> 00:09:46,320
如果您已经在使用 Xcode 模拟器
来测试其它 App

143
00:09:46,353 --> 00:09:50,991
这也是快速测试 CarPlay UI 的
好方法

144
00:09:51,024 --> 00:09:54,161
其次 如果您想在实际的 iPhone 上
测试自己的 App

145
00:09:54,194 --> 00:09:58,332
当然可以把自己的手机连接到
支持 CarPlay 车载的车辆

146
00:09:58,365 --> 00:10:00,601
或售后市场车载主机

147
00:10:00,634 --> 00:10:04,204
直到最近 这还是在 iPhone 上
测试 CarPlay UI 中

148
00:10:04,238 --> 00:10:08,675
运行 App 的唯一方法
但我很高兴地告诉您

149
00:10:08,709 --> 00:10:13,013
我们现在为提供了第三种选择
可能会成为大家最倾向的选择

150
00:10:13,046 --> 00:10:14,948
CarPlay 车载模拟器

151
00:10:14,982 --> 00:10:18,752
我们详细了解下

152
00:10:18,785 --> 00:10:20,821
这是什么呢

153
00:10:20,854 --> 00:10:24,491
CarPlay 车载模拟器是一个
独立的 Mac 应用程序

154
00:10:24,525 --> 00:10:27,027
可以复制一个 CarPlay 车载环境

155
00:10:27,060 --> 00:10:30,597
您只需在 Apple
开发者网站上下载

156
00:10:30,631 --> 00:10:34,168
“Additional Tools for Xcode”套件
运行 App

157
00:10:34,201 --> 00:10:38,472
然后用数据线连接您的
iPhone 和 Mac

158
00:10:38,505 --> 00:10:41,375
CarPlay 车载将在手机上
启动并运行

159
00:10:41,408 --> 00:10:44,811
和连接到真正的汽车上一样

160
00:10:44,845 --> 00:10:48,048
这有什么特别的呢
为什么要用这个模拟器呢

161
00:10:48,081 --> 00:10:50,050
有以下几个好处

162
00:10:51,852 --> 00:10:54,888
首先 使用 CarPlay
车载模拟器时

163
00:10:54,922 --> 00:10:57,090
CarPlay 车载在
iPhone 上运行的方式

164
00:10:57,124 --> 00:11:00,460
和在汽车上一样

165
00:11:00,494 --> 00:11:03,363
这意味着您可以在手机上
测试自己 App

166
00:11:03,397 --> 00:11:06,400
而不需要经常往返于停车位

167
00:11:06,433 --> 00:11:10,404
或购买售后车载主机

168
00:11:10,437 --> 00:11:14,641
另一个好处是
当使用 CarPlay 车载模拟器时

169
00:11:14,675 --> 00:11:18,178
您的手机与 Mac 连接

170
00:11:18,212 --> 00:11:21,615
您可以同时使用 Mac 上
所有其它强大的开发人员工具

171
00:11:21,648 --> 00:11:26,854
无论是在 Xcode 中调试
还是在 Instruments 中调整性能

172
00:11:26,887 --> 00:11:30,224
在 iOS 方面也是如此
因为您的 App

173
00:11:30,257 --> 00:11:34,928
是在真正的 iPhone 上运行的
所以可以访问完整的 iPhone 功能

174
00:11:34,962 --> 00:11:39,299
如果没有真正的 CarPlay 车载系统
或者现在的 CarPlay 车载模拟器

175
00:11:39,333 --> 00:11:41,568
有些场景是无法测试的

176
00:11:43,470 --> 00:11:46,740
一个很好的例子是测试
导航 App 的语音指令

177
00:11:46,773 --> 00:11:51,979
是否与汽车的原生音频源正确融合
如 FM 收音机

178
00:11:52,012 --> 00:11:55,349
现在 您可以在办公桌上
方便地进行测试

179
00:11:56,950 --> 00:11:59,686
最后 您还可以使用
CarPlay 车载模拟器

180
00:11:59,720 --> 00:12:02,756
来测试多种不同配置的汽车

181
00:12:02,789 --> 00:12:06,593
例如不同显示尺寸的汽车

182
00:12:06,627 --> 00:12:10,197
我们来看看 CarPlay 车载模拟器
是怎么运行的

183
00:12:10,230 --> 00:12:11,832
好了

184
00:12:11,865 --> 00:12:14,835
如您所见 连接 iPhone 的
CarPlay 车载显示屏

185
00:12:14,868 --> 00:12:18,639
与几个控制按钮一起
出现在 App 中

186
00:12:18,672 --> 00:12:22,643
我们来看看有什么功能

187
00:12:22,676 --> 00:12:25,312
屏幕底部是模拟汽车中

188
00:12:25,345 --> 00:12:28,916
各种快捷键和控制旋钮

189
00:12:31,018 --> 00:12:34,321
您也可以在 CarPlay 车载视图中
直接点击

190
00:12:34,354 --> 00:12:36,123
来模拟触摸屏车辆

191
00:12:38,192 --> 00:12:41,295
在窗口顶部有一些快捷控制

192
00:12:41,328 --> 00:12:45,032
仅有的几个 UI 按钮
可以模拟汽车行驶过程中

193
00:12:45,065 --> 00:12:48,535
CarPlay 车载显示的限制

194
00:12:48,569 --> 00:12:53,140
例如 可以缩短音频 App 中的
列表内容

195
00:12:55,576 --> 00:12:59,079
接下来的两个按钮分别用于
模拟汽车何时请求 UI

196
00:12:59,112 --> 00:13:02,916
和地图外观颜色的深浅

197
00:13:04,952 --> 00:13:08,322
最后一个按钮可以快速模拟

198
00:13:08,355 --> 00:13:11,491
手机与 CarPlay 车载的
断开和重连

199
00:13:11,525 --> 00:13:13,927
因为当你们使用这个按钮时
手机仍然与 Mac 保持连接

200
00:13:13,961 --> 00:13:17,431
您可以用它在 App 中
使用Xcode

201
00:13:17,464 --> 00:13:20,567
调试 CarPlay 车载重连的场景

202
00:13:22,870 --> 00:13:25,572
但我刚刚跳过的
第一个按钮是什么呢

203
00:13:25,606 --> 00:13:29,409
您可能已经猜到了
这将弹出一个

204
00:13:29,443 --> 00:13:32,346
高级功能的辅助窗口

205
00:13:32,379 --> 00:13:34,815
我们来看看有哪些高级功能

206
00:13:36,817 --> 00:13:40,354
在 General (常规) 选项卡中
您可以选择

207
00:13:40,387 --> 00:13:43,657
CarPlay 车载的显示尺寸

208
00:13:43,690 --> 00:13:47,027
如果您的 App UI
仅由模板组成

209
00:13:47,060 --> 00:13:51,064
那可以尝试不同尺寸的 UI

210
00:13:51,098 --> 00:13:54,835
查看该 UI 在不同的汽车中
如何显示

211
00:13:54,868 --> 00:13:58,305
但正如我们之前谈到的
系统将确保一切正常运行

212
00:13:58,338 --> 00:14:00,674
然而 如果您的 App 是用于导航的

213
00:14:00,707 --> 00:14:04,178
那么尝试不同的尺寸和纵横比
以确保地图绘制代码

214
00:14:04,211 --> 00:14:07,714
正确运行是非常重要的

215
00:14:07,748 --> 00:14:10,918
这里有一些推荐的显示尺寸
可以在 App 中进行测试

216
00:14:10,951 --> 00:14:14,855
我们看看 Cluster Display (群集信息)
选项卡

217
00:14:14,888 --> 00:14:17,090
可以看到 您可以通过

218
00:14:17,124 --> 00:14:20,160
仪表盘中的第二个显示器
来模拟汽车

219
00:14:20,194 --> 00:14:24,965
只需勾选该选项 重新启动会话

220
00:14:24,998 --> 00:14:27,434
就会在主显示屏旁出现

221
00:14:27,467 --> 00:14:30,470
仪表盘的第二个窗口

222
00:14:30,504 --> 00:14:34,775
同样 这是与导航 App
最为相关的

223
00:14:34,808 --> 00:14:39,112
仪表盘显示器用于
在汽车仪表盘可视角度中

224
00:14:39,146 --> 00:14:43,750
为驾驶员显示地图或转向卡

225
00:14:43,784 --> 00:14:46,119
我们稍后会详细了解
关于仪表盘的内容

226
00:14:46,153 --> 00:14:50,057
这里可以快速浏览下
新的 CarPlay 车载模拟器界面

227
00:14:50,090 --> 00:14:53,460
希望您也和我们一样
认为这非常有用

228
00:14:53,493 --> 00:14:58,498
我们刚刚看到 CarPlay 车载
如何在仪表盘中绘制实时地图

229
00:14:58,532 --> 00:15:00,634
但是您的导航 App 呢

230
00:15:00,667 --> 00:15:05,038
如何添加并测试仪表盘
是否支持您的 App 呢

231
00:15:05,072 --> 00:15:07,174
我们一起来看看

232
00:15:07,207 --> 00:15:10,844
你可能还记得 在 iOS 13 中
我们添加了 APIs

233
00:15:10,878 --> 00:15:14,982
使导航 App 显示在
CarPlay 车载仪表盘中

234
00:15:15,015 --> 00:15:17,885
要做到这一点 您需要编辑
App 的 Info.plist 文件

235
00:15:17,918 --> 00:15:22,489
以声明对仪表盘的支持
并进行所需的代理委托

236
00:15:22,523 --> 00:15:27,261
当它在仪表盘中出现和消失时
代理会通知您的 App

237
00:15:27,294 --> 00:15:33,200
并将 UIWindow 传到 App
以在其中绘制地图内容

238
00:15:33,233 --> 00:15:34,968
很简单

239
00:15:35,002 --> 00:15:37,037
如果你已经完成了
那么有一个好消息

240
00:15:37,070 --> 00:15:39,706
添加仪表盘支持将是小菜一碟

241
00:15:39,740 --> 00:15:42,709
因为它遵循完全相同的模式

242
00:15:42,743 --> 00:15:49,049
看看我是如何在我的导航测试 App
Space Roads中实现此操作的

243
00:15:49,082 --> 00:15:51,552
我编辑了我的 Info.plist 文件

244
00:15:51,585 --> 00:15:55,756
声明对仪表盘导航场景的支持

245
00:15:55,789 --> 00:15:59,493
并添加了所需的

246
00:15:59,526 --> 00:16:01,528
然后进行了我的

247
00:16:01,562 --> 00:16:05,365
CPTemplateApplicationInstrumentCluster
场景委托

248
00:16:05,399 --> 00:16:10,170
以及我的
CPInstrumentClusterControllerDelegate

249
00:16:10,204 --> 00:16:13,307
这将提供一个窗口
在其中绘制自己的内容

250
00:16:13,340 --> 00:16:17,811
并在仪表盘启动和结束时通知您

251
00:16:17,845 --> 00:16:20,681
使仪表盘视图可见

252
00:16:20,714 --> 00:16:23,283
这就是地图实时显示在

253
00:16:23,317 --> 00:16:26,253
汽车仪表盘中的全部内容

254
00:16:26,286 --> 00:16:29,690
虽然这与实现仪表盘支持非常相似

255
00:16:29,723 --> 00:16:34,361
但还有一些针对仪表盘的注意事项

256
00:16:34,394 --> 00:16:40,734
首先 仪表盘可允许用户
放大或缩小地图

257
00:16:40,767 --> 00:16:44,137
您要负责用

258
00:16:44,171 --> 00:16:48,075
在自己的 App 中实现这一点

259
00:16:48,108 --> 00:16:51,111
类似地 如果您的 App
包含指南针或限速

260
00:16:51,144 --> 00:16:53,680
相应的代理将告知
您的 App

261
00:16:53,714 --> 00:16:57,017
何时适合绘制

262
00:16:57,050 --> 00:17:01,722
最后 注意您的仪表盘视图

263
00:17:01,755 --> 00:17:05,092
可能会被汽车仪表盘中的
其它元素遮挡

264
00:17:05,125 --> 00:17:10,063
当然 iOS 已经有了一流的机制
来处理这类情况

265
00:17:10,097 --> 00:17:11,832
安全区域

266
00:17:11,865 --> 00:17:15,636
您可以覆盖
view controller 上的

267
00:17:15,669 --> 00:17:19,006
viewSafeAreaInsetsDidChange
以了解安全区域的变化

268
00:17:19,039 --> 00:17:22,843
并在仪表盘视图上使用

269
00:17:22,876 --> 00:17:28,448
来保证视图区域中的
关键内容是可见的

270
00:17:28,482 --> 00:17:31,385
例如 如果有一条蓝色的路线
显示用户的位置

271
00:17:31,418 --> 00:17:34,121
就要确保关键部分

272
00:17:34,154 --> 00:17:36,957
在安全区域内

273
00:17:36,990 --> 00:17:41,795
我们为搭建 CarPlay 车载 App 的
开发者启用了一些新功能

274
00:17:41,828 --> 00:17:44,865
有一个测试 App 的新工具

275
00:17:44,898 --> 00:17:47,367
我们来看看它的实际应用

276
00:17:47,401 --> 00:17:51,972
首先 我将从我的 Mac 开始
展示 CarPlay 车载模拟器

277
00:17:52,005 --> 00:17:55,642
App 已运行
我只需连接我的手机

278
00:18:02,716 --> 00:18:05,152
看 它正在运行 CarPlay 车载

279
00:18:05,185 --> 00:18:09,356
我们看看 CarPlay 车载模拟器
如何测试您的 App

280
00:18:09,389 --> 00:18:13,827
即使你们的 App 主要是基于模板
也可以使用它

281
00:18:13,861 --> 00:18:18,899
来确保 App 外观
在深色和浅色背景中都适用

282
00:18:18,932 --> 00:18:21,568
我来运行 Express Lane App

283
00:18:24,137 --> 00:18:26,273
我可以使用工具栏上的按钮

284
00:18:26,306 --> 00:18:30,277
在浅色和深色外观之间切换

285
00:18:30,310 --> 00:18:35,048
我的 App 为这两种风格
提供了不同的视觉效果

286
00:18:35,082 --> 00:18:38,552
看起来不错

287
00:18:38,585 --> 00:18:42,523
现在我们切换到我编写的
导航测试 App Space Roads

288
00:18:44,658 --> 00:18:47,895
我将使用主配置面板

289
00:18:47,928 --> 00:18:51,798
尝试在不同的屏幕尺寸上
绘制地图代码

290
00:18:57,804 --> 00:19:01,074
最后 我将启用仪表盘显示

291
00:19:01,108 --> 00:19:03,844
以测试仪表盘的支持

292
00:19:08,081 --> 00:19:09,716
显示出来了 效果很好

293
00:19:10,617 --> 00:19:14,755
早些时候 我在 CarPlay 车载模拟器中
对我的 App 进行了全面测试

294
00:19:14,788 --> 00:19:18,458
所以现在 我有充分的信心
App 在汽车上能完美运行

295
00:19:18,492 --> 00:19:20,360
我们来试下吧

296
00:19:20,394 --> 00:19:23,297
好了 现在在我的车里
正如你所看到的

297
00:19:23,330 --> 00:19:26,466
我把手机连接到车上
运行 CarPlay 车载

298
00:19:27,868 --> 00:19:31,772
首先 我们试着运行我
连接的Trailer Controller App

299
00:19:31,805 --> 00:19:36,310
这样可以向您展示
模板如何使 App

300
00:19:36,343 --> 00:19:38,345
在启用旋钮的车辆中正常运行

301
00:19:40,247 --> 00:19:44,184
这款车既有触摸屏
也有旋钮控制器

302
00:19:44,218 --> 00:19:47,621
但许多用户喜欢在驾驶时
使用旋钮控制器

303
00:19:47,654 --> 00:19:51,758
所以 App 用旋钮良好运行
也非常重要

304
00:19:51,792 --> 00:19:54,661
如您所见
我的 App 可以正常

305
00:19:54,695 --> 00:19:57,998
使用旋钮操作 最好的是

306
00:19:58,031 --> 00:20:01,435
我不需要其它特别的操作
模板已全部涵盖了

307
00:20:03,971 --> 00:20:07,975
接下来 我们切换到
我的导航 App Space Roads

308
00:20:08,008 --> 00:20:10,911
我们启动 App

309
00:20:10,944 --> 00:20:14,781
开始导航

310
00:20:14,815 --> 00:20:16,750
然后我点击 Go

311
00:20:16,783 --> 00:20:18,352
好了

312
00:20:18,385 --> 00:20:22,055
我的 App 同时在
中控台和仪表盘上

313
00:20:22,089 --> 00:20:24,658
都显示了实时地图视图

314
00:20:24,691 --> 00:20:29,429
实时地图正好在驾驶视线内
真是太棒了

315
00:20:29,463 --> 00:20:33,800
我相信使用您导航 App 的司机
也会喜欢的

316
00:20:33,834 --> 00:20:35,802
好了 这就是我今天的
全部内容

317
00:20:35,836 --> 00:20:40,407
要了解更多信息
请查看 CarPlay 开发者门户网站

318
00:20:40,440 --> 00:20:44,011
developer.apple.com/CarPlay

319
00:20:44,044 --> 00:20:47,114
谢谢你们 祝大家旅途愉快

