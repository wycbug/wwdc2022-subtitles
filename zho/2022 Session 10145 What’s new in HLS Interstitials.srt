1
00:00:00,334 --> 00:00:06,340
[欢快的音乐]

2
00:00:09,309 --> 00:00:14,147
大家好 我是 Prashant
欢迎来到 WWDC

3
00:00:14,181 --> 00:00:18,085
2021 年
我们推出了 HLS Interstitials

4
00:00:18,118 --> 00:00:21,188
可在您的 HLS 流中
简单地加入广告

5
00:00:21,221 --> 00:00:23,423
和其它插屏

6
00:00:23,457 --> 00:00:24,992
今年 我们新增了

7
00:00:25,025 --> 00:00:27,494
让您更好地优化广告位

8
00:00:27,528 --> 00:00:29,997
同时调整展示方式的功能

9
00:00:30,030 --> 00:00:33,467
来 我们一起看看
HLS Interstitials 有什么新内容吧

10
00:00:33,500 --> 00:00:39,306
在这次讲座中 我们先快速回顾下
HLS Interstitials 是如何运作的

11
00:00:39,339 --> 00:00:44,144
接着 我们来讨论下新增的
广告提示选项

12
00:00:44,178 --> 00:00:47,147
随后 我们来看下您可以如何
调整广告体验

13
00:00:47,181 --> 00:00:51,552
尤其在使用 SNAP 属性的
直播场景中

14
00:00:51,585 --> 00:00:53,820
然后 我们看下
HLS specification 中新增的

15
00:00:53,854 --> 00:00:57,291
一些查询参数

16
00:00:57,324 --> 00:01:00,761
最后 我们来探讨在这些新功能下

17
00:01:00,794 --> 00:01:03,564
AVFoundation APIs 中的
具体改变

18
00:01:03,597 --> 00:01:05,933
但在我们了解新功能前

19
00:01:05,966 --> 00:01:09,369
先快速回顾下 HLS interstitials

20
00:01:09,403 --> 00:01:12,573
有了 HLS Interstitials
广告可以被当作一种独立的资产来处理

21
00:01:12,606 --> 00:01:15,542
它可以被加入到一条编程时间线

22
00:01:15,576 --> 00:01:18,545
不再需要链接非连续的标签

23
00:01:18,579 --> 00:01:22,716
相反 它们可以直接通过
多元播放列表直接引用

24
00:01:22,749 --> 00:01:26,353
这让广告的安排更简单 因为您只需

25
00:01:26,386 --> 00:01:29,323
从您的主要内容指向
多元播放列表即可

26
00:01:30,324 --> 00:01:35,028
这是典型的媒体播放列表
显示主要内容时间线

27
00:01:35,062 --> 00:01:38,031
假设您要在回放期间
安排两个广告

28
00:01:38,065 --> 00:01:42,202
您想要第一个广告
在回放大约 5 秒后出现

29
00:01:42,236 --> 00:01:46,773
那您只要用 DATE-RANGE 标签
指定广告的开始时间

30
00:01:48,275 --> 00:01:51,445
而第二个广告在 15 秒时出现

31
00:01:51,478 --> 00:01:54,748
那就在播放列表加入
另一个标签

32
00:01:54,781 --> 00:01:56,316
就这么简单

33
00:01:57,451 --> 00:02:02,222
也可能您的主要内容里
已经有一些嵌入广告了

34
00:02:02,256 --> 00:02:05,325
您甚至可以通过指定一个
等同于这些内嵌广告时长的

35
00:02:05,359 --> 00:02:07,861
resume offset 来替换这些广告

36
00:02:08,996 --> 00:02:12,432
此外 HLS interstitials 还可让您

37
00:02:12,466 --> 00:02:14,668
为广告指定导航限制

38
00:02:14,701 --> 00:02:17,371
您甚至可以在直播场景中
安排复位

39
00:02:17,404 --> 00:02:18,639
和其它方面

40
00:02:18,672 --> 00:02:21,141
您可查看 WWDC 2021 的
“Dynamically insert midrolls

41
00:02:21,175 --> 00:02:26,513
and prerolls in HLS”
以获得更多信息

42
00:02:26,547 --> 00:02:29,650
虽然您可以顺着内容时间线
安排广告

43
00:02:29,683 --> 00:02:33,086
但今年 我们还新增了
强制将广告放置在

44
00:02:33,120 --> 00:02:35,589
回放开始或结束的属性

45
00:02:35,622 --> 00:02:39,760
因此 我们增加了以下新提示选项

46
00:02:39,793 --> 00:02:41,895
您可指定 CUE 属性

47
00:02:41,929 --> 00:02:46,400
这一属性以下值的其中之一
或组合

48
00:02:46,433 --> 00:02:48,602
PRE 值可以让广告

49
00:02:48,635 --> 00:02:51,872
在主要内容开始前出现

50
00:02:51,905 --> 00:02:53,774
在直播场景中 如果您想在
节目开始前

51
00:02:53,807 --> 00:02:56,243
安排一个优质广告位

52
00:02:56,276 --> 00:02:58,712
这就尤为有用

53
00:02:58,745 --> 00:03:00,948
POST 值指示广告在

54
00:03:00,981 --> 00:03:03,917
主要内容后出现

55
00:03:03,951 --> 00:03:06,954
这在您安排片尾字幕的事件流中
会比较有用

56
00:03:06,987 --> 00:03:08,989
比如实时事件的结尾

57
00:03:09,890 --> 00:03:13,193
ONCE 值可让广告
只出现一次

58
00:03:13,227 --> 00:03:15,696
如果用户再退回到广告之前

59
00:03:15,729 --> 00:03:18,332
则不会再看到该广告

60
00:03:18,365 --> 00:03:20,834
分级屏幕是一个很好的应用

61
00:03:20,868 --> 00:03:24,338
典型的在回放开始时
只播放一次的例子

62
00:03:25,939 --> 00:03:29,042
这里是一个播放列表的例子
您的广告可以安排为

63
00:03:29,076 --> 00:03:31,311
前贴片广告和后贴片广告

64
00:03:31,345 --> 00:03:34,615
注意前贴片广告仅播放一次

65
00:03:34,648 --> 00:03:37,351
在回放开始大约 10 秒后

66
00:03:37,384 --> 00:03:39,520
我们也安排了一则单次广告

67
00:03:40,654 --> 00:03:45,926
现在 在直播场景中安排广告
也面临着一系列的挑战

68
00:03:45,959 --> 00:03:48,562
比如 您的对象包装程序
可能只用了一个 clock 函数

69
00:03:48,595 --> 00:03:51,465
来设置播放列表中的
程序日期时间标签

70
00:03:51,498 --> 00:03:53,700
而生成媒体的解码器

71
00:03:53,734 --> 00:03:56,136
是由另一个 clock 函数生成的

72
00:03:56,170 --> 00:03:59,873
现在 这两个 clock 函数
不一定要同步

73
00:03:59,907 --> 00:04:03,377
比如 在这个示例中
片段 0 和片段 100 之间

74
00:04:03,410 --> 00:04:07,581
日期时间标签区别大约是
800 秒

75
00:04:09,449 --> 00:04:13,420
然而 聚合媒体持续时间与之相比
会略少

76
00:04:13,453 --> 00:04:16,190
因为个别片段持续时间
在 8 秒以下

77
00:04:17,558 --> 00:04:19,493
在这样的场景中
您的对象包装程序 clock 函数

78
00:04:19,526 --> 00:04:21,929
比解码器的 clock 函数略快

79
00:04:21,962 --> 00:04:27,134
实际广告开始的媒体时间
可能在 slate 中的某处

80
00:04:27,167 --> 00:04:29,436
如果您想从偏移位置
即和这里展示的广告持续时长一样处

81
00:04:29,469 --> 00:04:32,506
开始加入主内容

82
00:04:32,539 --> 00:04:36,276
实际上 结果您是丢失了
跟随 slate 的一些主要内容

83
00:04:37,544 --> 00:04:40,314
您现在可使用 SNAP 属性
和 OUT 值

84
00:04:40,347 --> 00:04:43,317
在最接近预期广告时间的
段边界上

85
00:04:43,350 --> 00:04:46,653
摆脱主要内容

86
00:04:46,687 --> 00:04:49,523
同样地 用 SNAP 属性和 IN 值

87
00:04:49,556 --> 00:04:54,294
来迅速跳回最接近
广告返回时间的主要内容处

88
00:04:54,328 --> 00:04:56,964
注意 我们希望您仅在
直播场景

89
00:04:56,997 --> 00:05:00,934
使用 SNAP 属性
因为在处理预打包需求内容时

90
00:05:00,968 --> 00:05:03,637
clock 函数偏移是不存在的

91
00:05:04,638 --> 00:05:09,676
这里是一个直播的播放列表
广告安排有流出和流入

92
00:05:10,410 --> 00:05:13,480
今年 我们也增加了一些咨询参数

93
00:05:13,514 --> 00:05:15,782
可帮助优化广告库存

94
00:05:15,816 --> 00:05:18,218
以及优化会话管理

95
00:05:18,252 --> 00:05:21,989
现在 您在 Ad pod 中
转变成了直播流转

96
00:05:22,022 --> 00:05:25,025
您会很有兴趣知道
ad pod 现在进展到第几步了

97
00:05:25,058 --> 00:05:28,262
因此在剩余的时间里
可以展示您最优价值的存货

98
00:05:29,396 --> 00:05:33,367
我们添加了
HLS_start_offset 参数

99
00:05:33,400 --> 00:05:35,235
_HLS_start_offset 咨询参数

100
00:05:35,269 --> 00:05:39,773
只提供插页式广告
Asset-list URL 的请求

101
00:05:39,806 --> 00:05:42,709
在直播内容方面
这可向 asset-list 指定偏移

102
00:05:42,743 --> 00:05:45,946
回放在加入直播流时再次响起

103
00:05:45,979 --> 00:05:47,481
对于有需求内容的视频来说

104
00:05:47,514 --> 00:05:49,583
它将会是寻找用插屏广告的
替代位置时

105
00:05:49,616 --> 00:05:52,653
Asset-list列表的偏移地址

106
00:05:54,121 --> 00:05:57,257
在这一样本中 我们有一个
实时播放列表 有 15 秒广告

107
00:05:57,291 --> 00:06:01,161
在播放列表顶部
安排在 5 秒后开始

108
00:06:01,195 --> 00:06:05,399
这里突出的片段
将会被插页式广告取代

109
00:06:05,432 --> 00:06:07,768
现在在实时加入中
典型的客户是直播边缘背后

110
00:06:07,801 --> 00:06:10,737
大约 3 个目标的时长

111
00:06:10,771 --> 00:06:13,640
此时已经安排好的 15 秒 ad pod

112
00:06:13,674 --> 00:06:15,709
可能播放了 10 秒

113
00:06:15,742 --> 00:06:20,080
这就是 HLS_Start_offset
咨询参数的一部分

114
00:06:20,113 --> 00:06:22,950
现在客户只有 5 秒的
剩余广告时间了

115
00:06:22,983 --> 00:06:26,954
服务器可以构建 asset-list
因此清单上最后 5 秒

116
00:06:26,987 --> 00:06:29,089
就播放了最有价值的广告

117
00:06:30,190 --> 00:06:32,559
在您的服务器中
您可以能需要一个方法

118
00:06:32,593 --> 00:06:35,896
来在多重请求下
跟踪一些回放的会话

119
00:06:35,929 --> 00:06:39,967
这样您不会一个广告
重复看很多遍

120
00:06:40,868 --> 00:06:44,037
因此 要将广告请求
与主要回放会话连接

121
00:06:44,071 --> 00:06:47,741
我们添加了
HLS_primary_id 查询参数

122
00:06:47,774 --> 00:06:51,411
如果为了特定的回放会话的
所有 http 请求

123
00:06:51,445 --> 00:06:53,914
客户设置回放会话 id 请求 header

124
00:06:53,947 --> 00:06:55,716
然后他们可以将该部分 ID

125
00:06:55,749 --> 00:06:58,418
作为 _HLS_primary_id
查询参数的一部分

126
00:06:58,452 --> 00:07:02,890
到 X-Asset-URI 和
X-Asset-List 请求

127
00:07:02,923 --> 00:07:05,459
不用设置会话 id
请求 header 的顾客

128
00:07:05,492 --> 00:07:08,428
应为每个主要回放会话
创建一个独立的值

129
00:07:08,462 --> 00:07:11,865
将其作为 _HLS_primary_id 查询参数
来使用

130
00:07:11,899 --> 00:07:15,469
不管是主要还是插页式广告资产

131
00:07:15,502 --> 00:07:18,038
您可能调用了 AVFoundation

132
00:07:18,071 --> 00:07:22,943
提供 AVPlayerInterstitialController
和 AVPlayerInterstitialEvent 对象

133
00:07:22,976 --> 00:07:26,079
让您从客户的角度计划广告

134
00:07:26,113 --> 00:07:28,782
现在我们也增加了对提示
和 SNAP 选项的支持

135
00:07:28,815 --> 00:07:32,219
以及 AVPlayerInterstitialEvent 对象

136
00:07:32,252 --> 00:07:35,589
您可以通过 Cue 属性指定
提示选项 不管广告是要

137
00:07:35,622 --> 00:07:38,659
前贴片广告还是后贴片

138
00:07:38,692 --> 00:07:43,063
通过日期范围标签中的
Cue 属性发出播放一次的信号选项

139
00:07:43,096 --> 00:07:46,366
通过 willPlayOnce property
设置为布尔值

140
00:07:46,400 --> 00:07:48,836
选项到 Snap-Out 是通过

141
00:07:48,869 --> 00:07:51,839
alignsStartWithPrimarySegmentBoundary
属性发出信号的

142
00:07:51,872 --> 00:07:53,807
要 Snap-in 您要设置

143
00:07:53,841 --> 00:07:56,877
alignsResumptionWithPrimarySegmentBoundary
属性

144
00:07:58,645 --> 00:08:01,148
随着 AVPlayerInterstitialEvent 持续增长

145
00:08:01,181 --> 00:08:03,917
我们认为将其从对象创建中

146
00:08:03,951 --> 00:08:05,986
将其属性设置独立开来最好

147
00:08:06,019 --> 00:08:10,090
因此 我们现在
做了 AVPlayerInterstitialEvent 可变对象

148
00:08:10,123 --> 00:08:12,726
您现在可以创建只有
主要项目的对象

149
00:08:12,759 --> 00:08:14,728
以及事件的开始时间

150
00:08:14,761 --> 00:08:17,030
然后 您可以通过
设置相关的属性

151
00:08:17,064 --> 00:08:19,132
指定不同的配置选项

152
00:08:19,967 --> 00:08:22,236
注意一旦事件在控制面板中
设置好

153
00:08:22,269 --> 00:08:24,471
事件对象任何后续变动

154
00:08:24,505 --> 00:08:26,273
都不会反映在控制面板上

155
00:08:26,306 --> 00:08:29,343
由于控制面板已经做了
这些对象的副本

156
00:08:29,376 --> 00:08:30,911
要让改变生效

157
00:08:30,944 --> 00:08:34,515
您要再次在控制面板上
设置事件

158
00:08:34,548 --> 00:08:38,886
总而言之 您现在可以
使用 X-CUE 属性

159
00:08:38,919 --> 00:08:40,654
将广告计划为前贴片
或后贴片广告

160
00:08:40,687 --> 00:08:45,692
您也可以通过设置 X-CUE 为 1 次
强制让广告只播放一次

161
00:08:45,726 --> 00:08:50,464
要管理直播场景中的偏移
您可以使用 X-SNAP 属性

162
00:08:50,497 --> 00:08:53,233
在实时加入期间
要构建您的 asset lists

163
00:08:53,267 --> 00:08:56,270
您可以使用
_HLS_start_offset 查询参数

164
00:08:56,303 --> 00:08:58,872
您可以使用 HLS_primary_id
查询参数

165
00:08:58,906 --> 00:09:02,543
来联系主要回放会话中的
插页式广告请求

166
00:09:02,576 --> 00:09:06,780
您知道如果用
HLS interstitials 来安排广告

167
00:09:06,813 --> 00:09:11,018
AVFoundation 是否会
在 Shareplay 中管理它们

168
00:09:11,051 --> 00:09:12,619
您可查看“Display ads
and other interstitials in SharePlay”

169
00:09:12,653 --> 00:09:16,023
以获得更多
关于 SharePlay”的信息

170
00:09:16,056 --> 00:09:18,926
以上是我的全部内容
感谢大家的观看

