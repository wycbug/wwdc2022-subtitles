1
00:00:00,000 --> 00:00:03,003
♪ ♪

2
00:00:03,003 --> 00:00:10,077
♪

3
00:00:10,077 --> 00:00:13,914
欢迎来到 WWDC22 的
“WeatherKit 简介”

4
00:00:13,914 --> 00:00:15,182
我叫 Novall

5
00:00:15,182 --> 00:00:17,885
是天气团队的工程师

6
00:00:17,885 --> 00:00:20,721
我们对天气数据的依赖与日俱增

7
00:00:20,721 --> 00:00:23,557
所以从哪里获得天气数据
变得非常重要

8
00:00:23,557 --> 00:00:25,459
从出门前
在 Apple Watch 上查看天气

9
00:00:25,459 --> 00:00:27,094
来决定是否

10
00:00:27,094 --> 00:00:29,329
携带雨伞

11
00:00:29,329 --> 00:00:32,733
到通过预测降雨和霜雪以便于

12
00:00:32,733 --> 00:00:35,836
协助农民规划轮作的
可持续农业工作

13
00:00:35,836 --> 00:00:39,573
为冬季风暴中的旅行
保证安全并做好准备

14
00:00:39,573 --> 00:00:42,176
天气影响每个人

15
00:00:42,176 --> 00:00:44,778
准确的天气信息在如今

16
00:00:44,778 --> 00:00:48,315
深受天气变化影响的世界中
变的比以往更重要

17
00:00:48,315 --> 00:00:50,517
而获得准确的预测

18
00:00:50,517 --> 00:00:53,287
也比在以往任何时候都重要

19
00:00:53,287 --> 00:00:55,923
这就是我们创建
WeatherKit 的原因

20
00:00:55,923 --> 00:00:59,693
WeatherKit 由全新的
Apple Weather Service 提供支持

21
00:00:59,693 --> 00:01:02,863
这是一个顶级的全球天气预报系统

22
00:01:02,863 --> 00:01:05,832
它使用高分辨率气象模型

23
00:01:05,832 --> 00:01:08,802
以及机器学习和预测算法

24
00:01:08,802 --> 00:01:11,038
为您提供超本地化

25
00:01:11,038 --> 00:01:13,307
的全球天气预测

26
00:01:13,307 --> 00:01:16,944
借助 Apple Weather Service
我们可以访问大量数据

27
00:01:16,944 --> 00:01:20,948
所有这些信息都可以通过
WeatherKit 提供给您

28
00:01:20,948 --> 00:01:24,284
准确的天气数据
需要用户的位置信息

29
00:01:24,284 --> 00:01:28,522
而对这些数据保密
是一项共同的责任

30
00:01:28,522 --> 00:01:30,824
为了遵守我们对隐私的承诺

31
00:01:30,824 --> 00:01:34,027
WeatherKit 旨在
不泄露用户信息的情况下

32
00:01:34,027 --> 00:01:37,130
提供超本地化天气预报

33
00:01:37,130 --> 00:01:40,601
位置信息仅用于提供天气预报

34
00:01:40,601 --> 00:01:41,768
这个信息不会关联

35
00:01:41,768 --> 00:01:45,105
任何个人识别信息

36
00:01:45,105 --> 00:01:48,008
且这些数据永远不会共享或出售

37
00:01:48,008 --> 00:01:49,943
我们会让您
在 Wea​​therKit 中轻松的

38
00:01:49,943 --> 00:01:52,279
完成对用户信息的保密

39
00:01:52,279 --> 00:01:55,516
今天我将深入介绍
有关 WeatherKit 的更多细节

40
00:01:55,516 --> 00:01:58,919
这样您就可以
充分利用了解我们的新 API

41
00:01:58,919 --> 00:02:00,888
首先我将介绍
通过 WeatherKit 提供的

42
00:02:00,888 --> 00:02:02,356
可用的数据集

43
00:02:02,356 --> 00:02:05,526
该数据集由我们的
Apple Weather Service 提供支持

44
00:02:05,526 --> 00:02:08,362
接下来我将分别向您展示

45
00:02:08,362 --> 00:02:10,330
如何使用 WeatherKit 框架
获取天气信息

46
00:02:10,330 --> 00:02:13,133
以及一个可以在任意系统平台上

47
00:02:13,133 --> 00:02:15,435
获取天气信息的 REST API

48
00:02:15,435 --> 00:02:16,370
最后

49
00:02:16,370 --> 00:02:18,839
我将介绍一些额外的实现要求

50
00:02:18,839 --> 00:02:21,341
和必备条件

51
00:02:21,341 --> 00:02:25,746
让我先概述一下可用的天气数据集

52
00:02:25,746 --> 00:02:29,983
正如我所提到的 您可以访问
WeatherKit 中的大量数据

53
00:02:29,983 --> 00:02:33,187
那么让我们来谈谈每个数据集

54
00:02:33,187 --> 00:02:36,156
当前天气数据集提供

55
00:02:36,156 --> 00:02:38,659
请求位置在“现在”条件下的数据

56
00:02:38,659 --> 00:02:40,794
它表示一个时间点下的条件数据

57
00:02:40,794 --> 00:02:46,333
包括紫外线指数、温度和风力等信息

58
00:02:46,333 --> 00:02:48,669
分钟预报包含在可用区域内的

59
00:02:48,669 --> 00:02:51,138
下一个小时里每分钟的

60
00:02:51,138 --> 00:02:53,073
降雨情况预测

61
00:02:53,073 --> 00:02:55,475
该数据集对于您决定出门前是否带伞

62
00:02:55,475 --> 00:02:58,846
非常有帮助

63
00:02:58,846 --> 00:03:01,281
小时预报提供

64
00:03:01,281 --> 00:03:03,183
从当前时间开始
到未来 240 小时之间

65
00:03:03,183 --> 00:03:07,154
的数据预测集合

66
00:03:07,154 --> 00:03:09,957
在这里会提供每个小时的预测信息

67
00:03:09,957 --> 00:03:15,362
包含如湿度 能见度
压力和露点等信息

68
00:03:15,362 --> 00:03:19,867
每日预测
提供未来 10 天的预测信息

69
00:03:19,867 --> 00:03:21,468
每一天的预测均提供

70
00:03:21,468 --> 00:03:24,371
有关全天的预测信息

71
00:03:24,371 --> 00:03:26,540
比如高温和低温

72
00:03:26,540 --> 00:03:29,042
日出和日落

73
00:03:29,042 --> 00:03:31,445
气象警报提供

74
00:03:31,445 --> 00:03:34,248
所请求位置的恶劣天气警告

75
00:03:34,248 --> 00:03:37,017
该数据集所包含重要信息

76
00:03:37,017 --> 00:03:41,455
可以确保您用户的安全
对天气状况充分了解并做好准备

77
00:03:41,455 --> 00:03:45,259
最后 历史气象提供

78
00:03:45,259 --> 00:03:46,627
保存的历史气象数据

79
00:03:46,627 --> 00:03:49,530
这样您就可以看到天气数据的趋势

80
00:03:49,530 --> 00:03:51,164
您可以通过指定开始和结束日期

81
00:03:51,164 --> 00:03:53,667
访问每日和每小时的

82
00:03:53,667 --> 00:03:56,770
历史天气数据

83
00:03:56,770 --> 00:03:59,773
这让您可以访问大量数据

84
00:03:59,773 --> 00:04:03,010
我们相信您会利用历史天气数据

85
00:04:03,010 --> 00:04:05,779
实现利用很多
重要且有效的功能方法

86
00:04:05,779 --> 00:04:09,283
既然您已经看到了
所有可用的天气数据数据

87
00:04:09,283 --> 00:04:11,585
现在我将向您介绍

88
00:04:11,585 --> 00:04:14,821
如何使用 WeatherKit API
请求天气数据

89
00:04:14,821 --> 00:04:18,392
Apple Weather 数据
可通过原生框架 (WeatherKit)

90
00:04:18,392 --> 00:04:21,562
和 REST API 获得

91
00:04:21,562 --> 00:04:23,697
首先 让我向您展示

92
00:04:23,697 --> 00:04:27,201
使用我们的 Swift 框架
访问天气数据有多容易

93
00:04:27,201 --> 00:04:29,603
几行代码就足够了

94
00:04:29,603 --> 00:04:33,540
使用 Swift 的并发功能
请求天气数据非常简单

95
00:04:33,540 --> 00:04:37,778
首先 您需要导入
WeatherKit 和 CoreLocation 库

96
00:04:37,778 --> 00:04:40,047
然后您需要
实例化一个 weatherService 对象

97
00:04:40,047 --> 00:04:43,383
作为天气服务的入口

98
00:04:43,383 --> 00:04:45,719
您需要为您感兴趣的位置

99
00:04:45,719 --> 00:04:48,288
创建一个描述坐标的
CLLocation 变量

100
00:04:48,288 --> 00:04:52,226
在这里 我使用的是
我的家乡 New York Syracuse 的坐标

101
00:04:52,226 --> 00:04:55,662
然后在 weatherService 实例上
调用 weather(for:) 方法

102
00:04:55,662 --> 00:04:59,333
并传入上面创建的位置变量

103
00:04:59,333 --> 00:05:00,767
当请求结束后

104
00:05:00,767 --> 00:05:04,171
您即可在 App 中
访问所需的天气数据

105
00:05:04,171 --> 00:05:08,575
就像这个例子中的
当前温度和紫外线指数一样

106
00:05:08,575 --> 00:05:10,410
现在我已经向您展示了

107
00:05:10,410 --> 00:05:12,779
使用 Swift
请求天气数据有多容易

108
00:05:12,779 --> 00:05:14,681
让我再举一个例子

109
00:05:14,681 --> 00:05:18,485
我正在使用我在 Swift UI
框架中构建的旅行 App

110
00:05:18,485 --> 00:05:20,521
您可以从本教程关联的描述中

111
00:05:20,521 --> 00:05:22,789
获取该讲座的链接

112
00:05:22,789 --> 00:05:25,058
因为我真的很期待再次旅行

113
00:05:25,058 --> 00:05:27,094
我决定创建一个飞行计划 App

114
00:05:27,094 --> 00:05:29,663
来计划我的下一次旅行

115
00:05:29,663 --> 00:05:32,866
我已经完成了
旅行 App 的设计逻辑

116
00:05:32,866 --> 00:05:34,768
但是当我点击
旅途中的任意一个航班时

117
00:05:34,768 --> 00:05:37,337
我想以列的形式
显示包含每个目的地的

118
00:05:37,337 --> 00:05:43,110
环境 降水 风力和温度的信息

119
00:05:43,110 --> 00:05:45,379
第一步是启用 Wea​​therKit

120
00:05:45,379 --> 00:05:48,348
在开发者门户中注册 App ID

121
00:05:48,348 --> 00:05:51,084
然后选择功能
和 App 服务选项卡

122
00:05:51,084 --> 00:05:53,387
启用 Wea​​therKit

123
00:05:53,387 --> 00:05:55,756
然后在 Xcode 中的对应项目内

124
00:05:55,756 --> 00:05:57,958
添加 WeatherKit 功能

125
00:05:57,958 --> 00:05:59,626
有了这些准备工作

126
00:05:59,626 --> 00:06:01,862
下面让我介绍一下

127
00:06:01,862 --> 00:06:04,765
如何为每一个目的地获取天气数据

128
00:06:04,765 --> 00:06:07,100
在这里我已经构建了
一个名为 Airport 的结构体

129
00:06:07,100 --> 00:06:08,869
包含经纬度

130
00:06:08,869 --> 00:06:11,438
和我的目的地机场的信息

131
00:06:11,438 --> 00:06:14,374
我会通过 weather(for:) 方法
包含机场位置信息

132
00:06:14,374 --> 00:06:15,609
来请求我们的共享天气服务

133
00:06:15,609 --> 00:06:18,979
以获得每小时的天气数据

134
00:06:22,983 --> 00:06:24,751
因为我只想要一个数据子集

135
00:06:24,751 --> 00:06:27,788
我还需要在请求中

136
00:06:27,788 --> 00:06:29,823
指定包括每小时预测的信息

137
00:06:29,823 --> 00:06:32,726
现在 我将构建
并运行我的 App

138
00:06:36,530 --> 00:06:38,565
现在我可以看到
我的自定义视图已更新

139
00:06:38,565 --> 00:06:41,602
会显示每个机场的天气情况

140
00:06:41,602 --> 00:06:43,604
构建这个 App 时
我需要做的下一件事

141
00:06:43,604 --> 00:06:48,342
是在我的 App 中
显示数据源的归属

142
00:06:48,342 --> 00:06:51,678
[按键]

143
00:06:51,678 --> 00:06:53,580
首先 我需要从
attribution.legalPageURL

144
00:06:53,580 --> 00:06:57,084
获得归属链接

145
00:06:57,084 --> 00:06:59,586
这是指向法律归属页面的链接

146
00:06:59,586 --> 00:07:01,388
包含关于天气数据源

147
00:07:01,388 --> 00:07:03,724
的版权信息

148
00:07:03,724 --> 00:07:05,425
我还需要获取用于合并

149
00:07:05,425 --> 00:07:07,494
Apple Weather 标记的链接

150
00:07:07,494 --> 00:07:11,598
[按键]

151
00:07:11,598 --> 00:07:14,101
它有浅色和深色两种版本

152
00:07:14,101 --> 00:07:16,336
所以我会检查
colorScheme 环境值

153
00:07:16,336 --> 00:07:18,906
查看当前显示的深色或浅色外观

154
00:07:18,906 --> 00:07:22,209
是否在 SwiftUI 中
得到正确的显示

155
00:07:22,209 --> 00:07:24,811
最后 我将再次构建并运行

156
00:07:29,816 --> 00:07:32,286
请注意 Apple Weather
标记和归属链接

157
00:07:32,286 --> 00:07:36,256
在 SFSafariViewController 中打开

158
00:07:36,256 --> 00:07:38,058
这就是获取天气信息所需的一切

159
00:07:38,058 --> 00:07:40,761
使用 Wea​​therKit API
您可以有很多办法

160
00:07:40,761 --> 00:07:43,263
在您的飞行 App 中

161
00:07:43,263 --> 00:07:45,265
添加天气数据

162
00:07:45,265 --> 00:07:48,135
但这只是原生框架

163
00:07:48,135 --> 00:07:51,038
REST API 提供
同样丰富的天气数据

164
00:07:51,038 --> 00:07:55,209
并且作为 Swift 框架
他可以在任何平台上使用

165
00:07:55,209 --> 00:07:58,679
在此示例中 我将展示

166
00:07:58,679 --> 00:08:02,382
如何通过 weatherkit.apple.com 接口
请求天气警报

167
00:08:02,382 --> 00:08:04,651
首先 您需要请求一个验证令牌

168
00:08:04,651 --> 00:08:07,020
这个我们稍后再讨论

169
00:08:07,020 --> 00:08:10,457
然后 要获取天气对象
首先需要创建一个

170
00:08:10,457 --> 00:08:14,494
标示给定位置的
所需天气数据集的 URL

171
00:08:14,494 --> 00:08:16,630
为了适应软件的本地化

172
00:08:16,630 --> 00:08:19,032
一定要设置合适的语言

173
00:08:19,032 --> 00:08:21,502
然后提供

174
00:08:21,502 --> 00:08:24,037
所需位置的经纬度

175
00:08:24,037 --> 00:08:26,473
指明所需的数据集

176
00:08:26,473 --> 00:08:29,243
您可能会注意到此参数是复数

177
00:08:29,243 --> 00:08:33,313
所以您可以使用逗号分割多次请求

178
00:08:33,313 --> 00:08:36,917
最后 请求位置的国家代码

179
00:08:36,917 --> 00:08:39,186
但请注意 仅在请求天气警报时

180
00:08:39,186 --> 00:08:43,156
国家代码才是必须的

181
00:08:43,156 --> 00:08:44,725
接下来 您将获取天气数据

182
00:08:44,725 --> 00:08:48,328
使用上面的 URL
和您的验证令牌

183
00:08:48,328 --> 00:08:51,231
将结果转换为 JSON 格式

184
00:08:51,231 --> 00:08:53,367
您可以用这个变量访问天气警报信息

185
00:08:53,367 --> 00:08:55,669
以及他们的详细信息

186
00:08:55,669 --> 00:08:58,539
再说一次 另一个例子对您来说
访问天气数据已经如此简单

187
00:08:58,539 --> 00:09:02,943
只是这次是通过 REST API

188
00:09:02,943 --> 00:09:05,746
要更深入地了解您需要的设置

189
00:09:05,746 --> 00:09:08,815
让我们重温一下如何进行验证

190
00:09:08,815 --> 00:09:10,517
对于 WeatherKit REST API

191
00:09:10,517 --> 00:09:14,821
还有一些额外的
步骤来处理身份验证

192
00:09:14,821 --> 00:09:16,957
在开发者门户中
您需要创建

193
00:09:16,957 --> 00:09:20,227
为 WeatherKit 验证密钥
和相关联的服务 ID

194
00:09:20,227 --> 00:09:24,531
来启用对 WeatherKit 请求权限

195
00:09:24,531 --> 00:09:25,999
在开发者门户的
“Keys”(密钥) 部分中

196
00:09:25,999 --> 00:09:29,269
可以创建私钥

197
00:09:29,269 --> 00:09:32,172
WeatherKit 需要在每次请求中

198
00:09:32,172 --> 00:09:33,707
用令牌来验证授权

199
00:09:33,707 --> 00:09:36,243
因此 您需要
在您的服务器上部署一个

200
00:09:36,243 --> 00:09:40,814
用于使用您的私钥的
已签名 JSON Web Token (JWT)

201
00:09:40,814 --> 00:09:43,884
对于那些熟悉
JSON Web Token 验证的人

202
00:09:43,884 --> 00:09:46,854
这是一个相当标准的授权流程

203
00:09:46,854 --> 00:09:48,021
但如果您是第一次使用它

204
00:09:48,021 --> 00:09:51,291
那么请听我分享一些这里的细节

205
00:09:51,291 --> 00:09:52,593
要生成签名令牌

206
00:09:52,593 --> 00:09:55,762
您需要按照开发者文档中所述

207
00:09:55,762 --> 00:09:59,166
创建包含键名和值的Header

208
00:09:59,166 --> 00:10:02,069
然后创建
专用于 WeatherKit Rest API

209
00:10:02,069 --> 00:10:06,106
和您的 App 的有效信息

210
00:10:06,106 --> 00:10:08,809
包括发行人 主题

211
00:10:08,809 --> 00:10:11,311
和到期时间

212
00:10:11,311 --> 00:10:13,247
最后 您需要签署令牌

213
00:10:13,247 --> 00:10:17,618
以便于随后调用
Wea​​therKit REST API

214
00:10:17,618 --> 00:10:20,087
回到我的天气警报示例

215
00:10:20,087 --> 00:10:24,191
在这里
您将从您的签名服务中请求令牌

216
00:10:24,191 --> 00:10:26,593
并为您的天气数据 HTTP 请求

217
00:10:26,593 --> 00:10:31,031
添加 Authorization 令牌 Header

218
00:10:31,031 --> 00:10:33,634
这就是通过
WeatherKit REST API

219
00:10:33,634 --> 00:10:36,270
从 Apple Weather Service 获取

220
00:10:36,270 --> 00:10:38,438
天气数据的两种好方法之一

221
00:10:38,438 --> 00:10:41,008
最后 我将介绍
一些不论在 App Store

222
00:10:41,008 --> 00:10:44,111
或其他平台发布 App 之前

223
00:10:44,111 --> 00:10:47,915
使用 REST API 时的额外要求

224
00:10:47,915 --> 00:10:50,050
这些要求全都对您适用

225
00:10:50,050 --> 00:10:54,388
无论您使用的是
原生 Swift 还是 REST API

226
00:10:54,388 --> 00:10:57,090
第一个要求是标注服务归属

227
00:10:57,090 --> 00:10:58,859
正如您在我的演示中看到的

228
00:10:58,859 --> 00:11:01,528
不论是在本地 App
或是网络 App 中

229
00:11:01,528 --> 00:11:04,164
您都需要显示
服务来源的 API 链接

230
00:11:04,164 --> 00:11:07,234
第二个要求是归属标志

231
00:11:07,234 --> 00:11:10,304
WeatherKit API
可以为您在 App 中

232
00:11:10,304 --> 00:11:15,042
提供很便捷的图片资源

233
00:11:15,042 --> 00:11:17,644
最后 如果您要显示天气警报

234
00:11:17,644 --> 00:11:19,513
您还需要链接到

235
00:11:19,513 --> 00:11:21,849
提供活动信息的页面

236
00:11:21,849 --> 00:11:24,284
就是如此容易
无论您是准备把 App

237
00:11:24,284 --> 00:11:27,554
发布到 App Store 还是网上

238
00:11:27,554 --> 00:11:28,889
这就是 WeatherKit

239
00:11:28,889 --> 00:11:32,559
Apple Weather Service
提供支持的超本地预报

240
00:11:32,559 --> 00:11:36,663
通过我们的 Swift 框架
和 REST API 访问

241
00:11:36,663 --> 00:11:38,732
两者都为您提供了无限可能

242
00:11:38,732 --> 00:11:40,934
帮助您将天气数据
应用于您的 App

243
00:11:40,934 --> 00:11:43,670
以及任何平台
或设备之中

244
00:11:43,670 --> 00:11:45,806
我们希望您喜欢本次讲座

245
00:11:45,806 --> 00:11:48,742
除了查看与本次讲座相关的链接

246
00:11:48,742 --> 00:11:51,311
阅读文档并下载项目之外

247
00:11:51,311 --> 00:11:53,647
我们还希望能得到您的反馈

248
00:11:53,647 --> 00:11:57,117
我们迫不及待地想看到
您在使用 WeatherKit 时

249
00:11:57,117 --> 00:11:58,819
展现的所有创造性
和有影响力的方式

250
00:11:58,819 --> 00:12:01,622
谢谢您 祝您 WWDC 愉快！

251
00:12:01,622 --> 00:12:05,726
♪

