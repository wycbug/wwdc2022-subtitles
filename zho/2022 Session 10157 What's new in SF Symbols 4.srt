1
00:00:00,501 --> 00:00:08,509
♪ ♪

2
00:00:09,943 --> 00:00:11,812
Thalia: 大家好 我是 Thalia

3
00:00:11,845 --> 00:00:15,749
今天我们将学习 SF Symbols 的新特性

4
00:00:15,782 --> 00:00:20,120
符号是最有效的图形化沟通方式之一

5
00:00:20,153 --> 00:00:23,390
如果您想要表达一种感觉

6
00:00:23,423 --> 00:00:27,694
一个物体 动作或概念
符号是个不错的方法

7
00:00:27,728 --> 00:00:30,564
符号始终会被频繁使用

8
00:00:30,597 --> 00:00:32,633
成为我们的第二天性

9
00:00:32,666 --> 00:00:35,435
如果不依赖符号 我们就会发现

10
00:00:35,469 --> 00:00:37,171
很难驾驭周围的环境

11
00:00:37,204 --> 00:00:41,441
因此 它们成为界面设计的
重要组成部分

12
00:00:41,475 --> 00:00:45,846
因为符号是帮助沟通的绝佳方式

13
00:00:45,879 --> 00:00:50,684
符号还可以带来诸多好处 例如可以作为交互方式

14
00:00:50,717 --> 00:00:53,854
可以节省空间

15
00:00:53,887 --> 00:00:56,590
增强审美吸引力

16
00:00:56,623 --> 00:01:00,294
以及通过用户友好来提升吸引力

17
00:01:00,327 --> 00:01:04,965
符号的伟大之处在于
它可以超越多种语言

18
00:01:04,998 --> 00:01:06,733
它们可以是通用的

19
00:01:06,767 --> 00:01:11,505
因此 符号可以把人们团结在一起
交流共同的思想

20
00:01:11,538 --> 00:01:16,777
帮助人们在更深的层次上接触他人
而不仅仅是语言

21
00:01:16,810 --> 00:01:20,681
在 Apple 我们非常关心
改善用户界面

22
00:01:20,714 --> 00:01:22,816
和整体体验

23
00:01:22,850 --> 00:01:25,118
这就是我们创建 SF Symbols 的原因

24
00:01:25,152 --> 00:01:27,721
一个庞大的图标库

25
00:01:27,754 --> 00:01:32,292
旨在与系统字体 San Francisco
无缝集成

26
00:01:32,326 --> 00:01:35,796
为在所有 Apple 平台上
创建体验提供

27
00:01:35,829 --> 00:01:39,867
强大而灵活的设计资源

28
00:01:39,900 --> 00:01:42,836
SF Symbols 的设计考虑到了排版

29
00:01:42,870 --> 00:01:47,307
它具有很棒的功能
例如不同的粗细 比例 轮廓

30
00:01:47,341 --> 00:01:51,879
和填充的变体 封装形状和对齐方式

31
00:01:51,912 --> 00:01:55,682
要了解更多关于这些功能的信息
以及何时适合运用这些功能

32
00:01:55,716 --> 00:02:00,687
请查看去年 WWDC 上的视频
让您快速了解这些功能

33
00:02:00,721 --> 00:02:04,091
今天 我们就来看看有哪些新增符号

34
00:02:04,124 --> 00:02:07,261
以及 New symbols 中的新类别

35
00:02:07,294 --> 00:02:11,732
在渲染模式中
我们将回顾为符号添加颜色的好处

36
00:02:11,765 --> 00:02:17,471
有一个新配置
来帮助使符号行为自动化

37
00:02:17,504 --> 00:02:20,874
有一个令人兴奋的新功能
叫 可变颜色

38
00:02:20,908 --> 00:02:25,579
这个功能让我们可以通过颜色
让符号更具动态性

39
00:02:25,612 --> 00:02:30,150
最后 有一种更有效的符号注释方法

40
00:02:30,184 --> 00:02:33,687
我们将在 统一注释 中
了解更多信息

41
00:02:33,720 --> 00:02:35,489
我们开始吧

42
00:02:35,522 --> 00:02:38,659
SF Symbols 库每年都在不断增长

43
00:02:38,692 --> 00:02:42,129
有更新的类别和符号可供选择

44
00:02:42,162 --> 00:02:44,331
“家庭”当中有一些很棒的新增符号

45
00:02:44,364 --> 00:02:48,869
包括灯 百叶窗 窗户和门

46
00:02:48,902 --> 00:02:52,806
甚至还有电灯开关和电源插座

47
00:02:52,840 --> 00:02:55,609
有新的家具和电器

48
00:02:55,642 --> 00:02:57,978
新的健康符号

49
00:02:58,011 --> 00:03:02,783
今年 还有健身类的符号可供大家使用

50
00:03:02,816 --> 00:03:06,153
我们扩展了图标库中的货币符号

51
00:03:06,186 --> 00:03:09,756
有许多新对象可供选择

52
00:03:09,790 --> 00:03:13,126
当然 我们还在不断扩展本地化符号

53
00:03:13,160 --> 00:03:18,699
用新符号覆盖不同的指令
以及从右到左的书写系统

54
00:03:18,732 --> 00:03:21,835
有 700 多个新符号可供选择

55
00:03:21,869 --> 00:03:27,040
使 SF Symbols 成为包含
4000 个独特符号的库

56
00:03:27,074 --> 00:03:28,876
太棒了

57
00:03:28,909 --> 00:03:32,513
有了这些新功能
我们想要帮助您浏览

58
00:03:32,546 --> 00:03:34,982
SF Symbols App 中的所有符号

59
00:03:35,015 --> 00:03:39,486
所以我们添加了五个
我们认为是非常有用的新类别

60
00:03:39,520 --> 00:03:41,989
相机和照片

61
00:03:42,022 --> 00:03:43,957
辅助功能

62
00:03:43,991 --> 00:03:46,026
隐私和安全

63
00:03:46,059 --> 00:03:49,496
家庭和健身

64
00:03:49,530 --> 00:03:53,367
请记住 在 App 中 您始终可以选择

65
00:03:53,400 --> 00:03:57,638
最符合需求的符号
来创建自己的符号集

66
00:03:57,671 --> 00:04:02,075
现在 我们快速回顾一下
不同的渲染模式

67
00:04:02,109 --> 00:04:04,778
如您所知 在 SF Symbols 中

68
00:04:04,811 --> 00:04:07,047
有四种渲染模式可供选择

69
00:04:07,080 --> 00:04:12,519
每一种都能很好地控制
如何将颜色应用到符号上

70
00:04:12,553 --> 00:04:16,323
单色是所有渲染模式中
最中性的一种

71
00:04:16,356 --> 00:04:18,825
它呈现出统一的外观

72
00:04:18,859 --> 00:04:21,428
是最能体现 SF Symbols

73
00:04:21,461 --> 00:04:24,965
排版特性的渲染方式

74
00:04:24,998 --> 00:04:28,936
分层是一种能呈现出微妙强调效果的
渲染模式

75
00:04:28,969 --> 00:04:32,606
用单一的色调
来提升整体美感

76
00:04:32,639 --> 00:04:37,177
我们可以通过突出符号最重要的形状

77
00:04:37,211 --> 00:04:40,981
或区分前景和背景元素来应用深度

78
00:04:41,014 --> 00:04:44,618
这样 我们通过强调符号的基本部分

79
00:04:44,651 --> 00:04:48,589
来创造一个视觉层次

80
00:04:48,622 --> 00:04:52,893
调色盘使用两种或更多对比色

81
00:04:52,926 --> 00:04:54,895
来赋予符号元素更多的
突出性和通用性

82
00:04:54,928 --> 00:04:57,598
使符号具有更强的自定义性

83
00:04:57,631 --> 00:05:01,468
能与界面环境的配色更好地整合

84
00:05:01,502 --> 00:05:05,172
调色盘模式有助于符号在
不牺牲整体美感的情况下

85
00:05:05,205 --> 00:05:08,809
提供对比鲜明的独特外观

86
00:05:08,842 --> 00:05:12,779
而多色模式是表示符号的固有

87
00:05:12,813 --> 00:05:15,249
或原生颜色的渲染模式

88
00:05:15,282 --> 00:05:19,753
这种渲染模式使用一系列
可应用于符号的颜色

89
00:05:19,786 --> 00:05:23,390
来描述物理世界中物体的外观

90
00:05:23,423 --> 00:05:25,692
或者可以使用颜色

91
00:05:25,726 --> 00:05:28,061
来强调符号试图传达的含义

92
00:05:28,095 --> 00:05:32,432
当符号在 UI 中非常重要时
您可以使用多色

93
00:05:32,466 --> 00:05:38,038
因为有助于创建与符号形式
相关的颜色叙述

94
00:05:38,071 --> 00:05:42,376
到目前为止
如果您没有明确指定渲染模式

95
00:05:42,409 --> 00:05:44,478
那么默认情况下将通过单色模式渲染

96
00:05:44,511 --> 00:05:47,514
但今年 我们让符号能够更容易

97
00:05:47,548 --> 00:05:52,419
以最能突出其独特特征的
模式进行渲染

98
00:05:52,452 --> 00:05:54,888
符号现在具有首选渲染模式

99
00:05:54,922 --> 00:05:57,624
不同的符号可以具有不同的首选模式

100
00:05:57,658 --> 00:06:01,495
我们称这种行为为自动渲染

101
00:06:01,528 --> 00:06:05,432
选中后 它会为每个符号
提供首选渲染模式配置

102
00:06:05,465 --> 00:06:09,903
而无需手动指定

103
00:06:09,937 --> 00:06:12,639
例如 当选择 自动 时

104
00:06:12,673 --> 00:06:16,143
相机滤镜符号将选择分层模式

105
00:06:16,176 --> 00:06:20,514
因为它是通过突出显示引用

106
00:06:20,547 --> 00:06:23,917
物理相机镜头和滤镜的半透明的
不透明度

107
00:06:23,951 --> 00:06:27,654
来传达更精确的视觉呈现渲染模式

108
00:06:27,688 --> 00:06:29,590
这是另一个例子

109
00:06:29,623 --> 00:06:31,692
当选择 自动 时

110
00:06:31,725 --> 00:06:36,263
SharePlay 符号将选择分层模式

111
00:06:36,296 --> 00:06:41,068
这种样式使人的形状在前景中突出

112
00:06:41,101 --> 00:06:44,838
而波形在背景中是次要角色

113
00:06:44,872 --> 00:06:48,108
这再次强调了符号的概念

114
00:06:48,141 --> 00:06:50,944
因为 SharePlay 功能主要是

115
00:06:50,978 --> 00:06:53,981
一种与朋友和家人分享和联系的方式

116
00:06:54,014 --> 00:06:57,918
在大多数情况下 自动 是最好的选择

117
00:06:57,951 --> 00:07:00,587
但是您必须时刻注意环境

118
00:07:00,621 --> 00:07:05,526
例如 选择 自动 时

119
00:07:05,559 --> 00:07:07,561
AirPods Pro 符号将呈现为分层

120
00:07:07,594 --> 00:07:10,731
但在这种情况下 符号非常小

121
00:07:10,764 --> 00:07:15,502
在这个背景上呈现时对比度很低

122
00:07:15,536 --> 00:07:19,606
请记住 在特定环境中

123
00:07:19,640 --> 00:07:24,678
仍然可以明确指定渲染模式
以实现符号间统一外观

124
00:07:24,711 --> 00:07:28,215
所以在这种情况下
单色模式将是最好的选择

125
00:07:28,248 --> 00:07:33,053
因为它更易读
并且小尺寸的细节更少

126
00:07:33,086 --> 00:07:38,959
因此 请始终确保指定
最合适的渲染模式配置

127
00:07:38,992 --> 00:07:42,529
不同的渲染模式将颜色应用于符号

128
00:07:42,563 --> 00:07:46,900
以在各种情况下呈现视觉解决方案

129
00:07:46,934 --> 00:07:51,438
颜色是个强大的工具
我们可以进一步探索

130
00:07:51,471 --> 00:07:54,141
有些符号在本质上更具活力

131
00:07:54,174 --> 00:07:56,910
如果我们分析它们的视觉表现

132
00:07:56,944 --> 00:07:59,780
可以注意到两个主要特征

133
00:07:59,813 --> 00:08:05,385
首先 它们的路径或形状
传达了不同程度的强度

134
00:08:05,419 --> 00:08:08,422
其次 它们依靠颜色来传达

135
00:08:08,455 --> 00:08:11,625
随时间推移而变化的状态

136
00:08:11,658 --> 00:08:14,361
今年 我们通过引入名为
可变颜色 的

137
00:08:14,394 --> 00:08:18,432
新功能来扩展颜色的使用

138
00:08:18,465 --> 00:08:22,202
我们将符号的矢量路径排列成层

139
00:08:22,236 --> 00:08:25,606
并按顺序组织这些层

140
00:08:25,639 --> 00:08:29,576
从而创建了一种通过这些层
分配颜色的新方法

141
00:08:29,610 --> 00:08:32,579
这让我们能够随时间的推移
传达不同程度的强度

142
00:08:32,613 --> 00:08:34,882
或传达序列

143
00:08:34,915 --> 00:08:38,952
这是由符号设计的本质决定的

144
00:08:38,986 --> 00:08:42,256
需要知道的一件重要的事情是

145
00:08:42,289 --> 00:08:46,159
在 可变颜色 中
一些符号的所有路径都参与了序列

146
00:08:46,193 --> 00:08:51,565
但对于其他符号
只有一些路径可以选择加入

147
00:08:51,598 --> 00:08:54,601
我们来看几个例子

148
00:08:54,635 --> 00:08:58,772
通过 可变颜色
我们想让代表 iPhone 的路径

149
00:08:58,805 --> 00:09:01,408
退出变量序列

150
00:09:01,441 --> 00:09:05,445
并且我们希望突出显示
代表无线电波的路径

151
00:09:05,479 --> 00:09:09,917
这将有助于区分描述手机
无线电信号

152
00:09:09,950 --> 00:09:12,920
强度的不同阶段

153
00:09:12,953 --> 00:09:16,924
重要的是要知道
我们定义了如何对路径进行分组

154
00:09:16,957 --> 00:09:19,359
例如 在这种情况下

155
00:09:19,393 --> 00:09:23,030
从左到右突出显示
波形没有多大意义

156
00:09:23,063 --> 00:09:26,767
所以 我们可以按照最能
传达无线电信号强度的

157
00:09:26,800 --> 00:09:30,170
顺序对路径进行分组

158
00:09:30,204 --> 00:09:33,440
两个较小的波在一层

159
00:09:33,473 --> 00:09:36,743
两个较大的波在另一层

160
00:09:36,777 --> 00:09:41,915
如前所述 手机不参与可变序列

161
00:09:41,949 --> 00:09:46,486
这一次 让我们看一个
非常熟悉的符号

162
00:09:46,520 --> 00:09:50,691
在大多数情况下
此符号与内置滑块配对

163
00:09:50,724 --> 00:09:54,695
该滑块与符号中表示的状态同步

164
00:09:54,728 --> 00:09:57,631
波形高亮显示它们的路径

165
00:09:57,664 --> 00:10:00,434
遵循用户控制滑块的序列

166
00:10:00,467 --> 00:10:04,505
增加或减少音量水平

167
00:10:04,538 --> 00:10:06,340
就像在 iPhone 的例子中

168
00:10:06,373 --> 00:10:09,710
有一个不参与序列的路径

169
00:10:09,743 --> 00:10:12,546
即扬声器的形状

170
00:10:12,579 --> 00:10:15,883
并且我们有参与序列的路径

171
00:10:15,916 --> 00:10:19,820
即定义音量强度的三个波

172
00:10:19,853 --> 00:10:24,191
低音量 中音量和高音量

173
00:10:24,224 --> 00:10:27,027
这些路径被组织成层

174
00:10:27,060 --> 00:10:32,065
选择的层可以选择可变颜色特性

175
00:10:32,099 --> 00:10:35,936
我们用百分比值表示它们的实力

176
00:10:35,969 --> 00:10:38,105
0% 是完全没有的

177
00:10:38,138 --> 00:10:42,376
任何高于 0% 的内容
都会突出显示部分符号

178
00:10:42,409 --> 00:10:48,582
并且当数值接近 100% 时
整个符号会完全突出显示

179
00:10:48,615 --> 00:10:51,385
要知道的一件重要的事情是

180
00:10:51,418 --> 00:10:53,654
可变颜色 并不是为了创造深度

181
00:10:53,687 --> 00:10:58,125
相反 它的目的是强调
该符号可以表示的

182
00:10:58,158 --> 00:11:00,561
一系列步骤或阶段

183
00:11:00,594 --> 00:11:03,497
例如 假设我需要一个符号

184
00:11:03,530 --> 00:11:06,366
来表示房间内可容纳人数

185
00:11:06,400 --> 00:11:08,969
这个符号看起来很棒

186
00:11:09,002 --> 00:11:11,638
我们更详细地看一下

187
00:11:11,672 --> 00:11:15,275
我们不希望只突出显示符号的一部分

188
00:11:15,309 --> 00:11:20,747
相反 我们需要将符号看作
一个序列或范围

189
00:11:20,781 --> 00:11:23,283
我的目标是涵盖不同的状态

190
00:11:23,317 --> 00:11:25,352
空房间

191
00:11:25,385 --> 00:11:28,222
房间里只有几个人

192
00:11:28,255 --> 00:11:32,659
有一半人 满屋子人

193
00:11:32,693 --> 00:11:36,129
所以现在 当我选择 可变颜色 时

194
00:11:36,163 --> 00:11:38,699
可以很容易地看到我试图传达的

195
00:11:38,732 --> 00:11:41,602
不同状态的图形表示

196
00:11:41,635 --> 00:11:45,772
可以选择进入该特性的
路径数量没有限制

197
00:11:45,806 --> 00:11:48,008
可以只有一个 也可以有多个

198
00:11:48,041 --> 00:11:52,012
您可以决定什么是
最适合自己需求的设计策略

199
00:11:52,045 --> 00:11:56,617
如果您想表示形状的强度级别
这些形状遵循一个序列

200
00:11:56,650 --> 00:11:59,920
例如波形 射线 省略号和层

201
00:11:59,953 --> 00:12:02,890
可以使用 可变颜色 来实现

202
00:12:02,923 --> 00:12:07,561
可变颜色 是基于不透明度的
它可以在所有的渲染模式下使用

203
00:12:09,029 --> 00:12:14,168
今年 我们通过在所有渲染模式中
创建统一的层结构

204
00:12:14,201 --> 00:12:18,705
使自定义符号的注释更快
更容易使用

205
00:12:18,739 --> 00:12:21,775
我喜欢烘焙 我正在考虑设计一个

206
00:12:21,808 --> 00:12:23,977
只包含纸杯蛋糕食谱的 App

207
00:12:24,011 --> 00:12:26,713
我想创建自己的自定义符号

208
00:12:26,747 --> 00:12:29,683
所以我设计了一套
可以满足我的需求

209
00:12:29,716 --> 00:12:33,287
这将是向大家展示如何使用

210
00:12:33,320 --> 00:12:35,989
统一层结构方法注释符号

211
00:12:36,023 --> 00:12:40,194
以及如何注释参与
可变颜色 符号的绝佳机会

212
00:12:40,227 --> 00:12:43,197
我们以这两个为例

213
00:12:43,230 --> 00:12:47,134
在开始注释之前
有一些事情需要考虑

214
00:12:47,167 --> 00:12:52,472
我们需要牢记层次结构
并确保勾勒出 z-order

215
00:12:52,506 --> 00:12:58,545
z-order 顺序是指符号中
沿着 z 轴的路径顺序

216
00:12:58,579 --> 00:13:02,583
您还需要了解两个新概念

217
00:13:02,616 --> 00:13:05,085
绘制和擦除

218
00:13:05,118 --> 00:13:08,989
这些用于帮助定义层的渲染方式

219
00:13:09,022 --> 00:13:12,559
例如 这里有一个符号的路径

220
00:13:12,593 --> 00:13:16,163
代表一个正方形重叠在一个圆上

221
00:13:16,196 --> 00:13:19,066
当选择包含正方形的层时

222
00:13:19,099 --> 00:13:21,068
如果我们选择 Draw 选项

223
00:13:21,101 --> 00:13:24,638
层将绘制该层中包含的路径

224
00:13:24,671 --> 00:13:26,974
如果我们选择 Erase 选项

225
00:13:27,007 --> 00:13:30,310
将擦除包含该层的路径

226
00:13:30,344 --> 00:13:33,347
影响符号的渲染方式

227
00:13:33,380 --> 00:13:36,149
现在 我们开始给小蛋糕做注释

228
00:13:36,183 --> 00:13:39,953
作为第一步 我们需要按层组织路径

229
00:13:39,987 --> 00:13:42,723
以创建所需的层次结构

230
00:13:42,756 --> 00:13:47,361
如果我仔细分析它
可以看到四种主要形状

231
00:13:47,394 --> 00:13:50,564
糖霜 纸杯蛋糕底座

232
00:13:50,597 --> 00:13:53,033
徽章和加号

233
00:13:53,066 --> 00:13:56,403
您可以在一个层中添加
任意数量的路径

234
00:13:56,436 --> 00:13:59,773
所以在这种情况下 糖霜将由具有

235
00:13:59,806 --> 00:14:02,476
三个不同路径的层来定义

236
00:14:02,509 --> 00:14:07,447
其余层将由每个路径定义

237
00:14:07,481 --> 00:14:12,085
以这种方式组织形状
让我们在为所有渲染模式

238
00:14:12,119 --> 00:14:15,722
注释结构时拥有更大的灵活性

239
00:14:15,756 --> 00:14:18,892
现在 我们将所需的所有信息
集中在一个地方

240
00:14:18,926 --> 00:14:21,428
以便根据需要定制符号

241
00:14:22,396 --> 00:14:26,166
现在我们可以开始注释
所有渲染模式了

242
00:14:26,200 --> 00:14:28,735
我们先看看 多色模式

243
00:14:28,769 --> 00:14:31,038
我已经设置好了形状

244
00:14:31,071 --> 00:14:33,774
所以只需要选择正确的颜色

245
00:14:33,807 --> 00:14:36,210
红丝绒是我最喜欢的口味

246
00:14:36,243 --> 00:14:41,215
所以我会选择白色的糖霜
和红色的蛋糕底

247
00:14:41,248 --> 00:14:44,818
现在我将遵循 SF Symbols

248
00:14:44,852 --> 00:14:47,554
为 多色模式 中的加号徽章
定义的相同逻辑

249
00:14:47,588 --> 00:14:50,824
绿色代表徽章 白色代表加号

250
00:14:50,858 --> 00:14:54,294
好吧 目前为止看起来不错

251
00:14:54,328 --> 00:14:56,296
现在 我们专注于徽章

252
00:14:56,330 --> 00:15:00,834
这是统一注释方法更明显的地方

253
00:15:00,868 --> 00:15:03,203
我们已经定义了 多色模式

254
00:15:03,237 --> 00:15:06,406
现在让我们看看 分层和调色盘模式

255
00:15:06,440 --> 00:15:09,843
由于在这种渲染模式中
使用了层次结构

256
00:15:09,877 --> 00:15:12,379
我希望徽章是首要

257
00:15:12,412 --> 00:15:17,217
将在黑色背景上将其渲染为白色
就像他的那样

258
00:15:17,251 --> 00:15:21,355
现在我需要加号来擦除部分徽章

259
00:15:21,388 --> 00:15:24,224
这就是擦除选择有用的地方

260
00:15:24,258 --> 00:15:27,394
当层重叠时 我将能够看到

261
00:15:27,427 --> 00:15:32,566
按需要擦除形状的一部分渲染的徽章

262
00:15:32,599 --> 00:15:36,170
最后 我只需要 单色模式 注释

263
00:15:36,203 --> 00:15:39,406
因为这种渲染模式没有增加复杂度

264
00:15:39,439 --> 00:15:41,308
所以我会按照同样的逻辑

265
00:15:41,341 --> 00:15:46,213
让加号的形状擦除徽章形状的一部分

266
00:15:46,246 --> 00:15:48,115
我现在差不多完成了

267
00:15:48,148 --> 00:15:50,918
只需要一些额外的细节

268
00:15:50,951 --> 00:15:53,987
对于 分层和调色盘模式 我只需要

269
00:15:54,021 --> 00:15:57,191
将剩余的纸杯蛋糕形状标注为次要

270
00:15:57,224 --> 00:16:01,528
对于 调色盘模式 我会选择
一种颜色来提供一些对比

271
00:16:01,562 --> 00:16:04,364
对于 单色模式 我只需要确保

272
00:16:04,398 --> 00:16:07,668
有剩余的形状选择绘制

273
00:16:09,503 --> 00:16:11,038
这就是我所需要的

274
00:16:11,071 --> 00:16:14,942
纸杯蛋糕已经准备好了
可以定制所有渲染模式

275
00:16:16,777 --> 00:16:19,213
现在让我们看看厨房计时器

276
00:16:19,246 --> 00:16:23,217
这些路径代表了时间的流逝
因为这是一个序列

277
00:16:23,250 --> 00:16:27,221
所以很适合加入 可变颜色

278
00:16:27,254 --> 00:16:30,390
我们可以使用相同的策略
来注释这个符号

279
00:16:30,424 --> 00:16:33,961
但不需要将计时器路径
分组在一个层中

280
00:16:33,994 --> 00:16:37,764
而是将它们分割成各自的层

281
00:16:37,798 --> 00:16:40,367
这是因为我们需要组织这些形状

282
00:16:40,400 --> 00:16:42,703
以便重新创造序列

283
00:16:42,736 --> 00:16:47,307
从而帮助我们传达符号的不同状态

284
00:16:47,341 --> 00:16:51,745
记住 可变颜色
在所有渲染模式下都可以运行

285
00:16:51,778 --> 00:16:55,015
如果您想了解更多关于
新的 可变颜色 功能

286
00:16:55,048 --> 00:16:57,050
和 SF Symbols  App 的信息

287
00:16:57,084 --> 00:17:02,523
请查看 Paul 的演讲
“Adopt Variable Color in SF Symbols”

288
00:17:02,556 --> 00:17:05,826
您可以找到
SF Symbols App 的新测试版

289
00:17:05,859 --> 00:17:09,329
在这里 您可以探究新的
统一注释方法

290
00:17:09,363 --> 00:17:13,100
并访问数百个新符号
和奇妙的新功能

291
00:17:13,133 --> 00:17:17,671
请查看 developer.apple.com/sf-symbols

292
00:17:17,704 --> 00:17:22,209
从自动渲染行为 到
可变颜色 动态特性

293
00:17:22,242 --> 00:17:25,646
SF Symbols 是在 UI 中实现符号时

294
00:17:25,679 --> 00:17:28,682
使用的极其强大的工具

295
00:17:28,715 --> 00:17:32,486
今年 SF Symbols 功能更加强大

296
00:17:32,519 --> 00:17:36,223
可以定义一系列的表达方式

297
00:17:36,256 --> 00:17:37,891
谢谢您今天加入我的行列

298
00:17:37,925 --> 00:17:41,929
希望您喜欢
了解 SF Symbols 中的新功能

