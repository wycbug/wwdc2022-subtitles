1
00:00:00,300 --> 00:00:05,339
♪ 柔和乐器演奏的嘻哈音乐 ♪

2
00:00:05,339 --> 00:00:09,476
♪

3
00:00:09,476 --> 00:00:12,980
大家好 欢迎来到
“WKWebView 的新功能”

4
00:00:12,980 --> 00:00:16,450
我是 WebKit 组的工程师
Alex Christensen

5
00:00:16,450 --> 00:00:19,653
今年我们增加了很多新的网络技术

6
00:00:19,653 --> 00:00:23,223
供您在 App 中使用

7
00:00:23,223 --> 00:00:25,158
不过 在我们开始之前

8
00:00:25,158 --> 00:00:27,494
我们要确保

9
00:00:27,494 --> 00:00:29,830
您的 App 使用了正确的技术

10
00:00:29,830 --> 00:00:33,467
如果您希望无需深度定制就能在

11
00:00:33,467 --> 00:00:36,003
App 中浏览 Web 内容

12
00:00:36,003 --> 00:00:40,974
那么一定要试试
SFSafariViewController

13
00:00:40,974 --> 00:00:45,712
如果您的 App 仍在使用
已弃用的 UIWebView

14
00:00:45,712 --> 00:00:48,248
现在是时候迁移到更快且

15
00:00:48,248 --> 00:00:51,051
更具响应性的 WKWebView

16
00:00:51,051 --> 00:00:56,190
未来的版本中
将删除 UIWebView

17
00:00:56,190 --> 00:00:58,759
WKWebView 提供 API

18
00:00:58,759 --> 00:01:02,663
用于 Web 内容和
App 之间交互

19
00:01:02,663 --> 00:01:05,532
您可以将它用于
基于 CSS 的用户界面

20
00:01:05,532 --> 00:01:09,102
或调用 JavaScript 编写 App

21
00:01:09,102 --> 00:01:11,705
您可能在使用 App 绑定域

22
00:01:11,705 --> 00:01:14,274
与自己的 Web 内容交互

23
00:01:14,274 --> 00:01:17,978
您也可能正在开发自己的浏览器

24
00:01:17,978 --> 00:01:20,214
无论您的 App 是什么

25
00:01:20,214 --> 00:01:22,216
我们不断添加新功能以便您制作

26
00:01:22,216 --> 00:01:25,786
更丰富的 Web App

27
00:01:25,786 --> 00:01:28,622
WKWebView
今年可用的新功能

28
00:01:28,622 --> 00:01:30,624
分为四类

29
00:01:30,624 --> 00:01:33,160
与 Web 内容交互的新方式

30
00:01:33,160 --> 00:01:35,762
内容拦截器的新功能

31
00:01:35,762 --> 00:01:41,602
加密媒体 以及
允许三方浏览器远程调试 Web

32
00:01:41,602 --> 00:01:44,371
首先 我们将介绍

33
00:01:44,371 --> 00:01:47,708
用于 Web 内容交互的 API

34
00:01:47,708 --> 00:01:50,444
iOS16 中 您的 App
可以通过以下三种新方式

35
00:01:50,444 --> 00:01:55,616
与 Web 内容轻松交互：
使用全屏 API

36
00:01:55,616 --> 00:02:01,154
使用新的 CSS 视口单元
以及使用查找交互

37
00:02:01,154 --> 00:02:03,490
让我们先来看看全屏 API

38
00:02:03,490 --> 00:02:04,791
一直以来 在浏览器中展示的视频

39
00:02:04,791 --> 00:02:07,628
游戏等都可以通过 HTML 元素

40
00:02:07,628 --> 00:02:11,698
使其实现全屏

41
00:02:11,698 --> 00:02:15,469
现在 App 内嵌的
H5 页面中也可以做到这一点了

42
00:02:15,469 --> 00:02:19,173
这是手机上的一个简单示例

43
00:02:19,173 --> 00:02:21,708
JavaScript 可以
请求全屏

44
00:02:21,708 --> 00:02:26,113
然后用户或 JavaScript
也可以退出全屏

45
00:02:26,113 --> 00:02:27,748
您仅需要在您的 App 中
将 WKPreferences

46
00:02:27,748 --> 00:02:32,519
的 .isElementFullscreenEnabled 属性

47
00:02:32,519 --> 00:02:37,024
设置为 true 来加载网页内容
这些内容可以使用全屏 API

48
00:02:37,024 --> 00:02:39,893
比如 webkitRequestFullscreen

49
00:02:39,893 --> 00:02:41,595
这是开箱即用的API 效果也很好

50
00:02:41,595 --> 00:02:44,798
如果您想要自定义过渡动画
可以通过监听

51
00:02:44,798 --> 00:02:49,036
WKWebView 的
fullscreenState 来实现

52
00:02:49,036 --> 00:02:52,105
该属性让 App 可以准确知道

53
00:02:52,105 --> 00:02:55,275
网页内容何时全屏或返回

54
00:02:55,275 --> 00:02:58,412
以上就是在 App 中使用

55
00:02:58,412 --> 00:02:59,913
WebKit 全屏 API
的全部内容

56
00:03:01,248 --> 00:03:04,251
我们也新增了 CSS 单位

57
00:03:04,251 --> 00:03:08,222
可根据视口（Viewport）大小布局 Web 内容

58
00:03:08,222 --> 00:03:14,862
这些新的 CSS 单位包括
svh lvh dvh 等

59
00:03:14,862 --> 00:03:17,064
它们允许 Web 开发者根据

60
00:03:17,064 --> 00:03:22,102
最小 最大和动态的视口大小
来修改 Web 布局

61
00:03:22,102 --> 00:03:24,004
让我们看一下
Safari 浏览器的作用

62
00:03:24,004 --> 00:03:28,742
以了解如何在您的 App 中使用

63
00:03:28,742 --> 00:03:31,311
当首次在 Safari 浏览器中
打开 H5 页面时

64
00:03:31,311 --> 00:03:35,349
能看到 H5 页面和一些底部按钮

65
00:03:35,349 --> 00:03:38,452
滚动时 视口会随着

66
00:03:38,452 --> 00:03:41,622
按钮的滚动而增大

67
00:03:41,622 --> 00:03:45,659
Svh、lvh 和 dvh
提供有用的单位

68
00:03:45,659 --> 00:03:49,897
来测量这些不同大小的视口

69
00:03:49,897 --> 00:03:53,901
当 App 需要更改

70
00:03:53,901 --> 00:03:56,537
WKWebView 视口大小

71
00:03:56,537 --> 00:03:59,640
以便在 App 中

72
00:03:59,640 --> 00:04:02,643
正确布局 Web 内容时

73
00:04:02,643 --> 00:04:05,913
需要提前通过
WebKit 的函数

74
00:04:05,913 --> 00:04:08,715
setMinimumViewportInset

75
00:04:08,715 --> 00:04:10,717
方法来告知视口的大小范围

76
00:04:10,717 --> 00:04:13,754
在 iOS 16 的
WKWebView 中

77
00:04:13,754 --> 00:04:17,824
我们还引入了对查找交互的支持

78
00:04:17,824 --> 00:04:21,428
许多使用了 WKWebView
的 App 加载了大量文本内容

79
00:04:21,428 --> 00:04:24,331
并且用户想要搜索相应文本

80
00:04:24,331 --> 00:04:27,668
如果将 WKWebView 的

81
00:04:27,668 --> 00:04:28,969
.findInteractionEnabled

82
00:04:28,969 --> 00:04:32,139
属性设置为 true 用户就可以

83
00:04:32,139 --> 00:04:36,410
在页面上使用 CMD-F 等

84
00:04:36,410 --> 00:04:38,846
快捷键来搜索文本

85
00:04:38,846 --> 00:04:40,948
打开该功能

86
00:04:40,948 --> 00:04:42,883
只需要一行代码

87
00:04:42,883 --> 00:04:46,286
除此之外 还可以通过
WKWebView 的 findInteraction 属性

88
00:04:46,286 --> 00:04:48,889
来访问 UIFindInteraction 对象

89
00:04:48,889 --> 00:04:52,059
通过这个对象
来执行查找和关闭查找等操作

90
00:04:52,059 --> 00:04:55,929
或者通过编码的方式
移动到上一个或者下一个查找结果

91
00:04:55,929 --> 00:04:59,132
试试吧
看它可以在您的 App 中做什么

92
00:04:59,132 --> 00:05:00,634
对于内容拦截器

93
00:05:00,634 --> 00:05:04,738
我们在 WKContentRuleList
添加了一项新功能

94
00:05:04,738 --> 00:05:08,976
用于在 Safari 浏览器中
实现内容拦截的 API

95
00:05:08,976 --> 00:05:14,147
在这里 我们将维基百科
嵌入 H5 的 iframe 中

96
00:05:14,147 --> 00:05:17,651
以前 您可以在被请求的 URL

97
00:05:17,651 --> 00:05:20,754
和顶部框架 URL 上运行正则表达式

98
00:05:20,754 --> 00:05:24,758
以决定是拦截加载还是执行其他操作

99
00:05:24,758 --> 00:05:26,193
但是 有时候

100
00:05:26,193 --> 00:05:29,029
您真正想要的是某个规则 仅适用于

101
00:05:29,029 --> 00:05:33,934
某些 iframe 内的加载

102
00:05:33,934 --> 00:05:36,470
现在您可以在当前框架的

103
00:05:36,470 --> 00:05:39,339
URL 上运行正则表达式

104
00:05:39,339 --> 00:05:41,909
我们将编写一条规则

105
00:05:41,909 --> 00:05:47,147
来拦截维基百科中的图像呈现

106
00:05:47,147 --> 00:05:48,215
首先

107
00:05:48,215 --> 00:05:52,686
在 JSON 规则的 trigger 中

108
00:05:52,686 --> 00:05:55,455
添加新增的
if-frame-url 键

109
00:05:55,455 --> 00:05:58,959
并将其应用于
WKWebViewConfiguration

110
00:05:58,959 --> 00:06:01,028
然后在发出请求的 URL 上

111
00:06:01,028 --> 00:06:06,200
运行正则表达式

112
00:06:06,200 --> 00:06:10,204
此拦截规则现在仅适用于来自匹配

113
00:06:10,204 --> 00:06:14,541
if-frame-url 正则
表达式的框架的请求

114
00:06:14,541 --> 00:06:16,910
在这里我们看到它

115
00:06:16,910 --> 00:06:20,347
成功的拦截了维基百科的图像

116
00:06:20,347 --> 00:06:23,450
如果您想要了解更多
实施内容拦截器的内容

117
00:06:23,450 --> 00:06:28,188
建议查看有关 Safari 浏览器
扩展的 WWDC 讲座

118
00:06:28,188 --> 00:06:30,324
该讲座包含了有关
declarativeNetRequest

119
00:06:30,324 --> 00:06:33,060
的一些新可能性

120
00:06:33,060 --> 00:06:36,797
iPadOS 16 中的
WKWebView 中

121
00:06:36,797 --> 00:06:38,899
还新增了一个功能 即加密媒体

122
00:06:38,899 --> 00:06:42,202
如果您有相关使用加密媒体扩展

123
00:06:42,202 --> 00:06:45,305
和媒体源扩展 API 的经验

124
00:06:45,305 --> 00:06:49,276
现在可以在 iPadOS 上的
App 中使用

125
00:06:49,276 --> 00:06:53,480
这意味着 如果您拥有
AppleTV+ 等优质内容

126
00:06:53,480 --> 00:06:57,684
它将像 macOS 中一样
在 iPadOS 上工作

127
00:06:57,684 --> 00:07:00,888
如果您的 App
有 Web 浏览器权限

128
00:07:00,888 --> 00:07:03,223
允许三方浏览器远程调试 Web

129
00:07:03,223 --> 00:07:07,261
将会像在 iOS 上的
Safari 一样正常工作

130
00:07:07,261 --> 00:07:11,932
无需添加任何代码或更改任何代码

131
00:07:11,932 --> 00:07:15,002
就可调试 Web 页面

132
00:07:15,002 --> 00:07:17,671
调试流程与 Safari 浏览器一样

133
00:07:17,671 --> 00:07:20,007
首先在 iOS 设备中

134
00:07:20,007 --> 00:07:23,277
开启 Web Inspector

135
00:07:23,277 --> 00:07:26,847
然后在 macOS 上的
Safari 浏览器的高级设置中

136
00:07:26,847 --> 00:07:29,416
启用开发菜单

137
00:07:29,416 --> 00:07:33,020
将手机连接到 Mac
并在 macOS 上的

138
00:07:33,020 --> 00:07:36,490
Safari 浏览器浏览器的
开发菜单中查找您的设备

139
00:07:36,490 --> 00:07:40,060
Web 检查器有许多
用于调试 Web 内容的工具

140
00:07:40,060 --> 00:07:42,062
您可以探索 DOM

141
00:07:42,062 --> 00:07:45,199
运行和调试 JavaScript 的执行

142
00:07:45,199 --> 00:07:48,702
查看页面加载的时间线等

143
00:07:48,702 --> 00:07:50,370
如果您有网站

144
00:07:50,370 --> 00:07:53,106
您现在可以试着开启
Web 检查器

145
00:07:53,106 --> 00:07:55,242
实现在第三方浏览器中

146
00:07:55,242 --> 00:07:57,845
调试 App 内嵌的
Web 页面

147
00:07:57,845 --> 00:08:00,147
以上就是今年 WKWebView

148
00:08:00,147 --> 00:08:02,583
的新增 API

149
00:08:02,583 --> 00:08:06,253
试用一下 看看
它们能在您的 App 中做什么

150
00:08:06,253 --> 00:08:10,057
请为您的 App
使用最好的 API

151
00:08:10,057 --> 00:08:13,360
如果您认为 WKWebView
仍有还需完善的功能

152
00:08:13,360 --> 00:08:17,364
请使用反馈助理提交功能请求

153
00:08:17,364 --> 00:08:19,399
我们会查看收到的功能请求

154
00:08:19,399 --> 00:08:23,770
并根据您的建议确定开发的优先次序

155
00:08:23,770 --> 00:08:24,938
别忘了观看

156
00:08:24,938 --> 00:08:27,441
“Safari Web 扩展的新功能”

157
00:08:27,441 --> 00:08:30,344
如果想要了解 Web 平台的
更多内容

158
00:08:30,344 --> 00:08:31,712
请查看

159
00:08:31,712 --> 00:08:34,448
“Safari 和 WebKit 的新功能”

160
00:08:34,448 --> 00:08:37,684
感谢观看 祝您 WWDC 愉快

161
00:08:37,684 --> 00:08:41,922
♪

