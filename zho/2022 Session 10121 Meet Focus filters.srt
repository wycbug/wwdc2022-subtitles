1
00:00:00,033 --> 00:00:03,003
♪ 柔和乐器演奏的嘻哈音乐 ♪

2
00:00:03,003 --> 00:00:09,943
♪

3
00:00:09,943 --> 00:00:14,748
大家好 我是 iOS 系统
体验团队的工程师 Teja

4
00:00:14,748 --> 00:00:18,318
本次讲座
我们会来看看专注模式过滤器

5
00:00:18,318 --> 00:00:24,291
我们在 iOS 15 macOS Monterey
和 watchOS 8 中引入了专注模式

6
00:00:24,291 --> 00:00:27,528
用户可以通过
设置系统在一段时间内的行为

7
00:00:27,528 --> 00:00:31,532
来帮助自己专注于当下最重要的事

8
00:00:31,532 --> 00:00:34,968
要启用专注模式 只需进入控制中心

9
00:00:34,968 --> 00:00:39,806
选择默认或是自定义的专注模式即可

10
00:00:39,806 --> 00:00:42,342
当专注模式启用时

11
00:00:42,342 --> 00:00:45,078
用户可以自定义通知行为

12
00:00:45,078 --> 00:00:48,482
比如 在工作模式下 您也许会

13
00:00:48,482 --> 00:00:51,919
只允许来自同事的通知

14
00:00:51,919 --> 00:00:55,355
或者只允许来自某些与工作相关的

15
00:00:55,355 --> 00:00:57,524
特定 App 的通知

16
00:00:57,524 --> 00:01:01,094
每种专注模式的系统行为

17
00:01:01,094 --> 00:01:04,264
都可以在设置中调整

18
00:01:04,264 --> 00:01:08,669
iOS 16 和 macOS Ventura
引入了专注模式过滤器

19
00:01:08,669 --> 00:01:10,704
来增强专注模式

20
00:01:10,704 --> 00:01:13,273
首先
我会为您介绍专注模式过滤器

21
00:01:13,273 --> 00:01:15,475
以及它的行为模式

22
00:01:15,475 --> 00:01:20,814
其次 要如何在您的 App 中
定义专注模式过滤器

23
00:01:20,814 --> 00:01:25,285
然后 我也介绍
专注模式的过滤器要怎么实现

24
00:01:25,285 --> 00:01:28,155
最后 您的 App 可以怎样

25
00:01:28,155 --> 00:01:31,825
把额外的上下文返回给系统

26
00:01:31,825 --> 00:01:34,027
专注模式过滤器可以让用户

27
00:01:34,027 --> 00:01:39,666
根据当前启用的
专注模式自定 App 的行为模式

28
00:01:39,666 --> 00:01:41,902
一些系统 App
已经适配了专注模式过滤器

29
00:01:41,902 --> 00:01:44,938
可以用做范例

30
00:01:44,938 --> 00:01:46,940
日历 App 允许用户

31
00:01:46,940 --> 00:01:50,511
根据启用的专注模式

32
00:01:50,511 --> 00:01:53,146
设定默认显示的日历

33
00:01:53,146 --> 00:01:55,883
通常状态下 我的日历是这样的

34
00:01:55,883 --> 00:01:57,551
如您所见 在这里

35
00:01:57,551 --> 00:02:01,488
个人和工作上的日程是混在一起的

36
00:02:01,488 --> 00:02:04,324
我可以给日历
设置一个专注模式过滤器

37
00:02:04,324 --> 00:02:08,896
让它在个人模式下
只显示我的个人日程

38
00:02:08,896 --> 00:02:10,731
设置好专注模式过滤器后

39
00:02:10,731 --> 00:02:13,300
我的日历就变成了这样

40
00:02:13,300 --> 00:02:16,670
日历 App 会显示
这是经过专注模式过滤的

41
00:02:16,670 --> 00:02:19,740
还提供了开关这个过滤器的选项

42
00:02:19,740 --> 00:02:22,709
现在我终于不会在个人时间

43
00:02:22,709 --> 00:02:26,280
被这些工作日程打扰了

44
00:02:26,280 --> 00:02:28,649
Mail App 的收件箱
可以根据过滤器

45
00:02:28,649 --> 00:02:32,853
在专注模式下只显示相关的邮箱

46
00:02:32,853 --> 00:02:35,422
还可以过滤 Mail 通知

47
00:02:35,422 --> 00:02:40,027
使其只突出显示相关的通知

48
00:02:40,027 --> 00:02:42,162
也就是说我可以让 Mail

49
00:02:42,162 --> 00:02:45,265
在工作模式下只推送

50
00:02:45,265 --> 00:02:48,235
工作相关的邮件通知

51
00:02:48,235 --> 00:02:52,439
这样个人邮件通知就不会打扰到我

52
00:02:52,439 --> 00:02:53,507
为您的 App

53
00:02:53,507 --> 00:02:56,510
加入专注模式过滤器的好处有很多

54
00:02:56,510 --> 00:02:59,179
也许您的 App 管理着多个账户

55
00:02:59,179 --> 00:03:01,615
一个账户会需要

56
00:03:01,615 --> 00:03:04,084
关联一个专注模式

57
00:03:04,084 --> 00:03:07,654
有大量数据的 App
也许需要为了专注模式

58
00:03:07,654 --> 00:03:09,656
过滤内容

59
00:03:09,656 --> 00:03:11,325
如果您想帮助用户

60
00:03:11,325 --> 00:03:13,794
在专注状态下免受打扰

61
00:03:13,794 --> 00:03:16,196
您可以通过减少标记

62
00:03:16,196 --> 00:03:18,632
App 提醒以及通知的数量

63
00:03:18,632 --> 00:03:23,303
来突出专注模式下最重要的信息

64
00:03:23,303 --> 00:03:26,673
在外观上 也许您的 App
可以根据启用的专注模式

65
00:03:26,673 --> 00:03:30,110
展示特定的主题或布局

66
00:03:30,110 --> 00:03:34,281
从本质上讲 只要您的 App
可以根据不同情况

67
00:03:34,281 --> 00:03:38,151
展示不同内容
您就可以利用专注模式过滤器

68
00:03:38,151 --> 00:03:41,388
改善用户体验

69
00:03:41,388 --> 00:03:44,491
我来说明一下
专注模式过滤器的运作方式

70
00:03:44,491 --> 00:03:49,596
您的 App 定义了
用户可以根据专注模式自定哪些内容

71
00:03:49,596 --> 00:03:52,733
这会通过 AppIntent 实现

72
00:03:52,733 --> 00:03:57,237
系统会暴露出
可根据专注模式设置的部分

73
00:03:57,237 --> 00:04:00,774
您的 AppIntent
定义的属性可通过 UI 设置

74
00:04:00,774 --> 00:04:05,579
它会在专注模式设置中
作为过滤器显示出来

75
00:04:05,579 --> 00:04:09,216
用户可以进入
专注模式设置 设置过滤器

76
00:04:09,216 --> 00:04:13,320
来设定您的 App 的

77
00:04:13,320 --> 00:04:15,589
运作方式

78
00:04:15,589 --> 00:04:17,925
现在 让我来讲解
如何把专注模式过滤器

79
00:04:17,925 --> 00:04:21,128
加入您的代码库中

80
00:04:21,128 --> 00:04:24,164
定义专注模式过滤器分为几步

81
00:04:24,164 --> 00:04:28,168
首先是启用
SetFocusFilterIntent

82
00:04:28,168 --> 00:04:30,537
这会向系统表明您的 App

83
00:04:30,537 --> 00:04:35,008
愿意根据专注模式提供自定设置

84
00:04:35,008 --> 00:04:38,679
第二步是定义 App 的参数

85
00:04:38,679 --> 00:04:42,516
即用户可以在您的 App 中

86
00:04:42,516 --> 00:04:44,218
调节哪些设置

87
00:04:44,218 --> 00:04:47,788
最后一步是设置显示内容

88
00:04:47,788 --> 00:04:50,858
这样您的过滤器才会在系统设置中

89
00:04:50,858 --> 00:04:52,893
显示正确的内容

90
00:04:52,893 --> 00:04:57,397
用户才能明白自己设置了什么

91
00:04:57,397 --> 00:04:59,233
用代码举例

92
00:04:59,233 --> 00:05:02,836
首先您需要 import AppIntents

93
00:05:02,836 --> 00:05:07,541
定义一个实施了
SetFocusFilterIntent 的 struct

94
00:05:07,541 --> 00:05:10,110
这就是您的专注模式过滤器

95
00:05:10,110 --> 00:05:12,179
设置标题和描述

96
00:05:12,179 --> 00:05:17,651
让用户知道您的专注模式有什么效果

97
00:05:17,651 --> 00:05:22,089
过滤器在设置中以网格状展示

98
00:05:22,089 --> 00:05:24,691
在专注模式过滤器设置完成之前

99
00:05:24,691 --> 00:05:28,529
这就是用户会看到的界面

100
00:05:28,529 --> 00:05:31,665
这里就是您的 App 的图标

101
00:05:31,665 --> 00:05:34,535
主要文本是 App 名

102
00:05:34,535 --> 00:05:37,704
次要文本则与您在过滤器中

103
00:05:37,704 --> 00:05:40,874
设置的标题对应

104
00:05:40,874 --> 00:05:44,211
当用户点击配置您的过滤器时

105
00:05:44,211 --> 00:05:46,847
会显示出同样的内容

106
00:05:46,847 --> 00:05:50,517
这时 系统还会展示您提供的

107
00:05:50,517 --> 00:05:54,555
描述字符串 以供参考

108
00:05:54,555 --> 00:05:57,658
标题和描述字符串都是静态的

109
00:05:57,658 --> 00:05:59,326
系统在安装您的 App 时

110
00:05:59,326 --> 00:06:02,563
就读取了它们

111
00:06:02,563 --> 00:06:05,832
定义您的专注模式过滤器时

112
00:06:05,832 --> 00:06:08,802
您必须提供一系列修饰为参数的属性

113
00:06:08,802 --> 00:06:13,006
用于指定用户可以自定的内容

114
00:06:13,006 --> 00:06:16,009
指定参数时 必须为其命名

115
00:06:16,009 --> 00:06:17,911
并确定数据类型

116
00:06:17,911 --> 00:06:19,980
这些参数可以是标准数据类型

117
00:06:19,980 --> 00:06:23,684
比如 Bool, string, float 等等

118
00:06:23,684 --> 00:06:25,619
如果您希望设置某种

119
00:06:25,619 --> 00:06:28,922
自定义的数据类型
您可以将其设为实体

120
00:06:28,922 --> 00:06:32,392
这样您就可以
把它修饰为一个参数使用

121
00:06:32,392 --> 00:06:35,229
要学习更多关于
实体和 App 意图的内容

122
00:06:35,229 --> 00:06:38,632
请观看“详解 App 意图”讲座

123
00:06:38,632 --> 00:06:41,768
定义专注模式过滤器时
您只需要指定

124
00:06:41,768 --> 00:06:44,771
数据类型以及各参数名

125
00:06:44,771 --> 00:06:48,775
应用于各专注模式的参数值

126
00:06:48,775 --> 00:06:52,145
是由用户决定的

127
00:06:52,145 --> 00:06:54,381
可以把参数标记为可选项

128
00:06:54,381 --> 00:06:57,718
这样用户就不一定要设置它们

129
00:06:57,718 --> 00:07:03,123
非可选项的参数必须有一个默认值

130
00:07:03,123 --> 00:07:06,326
在代码中 指定一个参数

131
00:07:06,326 --> 00:07:09,596
或可选参数的方法是：定义

132
00:07:09,596 --> 00:07:12,499
您希望出现在过滤器中的变量类型

133
00:07:12,499 --> 00:07:15,435
并将其修饰为一个参数

134
00:07:15,435 --> 00:07:19,206
在这里
我创建了一个必选的 Bool 参数

135
00:07:19,206 --> 00:07:23,377
代表我的专注模式
是否总是使用深色模式

136
00:07:23,377 --> 00:07:25,779
我把它的默认值设置为否

137
00:07:25,779 --> 00:07:29,116
我还创建了一个
可选的 string 参数

138
00:07:29,116 --> 00:07:33,987
代表此专注模式下的用户状态

139
00:07:33,987 --> 00:07:37,524
最后 我添加了一个可选的账户参数

140
00:07:37,524 --> 00:07:40,527
这是我的 App 定义的一个实体

141
00:07:40,527 --> 00:07:44,932
其包含了特定账户的信息

142
00:07:44,932 --> 00:07:48,635
这三个参数都设置了标题

143
00:07:48,635 --> 00:07:51,805
用于描述这些参数

144
00:07:51,805 --> 00:07:54,274
会在设置中展示给用户

145
00:07:54,274 --> 00:07:55,509
在专注模式设置中

146
00:07:55,509 --> 00:07:58,345
用户设置您的 App 的
专注模式过滤器时

147
00:07:58,345 --> 00:08:00,781
设置界面会以类似我刚才展示过的

148
00:08:00,781 --> 00:08:02,583
网格的样子呈现

149
00:08:02,583 --> 00:08:04,051
但这次 因为过滤器

150
00:08:04,051 --> 00:08:07,955
已经设置好了 其内容会动态反映

151
00:08:07,955 --> 00:08:11,625
之前设置的内容

152
00:08:11,625 --> 00:08:14,795
这里仍然是您的 App 的图标

153
00:08:14,795 --> 00:08:17,331
主要文本和次要文本

154
00:08:17,331 --> 00:08:21,535
可以根据
FocusFilterIntent 中的

155
00:08:21,535 --> 00:08:24,471
显示内容属性自定义

156
00:08:24,471 --> 00:08:27,574
主要文本会显示出

157
00:08:27,574 --> 00:08:31,278
设置好了的参数 比如选择账户

158
00:08:31,278 --> 00:08:34,181
设置状态 等等

159
00:08:34,181 --> 00:08:37,417
次要文本会显示出

160
00:08:37,417 --> 00:08:43,557
设置好了的参数
比如工作账户或工作中

161
00:08:43,557 --> 00:08:46,527
在我的代码中 我设置了

162
00:08:46,527 --> 00:08:49,229
动态生成显示内容

163
00:08:49,229 --> 00:08:53,367
因为账户和状态都是可选参数

164
00:08:53,367 --> 00:08:56,036
它们只在用户设置之后

165
00:08:56,036 --> 00:08:59,840
才会出现在动态主次文本中

166
00:08:59,840 --> 00:09:03,343
由于 alwaysUseDarkMode
是一个必选参数

167
00:09:03,343 --> 00:09:09,116
它会始终包含在主要和次要文本中

168
00:09:09,116 --> 00:09:11,718
好了 现在您定义好了
专注模式过滤器

169
00:09:11,718 --> 00:09:13,854
用户可以在专注模式设置中

170
00:09:13,854 --> 00:09:17,457
为某个专注模式自定特定值了

171
00:09:17,457 --> 00:09:20,494
但您的 App
怎么知道用户自定了什么呢？

172
00:09:20,494 --> 00:09:23,297
您的 App 要如何适当更新自己？

173
00:09:23,297 --> 00:09:26,667
它必须根据系统的变化采取行动

174
00:09:26,667 --> 00:09:29,703
当专注模式发生了变化 系统认为

175
00:09:29,703 --> 00:09:32,840
您的 App 有必要知道这个变化时

176
00:09:32,840 --> 00:09:36,376
它会用
两种方式之一向您传达这个信息

177
00:09:36,376 --> 00:09:39,246
如果 App 正在运行
而您已经部署了

178
00:09:39,246 --> 00:09:42,149
FocusFilterIntent 它就会收到

179
00:09:42,149 --> 00:09:44,017
perform 方法的调用

180
00:09:44,017 --> 00:09:47,988
如果 App 没有运行 您可以部署

181
00:09:47,988 --> 00:09:49,523
一个扩展

182
00:09:49,523 --> 00:09:51,725
这样 如果您已经

183
00:09:51,725 --> 00:09:55,095
在 FocusFilterIntent 中
部署了 perform

184
00:09:55,095 --> 00:09:58,732
它就会在扩展中被调用

185
00:09:58,732 --> 00:10:01,668
您的 App 和扩展
都可以调用 perform

186
00:10:01,668 --> 00:10:06,006
所以并非每个 App 都需要扩展

187
00:10:06,006 --> 00:10:09,776
一般来说 如果您的 App 只是

188
00:10:09,776 --> 00:10:12,446
随着专注模式的改变更新界面外观

189
00:10:12,446 --> 00:10:18,018
那只在 App 内
实现 perform 就足够了

190
00:10:18,018 --> 00:10:21,221
如果您的 App 的
小组件、通知或标记

191
00:10:21,221 --> 00:10:24,725
都需要随着专注模式改变

192
00:10:24,725 --> 00:10:29,563
那您也许会需要部署一个扩展

193
00:10:29,563 --> 00:10:31,665
基本上 如果您的 App

194
00:10:31,665 --> 00:10:34,601
想要更新任何内部视图之外的东西

195
00:10:34,601 --> 00:10:37,671
您就需要部署扩展了

196
00:10:37,671 --> 00:10:40,741
在后面
我会用“您的 App”这个词

197
00:10:40,741 --> 00:10:44,511
根据上下文不同
它可能说的是您的 App

198
00:10:44,511 --> 00:10:47,781
也可能是您的扩展

199
00:10:47,781 --> 00:10:52,119
要响应一个专注模式过滤器
请部署 perform 函数

200
00:10:52,119 --> 00:10:54,688
访问设置中提供的

201
00:10:54,688 --> 00:10:58,525
参数的填充值

202
00:10:58,525 --> 00:11:02,196
依此更新您的 App 的外观与行为

203
00:11:02,196 --> 00:11:04,631
当系统认为您的 App

204
00:11:04,631 --> 00:11:06,800
需要响应专注模式的变化时

205
00:11:06,800 --> 00:11:10,537
就会调用您的 perform 部署

206
00:11:10,537 --> 00:11:13,807
当系统认为先前提供的值

207
00:11:13,807 --> 00:11:18,212
不再有效时 也会调用 perform

208
00:11:18,212 --> 00:11:21,014
这种情况下 您的过滤器参数

209
00:11:21,014 --> 00:11:24,451
会被设置成默认值

210
00:11:24,451 --> 00:11:27,387
当系统根据您的 App 的
过滤器调用 perform 时

211
00:11:27,387 --> 00:11:30,257
所有参数会根据

212
00:11:30,257 --> 00:11:32,860
设置中设定的值填满

213
00:11:32,860 --> 00:11:35,896
要读取参数名的值

214
00:11:35,896 --> 00:11:39,399
可以调用 self.“参数名”

215
00:11:39,399 --> 00:11:41,635
这个示例中
在 perform 的最后

216
00:11:41,635 --> 00:11:46,173
我让 App 根据我收到的数据更新

217
00:11:46,173 --> 00:11:47,708
有时候 您也许会需要询问

218
00:11:47,708 --> 00:11:50,043
当前的过滤器参数

219
00:11:50,043 --> 00:11:51,111
在我的案例中

220
00:11:51,111 --> 00:11:55,315
因为我的过滤器名叫
ExampleChatAppFocusFilter

221
00:11:55,315 --> 00:11:59,520
我就要访问
ExampleChatAppFocusFilter.current

222
00:12:02,122 --> 00:12:04,925
现在您的 App
可以根据专注模式过滤器行动了

223
00:12:04,925 --> 00:12:08,262
接下来就是进一步提升用户体验

224
00:12:08,262 --> 00:12:11,999
把您的 App
行为变化的额外上下文

225
00:12:11,999 --> 00:12:14,701
返回给系统

226
00:12:16,570 --> 00:12:19,339
通过提供额外上下文

227
00:12:19,339 --> 00:12:22,910
您可以在 App 视图
之外影响其行为

228
00:12:22,910 --> 00:12:26,013
比如 过滤通知信息

229
00:12:26,013 --> 00:12:30,250
设定您的 App 的通知标记的数量

230
00:12:30,250 --> 00:12:32,452
一个给系统提供信息的方法

231
00:12:32,452 --> 00:12:35,088
是通过 AppContext 对象

232
00:12:35,088 --> 00:12:37,090
这个对象可以作为

233
00:12:37,090 --> 00:12:41,028
perform 函数结果的一部分返回

234
00:12:41,028 --> 00:12:43,664
或者 您可以在专注模式过滤器中

235
00:12:43,664 --> 00:12:46,400
随时返回 AppContext

236
00:12:46,400 --> 00:12:50,604
并通过调用 invalidate
强制系统获取更新值

237
00:12:50,604 --> 00:12:53,807
当有专注模式过滤器启用时

238
00:12:53,807 --> 00:12:57,811
您的 App 也许有
额外的上下文 用来决定某个通知

239
00:12:57,811 --> 00:13:00,314
是否应该打断用户

240
00:13:00,314 --> 00:13:03,617
为了传递这个信息
您的 App 必须

241
00:13:03,617 --> 00:13:08,555
在 AppContext 中
设置 filterPredicate 属性

242
00:13:08,555 --> 00:13:11,325
这个“过滤器谓词”与一个

243
00:13:11,325 --> 00:13:15,295
叫做 filterCriteria
的新字符串属性

244
00:13:15,295 --> 00:13:17,965
共同工作在 UNNotification 上

245
00:13:17,965 --> 00:13:21,835
如果通知的过滤器与过滤器谓词(Predicate)

246
00:13:21,835 --> 00:13:26,406
不符合 该通知就会被静音

247
00:13:26,406 --> 00:13:30,010
要在 FocusFilterIntent 中
设置过滤器谓词

248
00:13:30,010 --> 00:13:32,713
请把它加入您的 App 上下文中

249
00:13:32,713 --> 00:13:35,649
假如一台设备开启了个人专注模式

250
00:13:35,649 --> 00:13:38,652
用户在设置中只选中了

251
00:13:38,652 --> 00:13:40,454
个人账户

252
00:13:40,454 --> 00:13:42,956
在这种情况下 我把过滤器谓词

253
00:13:42,956 --> 00:13:46,093
设置成个人账户的标识符

254
00:13:46,093 --> 00:13:49,530
如果收到的通知不是来自个人账户

255
00:13:49,530 --> 00:13:53,100
它就不会打断用户

256
00:13:53,100 --> 00:13:56,403
这里 当我设置这个通知时

257
00:13:56,403 --> 00:14:00,874
我把 filterCriteria
设置成了工作账户的标识符

258
00:14:00,874 --> 00:14:03,810
因为我知道这个通知

259
00:14:03,810 --> 00:14:06,146
是要发送给工作账户的

260
00:14:06,146 --> 00:14:09,249
这个通知应该会被静音

261
00:14:09,249 --> 00:14:13,053
因为它的账户标识符与我刚刚设置的

262
00:14:13,053 --> 00:14:14,555
谓词不符

263
00:14:14,555 --> 00:14:19,092
它只和个人账户的标识符相符

264
00:14:19,092 --> 00:14:22,029
这是一个本地通知的示例

265
00:14:22,029 --> 00:14:25,899
但远程通知也可以通过 JSON 载荷

266
00:14:25,899 --> 00:14:29,770
来设置过滤器

267
00:14:29,770 --> 00:14:32,372
另一个给系统提供
额外上下文的方法是

268
00:14:32,372 --> 00:14:35,609
更新您的 App 的标记数量

269
00:14:35,609 --> 00:14:39,580
以反映当前启用的
专注模式下什么最重要

270
00:14:39,580 --> 00:14:42,616
这样可以防止您的用户分心

271
00:14:42,616 --> 00:14:45,219
在 UserNotifications 中

272
00:14:45,219 --> 00:14:47,087
有一个新的 API 为此设计

273
00:14:47,087 --> 00:14:52,092
在 UNUserNotificationCenter 上
您只需用一个代表新标记值的

274
00:14:52,092 --> 00:14:57,164
无符号整数
调用 setBadgeCount 即可

275
00:14:57,164 --> 00:14:59,399
现在 您已经学会如何提供上下文

276
00:14:59,399 --> 00:15:02,736
以过滤通知 或是设置标记数量了

277
00:15:02,736 --> 00:15:05,372
记住 这个功能的目标是为了

278
00:15:05,372 --> 00:15:08,509
在用户需要专注时
展示最有用的信息

279
00:15:08,509 --> 00:15:12,112
有时候
这需要尽量减少展示不相关的内容

280
00:15:12,112 --> 00:15:16,283
以防止用户在启用专注模式时分心

281
00:15:16,283 --> 00:15:18,952
接下来 请您思考一下

282
00:15:18,952 --> 00:15:22,656
您的 App 的哪些部分
可以从专注模式过滤器中受益

283
00:15:22,656 --> 00:15:25,559
确定哪些属性可以配置

284
00:15:25,559 --> 00:15:29,029
设置好您的 App 和扩展来处理这些

285
00:15:29,029 --> 00:15:30,697
然后更进一步

286
00:15:30,697 --> 00:15:34,568
看看您是否需要提供额外上下文

287
00:15:34,568 --> 00:15:36,436
这就是专注模式过滤器！

288
00:15:36,436 --> 00:15:38,172
感谢您参加这次讲座

289
00:15:38,172 --> 00:15:40,440
祝您愉快度过
接下来的 WWDC 时光

290
00:15:40,440 --> 00:15:44,578
♪

