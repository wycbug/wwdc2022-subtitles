1
00:00:00,501 --> 00:00:08,509
♪ ♪

2
00:00:09,943 --> 00:00:11,812
Hi, my name is Thalia,

3
00:00:11,845 --> 00:00:15,749
and today we will learn what's new
in SF Symbols.

4
00:00:15,782 --> 00:00:20,120
A symbol is one of the most effective
single pieces of graphic communication.

5
00:00:20,153 --> 00:00:23,390
If you ever want to represent a feeling,
an object,

6
00:00:23,423 --> 00:00:27,694
an action, or a concept,
symbols are an excellent way to do so.

7
00:00:27,728 --> 00:00:30,564
Symbols are used frequently
and consistently,

8
00:00:30,597 --> 00:00:32,633
becoming second nature to us.

9
00:00:32,666 --> 00:00:35,435
Without relying on them,
we will find it very difficult

10
00:00:35,469 --> 00:00:37,171
to navigate our surroundings.

11
00:00:37,204 --> 00:00:41,441
As a result, they become
an essential part of interface design,

12
00:00:41,475 --> 00:00:45,846
as symbols are an excellent way
to aid in communication.

13
00:00:45,879 --> 00:00:50,684
A symbol can also bring many benefits
by being a means of interaction,

14
00:00:50,717 --> 00:00:53,854
being space-efficient,

15
00:00:53,887 --> 00:00:56,590
enhancing the aesthetic appeal,

16
00:00:56,623 --> 00:01:00,294
and engaging us by being user-friendly.

17
00:01:00,327 --> 00:01:04,965
What is so great about a symbol
is that it can transcend many languages.

18
00:01:04,998 --> 00:01:06,733
They can be universal.

19
00:01:06,767 --> 00:01:11,505
As a result, symbols can unite people
in communicating shared ideas,

20
00:01:11,538 --> 00:01:16,777
helping engage with others on a deeper
level than is possible with just words.

21
00:01:16,810 --> 00:01:20,681
At Apple, we care deeply
about making the user interface

22
00:01:20,714 --> 00:01:22,816
and the overall experience better.

23
00:01:22,850 --> 00:01:25,118
That's why we created SF Symbols,

24
00:01:25,152 --> 00:01:27,721
an extensive library of iconography

25
00:01:27,754 --> 00:01:32,292
designed to integrate seamlessly
with San Francisco, the system font,

26
00:01:32,326 --> 00:01:35,796
providing a powerful
and flexible design resource

27
00:01:35,829 --> 00:01:39,867
for creating experiences
on all Apple platforms.

28
00:01:39,900 --> 00:01:42,836
SF Symbols is designed
with typography in mind.

29
00:01:42,870 --> 00:01:47,307
It has awesome features
like different weights, scales,

30
00:01:47,341 --> 00:01:51,879
outlined and filled variants,
encapsulated shapes, and alignments.

31
00:01:51,912 --> 00:01:55,682
To learn more about these features
and when it's best to use them,

32
00:01:55,716 --> 00:02:00,687
check out last year's video
from WWDC to get you up to speed.

33
00:02:00,721 --> 00:02:04,091
Today, we will take a look
at the new repertoire

34
00:02:04,124 --> 00:02:07,261
and the new categories in "New symbols."

35
00:02:07,294 --> 00:02:11,732
In "Rendering modes," we will review
the benefits of adding colors to symbols,

36
00:02:11,765 --> 00:02:17,471
and we have a new configuration to
help make the symbol's behavior automatic.

37
00:02:17,504 --> 00:02:20,874
We have a new exciting feature
called "Variable Color."

38
00:02:20,908 --> 00:02:25,579
Here we will explore the use of color
to make a symbol more dynamic.

39
00:02:25,612 --> 00:02:30,150
And finally, we have a more efficient way
of annotating symbols.

40
00:02:30,184 --> 00:02:33,687
We will learn more about it
in "Unified annotations."

41
00:02:33,720 --> 00:02:35,489
So let's get started.

42
00:02:35,522 --> 00:02:38,659
The SF Symbols library
keeps growing each year,

43
00:02:38,692 --> 00:02:42,129
with newer categories
and symbols to choose from.

44
00:02:42,162 --> 00:02:44,331
There are some great additions for Home,

45
00:02:44,364 --> 00:02:48,869
including lights, blinds,
windows, and doors.

46
00:02:48,902 --> 00:02:52,806
We even have light switches
and power outlets.

47
00:02:52,840 --> 00:02:55,609
There are new furniture and appliances.

48
00:02:55,642 --> 00:02:57,978
And new health symbols.

49
00:02:58,011 --> 00:03:02,783
And this year, our fitness figures
are available for you to use.

50
00:03:02,816 --> 00:03:06,153
We have expanded
the library's currency symbols.

51
00:03:06,186 --> 00:03:09,756
And we have many new objects
to choose from.

52
00:03:09,790 --> 00:03:13,126
And, of course,
we keep expanding our localized symbols,

53
00:03:13,160 --> 00:03:18,699
with new ones covering different scripts
and right-to-left writing systems.

54
00:03:18,732 --> 00:03:21,835
There are over 700 new symbols
to choose from,

55
00:03:21,869 --> 00:03:27,040
making SF Symbols a library
of more than 4,000 unique symbols.

56
00:03:27,074 --> 00:03:28,876
That is amazing.

57
00:03:28,909 --> 00:03:32,513
With all these new additions,
we wanted to help you navigate

58
00:03:32,546 --> 00:03:34,982
through all the symbols
in the SF Symbols app,

59
00:03:35,015 --> 00:03:39,486
so we've added five new categories
that we think will be super helpful:

60
00:03:39,520 --> 00:03:41,989
Camera & Photos,

61
00:03:42,022 --> 00:03:43,957
Accessibility,

62
00:03:43,991 --> 00:03:46,026
Privacy & Security,

63
00:03:46,059 --> 00:03:49,496
Home, and Fitness.

64
00:03:49,530 --> 00:03:53,367
And remember that in the app,
you can always create your own collection

65
00:03:53,400 --> 00:03:57,638
with a selection of symbols
that best suits your needs.

66
00:03:57,671 --> 00:04:02,075
Now, let's have a quick reminder
about the different rendering modes.

67
00:04:02,109 --> 00:04:04,778
As you may know, in SF Symbols,

68
00:04:04,811 --> 00:04:07,047
there are four rendering modes
to choose from,

69
00:04:07,080 --> 00:04:12,519
each one providing a greater control
over how color is applied to a symbol.

70
00:04:12,553 --> 00:04:16,323
Monochrome is the most neutral
of all the rendering modes.

71
00:04:16,356 --> 00:04:18,825
It gives a uniform and consistent look,

72
00:04:18,859 --> 00:04:21,428
and it is the rendering mode
that most closely reflects

73
00:04:21,461 --> 00:04:24,965
the typographic nature of SF Symbols.

74
00:04:24,998 --> 00:04:28,936
Hierarchical is the rendering mode
that provides a subtle emphasis

75
00:04:28,969 --> 00:04:32,606
while having a single color hue
drive the overall aesthetic.

76
00:04:32,639 --> 00:04:37,177
We can apply depth by highlighting
the most important shape of a symbol

77
00:04:37,211 --> 00:04:40,981
or differentiate the foreground
and background elements.

78
00:04:41,014 --> 00:04:44,618
That way, we create a visual hierarchy
by emphasizing

79
00:04:44,651 --> 00:04:48,589
the essential part or parts of a symbol.

80
00:04:48,622 --> 00:04:52,893
Palette uses two or more contrasting
colors to give elements of a symbol

81
00:04:52,926 --> 00:04:54,895
more prominence and versatility,

82
00:04:54,928 --> 00:04:57,598
allowing for the symbols to be customized

83
00:04:57,631 --> 00:05:01,468
to integrate with the color palette
of the environment.

84
00:05:01,502 --> 00:05:05,172
Palette helps the symbols
have a contrasting and unique look

85
00:05:05,205 --> 00:05:08,809
without sacrificing the overall aesthetic.

86
00:05:08,842 --> 00:05:12,779
And Multicolor is the rendering mode
that represents the intrinsic

87
00:05:12,813 --> 00:05:15,249
or native color of a symbol.

88
00:05:15,282 --> 00:05:19,753
This rendering mode uses a range of colors
that can be applied to a symbol

89
00:05:19,786 --> 00:05:23,390
to describe the appearance of an object
in the physical world,

90
00:05:23,423 --> 00:05:25,692
or it can use colors
to emphasize the meaning

91
00:05:25,726 --> 00:05:28,061
that the symbol is trying to convey.

92
00:05:28,095 --> 00:05:32,432
You can use Multicolor when
the symbols are very prominent in the UI,

93
00:05:32,466 --> 00:05:38,038
as it will help create a color narrative
that will relate to the symbol forms.

94
00:05:38,071 --> 00:05:42,376
Until now, if you didn't explicitly
specify a rendering mode,

95
00:05:42,409 --> 00:05:44,478
you would get Monochrome by default.

96
00:05:44,511 --> 00:05:47,514
But this year,
we've made it easier to display symbols

97
00:05:47,548 --> 00:05:52,419
in a rendering mode that best highlights
each symbol's unique characteristics.

98
00:05:52,452 --> 00:05:54,888
Symbols now feature
a preferred rendering mode,

99
00:05:54,922 --> 00:05:57,624
which can vary between symbols.

100
00:05:57,658 --> 00:06:01,495
And we call this behavior
Automatic Rendering.

101
00:06:01,528 --> 00:06:05,432
When selected, it provides
the preferred rendering mode configuration

102
00:06:05,465 --> 00:06:09,903
for each symbol
without having to specify it manually.

103
00:06:09,937 --> 00:06:12,639
For example, when Automatic is selected,

104
00:06:12,673 --> 00:06:16,143
the camera filters symbol
will opt into Hierarchical,

105
00:06:16,176 --> 00:06:20,514
as it is the rendering mode that conveys
a more precise visual representation

106
00:06:20,547 --> 00:06:23,917
by highlighting the opacities
that reference the translucency

107
00:06:23,951 --> 00:06:27,654
of the physical camera lenses and filters.

108
00:06:27,688 --> 00:06:29,590
Here's another example.

109
00:06:29,623 --> 00:06:31,692
When Automatic is selected,

110
00:06:31,725 --> 00:06:36,263
the SharePlay symbol participates
in the Hierarchical rendering mode.

111
00:06:36,296 --> 00:06:41,068
This behavior lets the person's shape
stand prominently in the foreground

112
00:06:41,101 --> 00:06:44,838
while the waves play a secondary role
in the background.

113
00:06:44,872 --> 00:06:48,108
Again,
this emphasizes the symbol's concept,

114
00:06:48,141 --> 00:06:50,944
as the SharePlay feature
is mainly a way to share

115
00:06:50,978 --> 00:06:53,981
and connect with friends and family.

116
00:06:54,014 --> 00:06:57,918
In most cases,
Automatic will be the best way to go.

117
00:06:57,951 --> 00:07:00,587
But you always have to be aware
of the context.

118
00:07:00,621 --> 00:07:05,526
For example, the AirPods Pro symbol
will render as Hierarchical

119
00:07:05,559 --> 00:07:07,561
when Automatic is selected.

120
00:07:07,594 --> 00:07:10,731
But in this context,
the symbol is very small

121
00:07:10,764 --> 00:07:15,502
and has low contrast
when presented on this background.

122
00:07:15,536 --> 00:07:19,606
Remember that rendering modes
can still be explicitly specified

123
00:07:19,640 --> 00:07:24,678
for a uniform appearance
across symbols in a particular context.

124
00:07:24,711 --> 00:07:28,215
So in this case,
Monochrome will be the best choice

125
00:07:28,248 --> 00:07:33,053
as it is more legible
and has fewer details at small sizes.

126
00:07:33,086 --> 00:07:38,959
So always make sure to specify the most
suitable rendering mode configuration.

127
00:07:38,992 --> 00:07:42,529
The different rendering modes
apply color to symbols

128
00:07:42,563 --> 00:07:46,900
to present visual solutions
for a wide range of circumstances.

129
00:07:46,934 --> 00:07:51,438
Color is a powerful tool,
and we can explore it even further.

130
00:07:51,471 --> 00:07:54,141
Some symbols are more dynamic in nature.

131
00:07:54,174 --> 00:07:56,910
If we analyze their visual representation,

132
00:07:56,944 --> 00:07:59,780
we can notice two main characteristics:

133
00:07:59,813 --> 00:08:05,385
first, their paths or shapes convey
varying levels of strength,

134
00:08:05,419 --> 00:08:08,422
and second,
they rely on color to communicate

135
00:08:08,455 --> 00:08:11,625
their status changing over time.

136
00:08:11,658 --> 00:08:14,361
This year,
we're expanding the use of color

137
00:08:14,394 --> 00:08:18,432
by introducing a new feature
called Variable Color.

138
00:08:18,465 --> 00:08:22,202
We've arranged the symbol's vector paths
into layers

139
00:08:22,236 --> 00:08:25,606
and organized those layers
in sequential order,

140
00:08:25,639 --> 00:08:29,576
creating a new method of
distributing color through these layers.

141
00:08:29,610 --> 00:08:32,579
This allows us
to convey different levels of strength

142
00:08:32,613 --> 00:08:34,882
or communicate a sequence over time,

143
00:08:34,915 --> 00:08:38,952
which is dictated by the nature
of the design of the symbol.

144
00:08:38,986 --> 00:08:42,256
One important thing to know is that,
in Variable Color,

145
00:08:42,289 --> 00:08:46,159
some symbols have all paths
participating in the sequence,

146
00:08:46,193 --> 00:08:51,565
but for other symbols,
only some of the paths may opt-in.

147
00:08:51,598 --> 00:08:54,601
Let's look at a few examples.

148
00:08:54,635 --> 00:08:58,772
With Variable Color,
we want the paths representing the iPhone

149
00:08:58,805 --> 00:09:01,408
to opt-out of the variable sequence,

150
00:09:01,441 --> 00:09:05,445
and we want to highlight the paths
representing the radio waves.

151
00:09:05,479 --> 00:09:09,917
This will help differentiate the stages
that describe the levels of strength

152
00:09:09,950 --> 00:09:12,920
of the radio signal of the phone.

153
00:09:12,953 --> 00:09:16,924
It's important to know that we define
how we want to group the paths.

154
00:09:16,957 --> 00:09:19,359
For example,
it wouldn't make much sense

155
00:09:19,393 --> 00:09:23,030
to highlight the waves
from left to right in this case.

156
00:09:23,063 --> 00:09:26,767
So instead, we can group the paths
following the sequence

157
00:09:26,800 --> 00:09:30,170
that best conveys
the radio signal strength:

158
00:09:30,204 --> 00:09:33,440
we have the two smaller waves
in one layer,

159
00:09:33,473 --> 00:09:36,743
and we have the two bigger waves
in a different layer.

160
00:09:36,777 --> 00:09:41,915
And as mentioned, the phone does
not participate in the variable sequence.

161
00:09:41,949 --> 00:09:46,486
This time, let's look at a symbol
that we are very familiar with.

162
00:09:46,520 --> 00:09:50,691
In most cases, this symbol is paired
with a built-in slider

163
00:09:50,724 --> 00:09:54,695
that syncs with the states
represented in the symbol.

164
00:09:54,728 --> 00:09:57,631
The waves highlight their paths
following a sequence

165
00:09:57,664 --> 00:10:00,434
dictated by the user
controlling the slider,

166
00:10:00,467 --> 00:10:04,505
increasing or decreasing the volume level.

167
00:10:04,538 --> 00:10:06,340
Like in the iPhone example,

168
00:10:06,373 --> 00:10:09,710
we have a path that doesn't participate
in the sequence,

169
00:10:09,743 --> 00:10:12,546
which is the shape illustrating
the speaker,

170
00:10:12,579 --> 00:10:15,883
and we have paths
that do participate in the sequence,

171
00:10:15,916 --> 00:10:19,820
which are the three waves
that define the volume's strength:

172
00:10:19,853 --> 00:10:24,191
low volume, mid-volume,
and high volume.

173
00:10:24,224 --> 00:10:27,027
These paths are organized into layers,

174
00:10:27,060 --> 00:10:32,065
and the selected layers opt-in
to the Variable Color feature.

175
00:10:32,099 --> 00:10:35,936
We represent their strength
with percentage values:

176
00:10:35,969 --> 00:10:38,105
0% is entirely off,

177
00:10:38,138 --> 00:10:42,376
anything above 0%
will highlight part of the symbol,

178
00:10:42,409 --> 00:10:48,582
and the whole symbol will be fully
highlighted as the value approaches 100%.

179
00:10:48,615 --> 00:10:51,385
One important thing to know
is that Variable Color

180
00:10:51,418 --> 00:10:53,654
is not meant to create depth;

181
00:10:53,687 --> 00:10:58,125
instead, it's meant to highlight
a sequence of steps or stages

182
00:10:58,158 --> 00:11:00,561
that the symbol can represent.

183
00:11:00,594 --> 00:11:03,497
For example,
let's imagine I need a symbol

184
00:11:03,530 --> 00:11:06,366
to represent people's capacity
inside a room.

185
00:11:06,400 --> 00:11:08,969
This symbol looks great for that.

186
00:11:09,002 --> 00:11:11,638
Let's look at it in more detail.

187
00:11:11,672 --> 00:11:15,275
We don't want to highlight
just one part of the symbol.

188
00:11:15,309 --> 00:11:20,747
Instead, we need to think of the symbol
as a sequence or a range.

189
00:11:20,781 --> 00:11:23,283
My goal is to cover different states:

190
00:11:23,317 --> 00:11:25,352
the room is empty,

191
00:11:25,385 --> 00:11:28,222
the room has few people in it,

192
00:11:28,255 --> 00:11:32,659
the room is half-full,
and the room is at full capacity.

193
00:11:32,693 --> 00:11:36,129
So now, when I opt into Variable Color,

194
00:11:36,163 --> 00:11:38,699
I can easily see
the graphic representation

195
00:11:38,732 --> 00:11:41,602
of the different states
I'm trying to convey.

196
00:11:41,635 --> 00:11:45,772
And there are no limits to how
many paths can opt into the feature.

197
00:11:45,806 --> 00:11:48,008
There can be just one or many.

198
00:11:48,041 --> 00:11:52,012
You decide what is the design strategy
that best suits your needs.

199
00:11:52,045 --> 00:11:56,617
If you want to represent the strength
level of shapes that follow a sequence,

200
00:11:56,650 --> 00:11:59,920
like waves, rays, ellipsis, and layers,

201
00:11:59,953 --> 00:12:02,890
you can do so with Variable Color.

202
00:12:02,923 --> 00:12:07,561
Variable Color is opacity based
and it's available in all rendering modes.

203
00:12:09,029 --> 00:12:14,168
This year, we have made annotations for
custom symbols faster and easier to use

204
00:12:14,201 --> 00:12:18,705
by creating a unified layer
structure across all rendering modes.

205
00:12:18,739 --> 00:12:21,775
I love baking,
and I was thinking of designing an app

206
00:12:21,808 --> 00:12:23,977
with cupcake-only recipes.

207
00:12:24,011 --> 00:12:26,713
I wanted to create my own custom symbols,

208
00:12:26,747 --> 00:12:29,683
so I've designed a set
that will cover my needs.

209
00:12:29,716 --> 00:12:33,287
This will be an excellent opportunity
to show you how to annotate symbols

210
00:12:33,320 --> 00:12:35,989
with the unified layer structure approach

211
00:12:36,023 --> 00:12:40,194
and how to annotate symbols
that participate in Variable Color.

212
00:12:40,227 --> 00:12:43,197
Let's use these two as an example.

213
00:12:43,230 --> 00:12:47,134
Before we start annotating,
there are a few things to consider:

214
00:12:47,167 --> 00:12:52,472
we need to keep the hierarchy in mind
and make sure we outline the z-order.

215
00:12:52,506 --> 00:12:58,545
The z-order refers to the order
of the paths in a symbol along the z-axis.

216
00:12:58,579 --> 00:13:02,583
There are also two new concepts
you need to be aware of:

217
00:13:02,616 --> 00:13:05,085
Draw and Erase.

218
00:13:05,118 --> 00:13:08,989
These are used to help define the way
a layer renders.

219
00:13:09,022 --> 00:13:12,559
For example,
here we have the paths of a symbol

220
00:13:12,593 --> 00:13:16,163
representing a square
overlapping a circle.

221
00:13:16,196 --> 00:13:19,066
When selecting the layers
containing the square,

222
00:13:19,099 --> 00:13:21,068
if we choose the Draw option,

223
00:13:21,101 --> 00:13:24,638
the layer will draw the paths
contained in that layer.

224
00:13:24,671 --> 00:13:26,974
If we choose the Erase option,

225
00:13:27,007 --> 00:13:30,310
the layer will erase the path
containing the layer,

226
00:13:30,344 --> 00:13:33,347
affecting how the symbol is rendered.

227
00:13:33,380 --> 00:13:36,149
Now, let's start annotating the cupcake.

228
00:13:36,183 --> 00:13:39,953
As a first step, we need to organize
the paths in layers

229
00:13:39,987 --> 00:13:42,723
to create the desired hierarchy.

230
00:13:42,756 --> 00:13:47,361
If I analyze it closely,
I can see four main shapes:

231
00:13:47,394 --> 00:13:50,564
the frosting, the cupcake base,

232
00:13:50,597 --> 00:13:53,033
the badge, and the plus.

233
00:13:53,066 --> 00:13:56,403
You can add as many paths as needed
to a layer.

234
00:13:56,436 --> 00:13:59,773
So in this case,
the frosting will be defined

235
00:13:59,806 --> 00:14:02,476
by a layer with three different paths,

236
00:14:02,509 --> 00:14:07,447
and the rest of the layers will be defined
by just one path each.

237
00:14:07,481 --> 00:14:12,085
Organizing the shapes in this way
allows us to have more flexibility

238
00:14:12,119 --> 00:14:15,722
when annotating one structure
for all rendering modes.

239
00:14:15,756 --> 00:14:18,892
Now we have all the information
we need in one place

240
00:14:18,926 --> 00:14:21,428
to customize the symbol as needed.

241
00:14:22,396 --> 00:14:26,166
Now we can start annotating
all rendering modes.

242
00:14:26,200 --> 00:14:28,735
Let's look at Multicolor first.

243
00:14:28,769 --> 00:14:31,038
I already have the shapes set up,

244
00:14:31,071 --> 00:14:33,774
so I just need to choose the right colors.

245
00:14:33,807 --> 00:14:36,210
Red Velvet is my favorite flavor,

246
00:14:36,243 --> 00:14:41,215
so I'll choose white for the frosting
and red for the cupcake base.

247
00:14:41,248 --> 00:14:44,818
Now I will follow the same logic
that SF Symbols defines

248
00:14:44,852 --> 00:14:47,554
for the plus badges in Multicolor:

249
00:14:47,588 --> 00:14:50,824
green for the badge
and white for the plus.

250
00:14:50,858 --> 00:14:54,294
Okay, this is looking great so far.

251
00:14:54,328 --> 00:14:56,296
Now, let's focus on the badge.

252
00:14:56,330 --> 00:15:00,834
This is where the unified annotation
approach is more apparent.

253
00:15:00,868 --> 00:15:03,203
We already defined Multicolor.

254
00:15:03,237 --> 00:15:06,406
Now let's look at Hierarchical
and Palette.

255
00:15:06,440 --> 00:15:09,843
Because of the use of hierarchy
in this rendering modes,

256
00:15:09,877 --> 00:15:12,379
I would expect the badge to be Primary,

257
00:15:12,412 --> 00:15:17,217
which will render it white
on a black background, like this one.

258
00:15:17,251 --> 00:15:21,355
Now I need the plus shape
to erase part of the badge.

259
00:15:21,388 --> 00:15:24,224
This is where the Erase selection
is helpful.

260
00:15:24,258 --> 00:15:27,394
I will be able to see the badge
rendered as desired

261
00:15:27,427 --> 00:15:32,566
by erasing a part of a shape
when the layers overlap.

262
00:15:32,599 --> 00:15:36,170
Finally, I just need
the Monochrome annotation.

263
00:15:36,203 --> 00:15:39,406
Because there is no added complexity
in this rendering mode,

264
00:15:39,439 --> 00:15:41,308
I will follow the same logic,

265
00:15:41,341 --> 00:15:46,213
making the plus shape
erase part of the badge shape.

266
00:15:46,246 --> 00:15:48,115
I'm almost done now.

267
00:15:48,148 --> 00:15:50,918
I just need a few extra details.

268
00:15:50,951 --> 00:15:53,987
For Hierarchical and Palette,
I just need to annotate

269
00:15:54,021 --> 00:15:57,191
the rest of the cupcake shape
as Secondary.

270
00:15:57,224 --> 00:16:01,528
For Palette, I will choose a color
to give a bit of contrast.

271
00:16:01,562 --> 00:16:04,364
And for Monochrome,
I just need to make sure

272
00:16:04,398 --> 00:16:07,668
I have the remaining shapes
opting into Draw.

273
00:16:09,503 --> 00:16:11,038
That's all I need.

274
00:16:11,071 --> 00:16:14,942
The cupcake is ready and customized
for all rendering modes.

275
00:16:16,777 --> 00:16:19,213
Now let's look at the kitchen timer.

276
00:16:19,246 --> 00:16:23,217
The paths represent the time passing,
and since this is a sequence,

277
00:16:23,250 --> 00:16:27,221
it's a great candidate
to participate in Variable Color.

278
00:16:27,254 --> 00:16:30,390
We can use the same strategy
to annotate this symbol,

279
00:16:30,424 --> 00:16:33,961
but instead of grouping
the timer paths in one layer,

280
00:16:33,994 --> 00:16:37,764
we need to split them
with each in its own layer.

281
00:16:37,798 --> 00:16:40,367
This is because
we need to organize the shapes

282
00:16:40,400 --> 00:16:42,703
to allow us to recreate the sequence

283
00:16:42,736 --> 00:16:47,307
that will help us communicate
the different states of the symbol.

284
00:16:47,341 --> 00:16:51,745
And remember that Variable Color
works in all rendering modes.

285
00:16:51,778 --> 00:16:55,015
If you want to learn more about
the new Variable Color feature

286
00:16:55,048 --> 00:16:57,050
and the SF Symbols app,

287
00:16:57,084 --> 00:17:02,523
check out Paul's talk
"Adopt Variable Color in SF Symbols.”

288
00:17:02,556 --> 00:17:05,826
You can find the new beta version
of the SF Symbols app,

289
00:17:05,859 --> 00:17:09,329
where you can explore
the new unified annotation approach

290
00:17:09,363 --> 00:17:13,100
and access the hundreds of new symbols
and fantastic new features.

291
00:17:13,133 --> 00:17:17,671
Check out developer.apple.com/sf-symbols.

292
00:17:17,704 --> 00:17:22,209
From Automatic Rendering behavior
to the Variable Color dynamic nature,

293
00:17:22,242 --> 00:17:25,646
SF Symbols are an extremely powerful tool
to use

294
00:17:25,679 --> 00:17:28,682
when implementing symbols in your UIs.

295
00:17:28,715 --> 00:17:32,486
And this year,
SF Symbols is even more powerful,

296
00:17:32,519 --> 00:17:36,223
with features that define
a spectrum of expression.

297
00:17:36,256 --> 00:17:37,891
Thank you for joining today.

298
00:17:37,925 --> 00:17:41,929
I hope you enjoyed learning
about what's new in SF Symbols.

