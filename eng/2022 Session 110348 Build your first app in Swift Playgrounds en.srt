1
00:00:00,334 --> 00:00:06,340
[upbeat music]

2
00:00:09,309 --> 00:00:13,447
- Welcome to "Build your first
app in Swift Playgrounds."

3
00:00:13,480 --> 00:00:17,684
I am Collett Charlton, an engineer
on the Swift Playgrounds team.

4
00:00:17,718 --> 00:00:19,019
- And I'm Connor Wakamo,

5
00:00:19,052 --> 00:00:21,588
another engineer
on the Swift Playgrounds team.

6
00:00:21,622 --> 00:00:26,159
- Swift Playgrounds has been a great
tool for learning to code in Swift,

7
00:00:26,193 --> 00:00:31,498
and now you can take things
a step further and build apps too!

8
00:00:31,532 --> 00:00:36,170
Today, we're going to walk through
building an app in Swift Playgrounds,

9
00:00:36,203 --> 00:00:38,472
starting with a blank template.

10
00:00:38,505 --> 00:00:42,809
We'll then show how to debug issues
using previews and the console,

11
00:00:42,843 --> 00:00:46,446
and finally,
we'll submit our app to TestFlight.

12
00:00:48,282 --> 00:00:52,719
Something our team really loves
is making and drinking tea.

13
00:00:52,753 --> 00:00:56,857
We love it so much
that we want to make an app for that.

14
00:00:56,890 --> 00:01:01,094
Connor and I are going to build
a little app to help us at tea time,

15
00:01:01,128 --> 00:01:06,033
giving us a list of teas to
help us pick what to drink each day.

16
00:01:06,066 --> 00:01:09,970
Swift Playgrounds
works great on Mac and iPad.

17
00:01:10,003 --> 00:01:11,738
I've got my Mac with me today,

18
00:01:11,772 --> 00:01:15,008
so I'm going to start
building this app there.

19
00:01:17,044 --> 00:01:20,614
Whether you are new to coding,
or are an experienced developer,

20
00:01:20,647 --> 00:01:25,018
Swift Playgrounds offers a variety
of templates and instructional content

21
00:01:25,052 --> 00:01:26,753
to get you started.

22
00:01:26,787 --> 00:01:31,391
For our tea app, we'll begin by clicking
the blank App template

23
00:01:31,425 --> 00:01:33,827
in the bottom left corner of the screen.

24
00:01:37,431 --> 00:01:40,801
Now that we have our template,
let's double click to open.

25
00:01:42,636 --> 00:01:48,442
Great. On the right is a live interactive
preview showing the Hello World text.

26
00:01:50,777 --> 00:01:55,549
Before we start coding, let's customize
the app a little using the App Settings.

27
00:01:55,582 --> 00:01:58,485
To do this,
I'll click the app settings button

28
00:01:58,519 --> 00:02:00,988
in the top left corner of the sidebar.

29
00:02:02,356 --> 00:02:06,660
Here, you can customize various
project properties like the app name

30
00:02:06,693 --> 00:02:08,695
and the accent color.

31
00:02:08,729 --> 00:02:12,399
You can also add a custom
or placeholder app icon,

32
00:02:12,432 --> 00:02:17,437
capabilities, or purpose string,
and a bundleID.

33
00:02:17,471 --> 00:02:20,274
I'll update the app's name to Tea Time.

34
00:02:23,477 --> 00:02:25,679
I'll set the accent color to brown.

35
00:02:27,047 --> 00:02:30,217
And I'll update
the placeholder icon to the mug.

36
00:02:32,252 --> 00:02:35,756
Great. Now that the important part's
out of the way,

37
00:02:35,789 --> 00:02:39,393
let's start writing some code
by selecting the template text

38
00:02:39,426 --> 00:02:43,163
and replacing it
with our first View from the Library.

39
00:02:44,131 --> 00:02:50,237
The Library can be accessed by clicking
the plus button in the project toolbar.

40
00:02:50,270 --> 00:02:53,807
It contains easy-to-use snippets
of different Views,

41
00:02:53,841 --> 00:02:59,379
Modifiers, SF Symbols, and Colors.

42
00:02:59,413 --> 00:03:03,016
We'll be using a List View
to display our list of teas,

43
00:03:03,050 --> 00:03:07,921
so I'll type list into the search field
and click it to insert one.

44
00:03:11,258 --> 00:03:14,895
Now that we have our List View,
let's add some tea items to it.

45
00:03:16,363 --> 00:03:19,132
I'll start typing Text...

46
00:03:19,166 --> 00:03:20,734
and use the return key

47
00:03:20,767 --> 00:03:23,670
to accept and insert
the code completion suggestion

48
00:03:23,704 --> 00:03:26,240
from the inline code completion panel.

49
00:03:30,711 --> 00:03:35,048
Alright, now we have our List View
with one tea added.

50
00:03:35,082 --> 00:03:36,884
Let's add some more.

51
00:03:42,289 --> 00:03:46,460
Wait, it looks like I accidentally
added Jasmine Green twice.

52
00:03:46,493 --> 00:03:51,431
In order to avoid duplicating our teas,
we should store them as an orderedSet.

53
00:03:51,465 --> 00:03:56,069
Luckily for us, Apple's swift-collection
package offers just that.

54
00:03:56,103 --> 00:03:59,306
So, let's add the swift-collection package
to our project.

55
00:04:00,574 --> 00:04:04,578
To do this, let's open the File Menu
and select Add Package.

56
00:04:07,681 --> 00:04:11,985
I'll begin by entering the URL
for the swift-collections package,

57
00:04:12,019 --> 00:04:12,853
and then press the return key.

58
00:04:17,357 --> 00:04:20,294
After the package is fetched,
we can see the package version

59
00:04:20,327 --> 00:04:23,664
and other products
that can be added to our project.

60
00:04:23,697 --> 00:04:28,335
For this app, we'll only select
Collections then click Add to Project.

61
00:04:31,772 --> 00:04:36,577
Now we have swift-collections added to our
project in the sidebar under Packages.

62
00:04:36,610 --> 00:04:41,381
Let's create an OrderedSet of String
to store our list of teas.

63
00:04:47,421 --> 00:04:50,824
Wait. It seems like we have an issue.

64
00:04:50,858 --> 00:04:53,393
Let's take a look
by clicking the issue icon.

65
00:04:54,928 --> 00:04:57,497
"Cannot find type ordered set
in scope."

66
00:04:57,531 --> 00:05:00,701
Oh, I see what the problem is.

67
00:05:00,734 --> 00:05:03,937
I forgot to import the Collections module
in our project.

68
00:05:03,971 --> 00:05:06,373
Let's import that,
and the issue should be resolved.

69
00:05:13,046 --> 00:05:15,582
Now that we have resolved that issue,

70
00:05:15,616 --> 00:05:19,419
let's update our List View to use
the collection we just created.

71
00:05:19,453 --> 00:05:22,656
To do this, we'll use a ForEach View.

72
00:05:43,577 --> 00:05:45,712
Alright, there we have it--

73
00:05:45,746 --> 00:05:49,449
our list of teas being displayed
from our tea collection.

74
00:05:49,483 --> 00:05:51,919
As I'm working on this project,

75
00:05:51,952 --> 00:05:55,789
I'm getting more and more ideas
on features to add.

76
00:05:55,822 --> 00:06:00,127
It would be so cool if our app
could listen for whistling tea kettles

77
00:06:00,160 --> 00:06:02,896
to let us know when it's time to pour.

78
00:06:02,930 --> 00:06:05,165
I'm not going to implement this now,

79
00:06:05,199 --> 00:06:07,835
but let's walk through the steps
we would take

80
00:06:07,868 --> 00:06:12,105
to explain to users
why our app needs to use the microphone.

81
00:06:13,173 --> 00:06:17,344
To add this,
let's go back into our app settings...

82
00:06:17,377 --> 00:06:19,346
and click Capabilities.

83
00:06:20,714 --> 00:06:23,650
Using the plus button
in the top righthand corner,

84
00:06:23,684 --> 00:06:27,020
we'll get a list of capabilities
we can add to our project.

85
00:06:27,054 --> 00:06:30,490
Let's find microphone and click it to add.

86
00:06:31,358 --> 00:06:35,963
For the purpose string, we'll write:
"Tea Time uses the microphone

87
00:06:35,996 --> 00:06:38,265
to listen for whistling tea kettles."

88
00:06:38,298 --> 00:06:41,702
I'll click add,
and then close app settings.

89
00:06:44,738 --> 00:06:49,476
Alright, we've done a lot today,
and I'm excited to share the project

90
00:06:49,510 --> 00:06:52,212
and the cool ideas I have with Connor.

91
00:06:53,780 --> 00:06:57,818
I'll share it with Connor by adding it
to our shared iCloud folder.

92
00:06:57,851 --> 00:07:01,955
But first, let's give it
a better filename than My App.

93
00:07:08,795 --> 00:07:12,566
Now, I'll drag it to the shared
iCloud Folder.

94
00:07:15,335 --> 00:07:20,007
Now that I'm done, I'm going to hand it
over to Connor to finish the app.

95
00:07:20,040 --> 00:07:23,844
Thanks Collett.
I'm going to pick things up on iPad.

96
00:07:23,877 --> 00:07:26,980
Since we're sharing our project
via an iCloud Shared Folder,

97
00:07:27,014 --> 00:07:29,583
it doesn't show up
in the main list of projects.

98
00:07:29,616 --> 00:07:32,119
But if I tap on "Locations,"

99
00:07:32,152 --> 00:07:34,888
I can get access to projects
from elsewhere in iCloud,

100
00:07:34,922 --> 00:07:37,758
or even from
third-party document providers.

101
00:07:37,791 --> 00:07:39,760
I'm already in our Shared Folder,

102
00:07:39,793 --> 00:07:42,829
so I'll tap on Tea Time
to open the project.

103
00:07:42,863 --> 00:07:47,067
Any changes I make will automatically
be reflected in the shared project.

104
00:07:47,100 --> 00:07:49,803
It looks like Collett
is such a good engineer

105
00:07:49,837 --> 00:07:53,473
that just uploading the project to iCloud
added some extra features!

106
00:07:53,507 --> 00:07:57,578
She implemented a TabView here
so we don't just have a list of teas

107
00:07:57,611 --> 00:07:59,847
but also an Assistant.

108
00:07:59,880 --> 00:08:01,782
If I tap on the Assistant tab,

109
00:08:01,815 --> 00:08:04,952
it's a little bit bare-bones,
but it does the job.

110
00:08:04,985 --> 00:08:08,555
I can ask for a recommendation,
and it'll give me a tea I should drink.

111
00:08:09,957 --> 00:08:12,726
Seems today I should have
the Jasmine Green.

112
00:08:13,694 --> 00:08:17,064
Now I know Collett was working on
a fun new way to pick teas

113
00:08:17,097 --> 00:08:18,966
to give this a little extra pizzaz.

114
00:08:18,999 --> 00:08:21,134
Let's open the sidebar to try to find it.

115
00:08:23,403 --> 00:08:26,874
TeaWheelView seems promising,
so let's tap on that to open it.

116
00:08:28,408 --> 00:08:31,945
We've got a View
which takes a collection of data.

117
00:08:31,979 --> 00:08:34,982
Let's add a view preview
so we can try TeaWheelView out

118
00:08:35,015 --> 00:08:37,584
before it's a part of the main app.

119
00:08:37,618 --> 00:08:39,520
I'll scroll to the bottom of the file...

120
00:08:42,856 --> 00:08:45,325
And I'll begin typing "preview provider."

121
00:08:47,060 --> 00:08:50,531
I'll accept the code completion
suggestion by pressing the Return key,

122
00:08:50,564 --> 00:08:54,234
and I'll name it TeaWheelView_Previews.

123
00:08:56,436 --> 00:08:59,506
Page dots have now appeared
at the bottom of the preview area,

124
00:08:59,540 --> 00:09:03,544
which tells me that Swift Playgrounds
recognizes my preview provider.

125
00:09:03,577 --> 00:09:07,681
If I tap on the right chevron
underneath the app preview…

126
00:09:07,714 --> 00:09:11,618
then I can use my view preview
instead of the app preview.

127
00:09:11,652 --> 00:09:13,620
Right now it just says "Hello, world!"

128
00:09:13,654 --> 00:09:16,657
so let's add in some code
to create a TeaWheelView.

129
00:09:16,690 --> 00:09:20,694
First I'll add an array with a few items
in it as a static property

130
00:09:20,727 --> 00:09:23,030
so it can be used by my preview.

131
00:09:29,436 --> 00:09:31,972
I'll leave the insertion point
between the two square brackets

132
00:09:32,005 --> 00:09:35,976
and then I'll drag on the closing bracket
to create placeholders for a few items.

133
00:09:40,447 --> 00:09:44,551
Next, I'll replace the placeholders with
a few strings that'll serve as our items.

134
00:09:52,626 --> 00:09:56,029
Now that we've got a few items,
let's add in the TeaWheelView.

135
00:09:56,063 --> 00:09:57,865
I'll select the Hello, world! example

136
00:09:57,898 --> 00:10:01,001
and replace it with a TeaWheelView
that displays my items.

137
00:10:10,811 --> 00:10:12,813
I'll also add in a little bit of padding.

138
00:10:16,049 --> 00:10:19,019
Great! Now our view preview
is showing a wheel,

139
00:10:19,052 --> 00:10:20,888
and what a beautiful wheel it is!

140
00:10:20,921 --> 00:10:26,527
I can spin it, and it'll pick different
items based on where it lands.

141
00:10:26,560 --> 00:10:30,631
Let's go back to the assistant tab
and add this wheel in.

142
00:10:30,664 --> 00:10:34,768
I'll use the sidebar to open
the AssistantTab Swift file,

143
00:10:34,801 --> 00:10:38,238
and I'm going to delete the Button and
replace it with a TeaWheelView instead.

144
00:10:48,749 --> 00:10:51,451
TeaWheelView
optionally takes an action closure

145
00:10:51,485 --> 00:10:53,720
which is called
when the wheel stops spinning.

146
00:10:55,622 --> 00:11:00,494
I'll use it to set last picked tea
to the selected tea,

147
00:11:00,527 --> 00:11:05,399
and I'll set show pick alert to true
so SwiftUI knows to show the alert.

148
00:11:08,869 --> 00:11:12,339
Okay, great! We've got our wheel in here,
so now let's try it!

149
00:11:12,372 --> 00:11:17,411
I'll swipe to spin it...
and it told me to drink Byte's Oolong.

150
00:11:17,444 --> 00:11:19,546
I'll swipe it again...

151
00:11:22,015 --> 00:11:24,251
And it's still Byte's Oolong.

152
00:11:24,284 --> 00:11:25,919
One more time.

153
00:11:28,856 --> 00:11:31,391
Hmm. Something seems wrong.

154
00:11:31,425 --> 00:11:33,627
Even though it's landing on
different spots on the wheel,

155
00:11:33,660 --> 00:11:36,830
it's always telling me
to drink the Byte's Oolong.

156
00:11:36,864 --> 00:11:40,634
While that is a good tea,
I'd like a little bit of variety.

157
00:11:40,667 --> 00:11:43,370
Let's switch back to the wheel view
and try to figure out what's up.

158
00:11:45,405 --> 00:11:47,341
It's not obvious from this
what's going wrong,

159
00:11:47,374 --> 00:11:50,410
since the wheel does spin
and land on different spots.

160
00:11:50,444 --> 00:11:52,880
Let's add a print statement
into our view preview

161
00:11:52,913 --> 00:11:55,048
to check if the preview is broken too.

162
00:12:02,656 --> 00:12:04,458
Now when I spin the wheel...

163
00:12:05,993 --> 00:12:09,463
A console message pops up
at the bottom left of the source editor.

164
00:12:09,496 --> 00:12:11,765
Item one...

165
00:12:11,798 --> 00:12:15,035
item one…item one.

166
00:12:15,068 --> 00:12:18,338
Aha! Each spin gives us item one,

167
00:12:18,372 --> 00:12:21,175
which suggests something
isn't quite hooked up right!

168
00:12:21,208 --> 00:12:23,877
Since it's giving me
the first one every time,

169
00:12:23,911 --> 00:12:28,215
I'm going to use project-wide find
to search for first.

170
00:12:28,248 --> 00:12:30,484
I'll tap in the search field
at the top of the sidebar

171
00:12:30,517 --> 00:12:33,120
on the left hand side of the screen

172
00:12:33,153 --> 00:12:36,557
and then type "first" and press Return.

173
00:12:38,458 --> 00:12:41,428
That result seems promising,
so I'll tap on it.

174
00:12:42,896 --> 00:12:45,933
Ah, it looks like Collett left
some debugging code in here

175
00:12:45,966 --> 00:12:50,103
that made it return the first item
every time instead of the right result.

176
00:12:50,137 --> 00:12:52,940
Let's fix that up real quick
and then give it another spin.

177
00:13:00,047 --> 00:13:01,715
Item two...

178
00:13:01,748 --> 00:13:03,217
item four.

179
00:13:03,250 --> 00:13:05,652
Great! It seems to be working now.

180
00:13:05,686 --> 00:13:07,788
If we switch back to our app preview

181
00:13:07,821 --> 00:13:10,524
by tapping on the left chevron
underneath the preview,

182
00:13:10,557 --> 00:13:13,260
we can try it out in the real app.

183
00:13:13,293 --> 00:13:18,198
I'll spin the wheel, and it's telling me
to have the English Breakfast.

184
00:13:18,232 --> 00:13:20,701
So now we've got a working assistant.

185
00:13:20,734 --> 00:13:24,571
Awesome! Just to confirm
the app works well at all sizes,

186
00:13:24,605 --> 00:13:28,008
I can run it in its own window
by pressing the Run button

187
00:13:28,041 --> 00:13:29,943
in the upper left of the screen.

188
00:13:33,413 --> 00:13:35,616
Okay, seems like everything is here.

189
00:13:35,649 --> 00:13:38,685
I've got my list of teas,
and I've got the assistant here

190
00:13:38,719 --> 00:13:41,255
with the wheel and everything.

191
00:13:41,288 --> 00:13:43,524
I can go back to the project
in Swift Playgrounds

192
00:13:43,557 --> 00:13:46,260
by tapping on the little Swift icon
in the status bar,

193
00:13:46,293 --> 00:13:50,130
and then by selecting the "Show Project"
button in the sheet that pops up.

194
00:13:52,299 --> 00:13:56,103
I'm ready to test this app myself
and with my friends and family.

195
00:13:56,136 --> 00:13:58,405
Swift Playgrounds makes it easy to test

196
00:13:58,438 --> 00:14:00,340
because you can submit
directly to TestFlight

197
00:14:00,374 --> 00:14:02,009
from within Swift Playgrounds!

198
00:14:02,042 --> 00:14:07,481
If I bring up the app settings sheet
and scroll to the bottom,

199
00:14:07,514 --> 00:14:10,250
there's an
"Upload to App Store Connect" button.

200
00:14:10,284 --> 00:14:14,121
If I tap on that, Swift Playgrounds
does all of the hard work

201
00:14:14,154 --> 00:14:17,658
of creating an app record and
uploading my app to App Store Connect

202
00:14:17,691 --> 00:14:21,495
so I can distribute it on TestFlight
and eventually the App Store.

203
00:14:27,935 --> 00:14:31,405
Now that my app is uploaded,
I can go to App Store Connect

204
00:14:31,438 --> 00:14:33,740
and submit it for Beta App Review.

205
00:14:33,774 --> 00:14:36,844
After waiting a bit,
we can go over to the TestFlight app

206
00:14:36,877 --> 00:14:39,980
and install it from there, even on iPhone!

207
00:14:42,549 --> 00:14:45,118
I'll tap "Install" to install Tea Time.

208
00:14:46,486 --> 00:14:50,290
Now that it's installed,
I'll tap "Open" to open it.

209
00:14:50,324 --> 00:14:52,826
I'll tap to the test notes,

210
00:14:52,860 --> 00:14:55,596
as well as these instructions
on how to provide feedback.

211
00:14:57,030 --> 00:15:00,534
And there you have it--
our app is running on iPhone.

212
00:15:00,567 --> 00:15:02,603
What tea should I have today?

213
00:15:04,771 --> 00:15:07,374
Looks like I'm having
the Matt P's Tea Party.

214
00:15:07,407 --> 00:15:10,944
Today, Collett and I showed you
how you can use Swift Playgrounds

215
00:15:10,978 --> 00:15:13,480
on your Mac and iPad to build apps.

216
00:15:13,514 --> 00:15:17,217
We demonstrated using the library
and code completion to insert new code,

217
00:15:17,251 --> 00:15:20,487
we shared our project
via iCloud Shared Folders,

218
00:15:20,521 --> 00:15:24,758
and we used view previews and the
console to debug an issue with our code.

219
00:15:24,791 --> 00:15:28,328
We even submitted an app to TestFlight,
right from iPad!

220
00:15:28,362 --> 00:15:30,697
Hopefully you've learned
a thing or two along the way,

221
00:15:30,731 --> 00:15:33,667
and we can't wait to see what
you build with Swift Playgrounds.

222
00:15:33,700 --> 00:15:37,938
Thank you for watching,
and enjoy the rest of WWDC!

