1
00:00:00,067 --> 00:00:03,170
♪ instrumental hip hop music ♪

2
00:00:03,170 --> 00:00:09,676
♪

3
00:00:09,676 --> 00:00:11,378
Hi, I'm Sarah McClanahan,

4
00:00:11,378 --> 00:00:14,882
and I'm a designer
on the Evangelism team.

5
00:00:14,882 --> 00:00:18,085
Today, I'm going to share
practical tips, guidance,

6
00:00:18,085 --> 00:00:21,021
and best practices
for how to improve navigation

7
00:00:21,021 --> 00:00:22,890
on your iOS apps.

8
00:00:22,890 --> 00:00:26,827
When apps have great navigation,
it's often unnoticed

9
00:00:26,827 --> 00:00:31,064
because people are able to focus
on the content and experience.

10
00:00:31,064 --> 00:00:33,734
Navigation involves
teaching people about

11
00:00:33,734 --> 00:00:36,270
how things behave,

12
00:00:36,270 --> 00:00:38,238
where things belong,

13
00:00:38,238 --> 00:00:40,674
and how things work in your app.

14
00:00:40,674 --> 00:00:43,543
The goal of navigation
is to provide enough

15
00:00:43,543 --> 00:00:46,980
of a foundation of familiarity
so that people can easily

16
00:00:46,980 --> 00:00:50,384
discover your content
and interact with your app.

17
00:00:50,384 --> 00:00:53,587
When navigation deviates
too far from our expectations

18
00:00:53,587 --> 00:00:57,291
or doesn't match our natural
understanding of the world,

19
00:00:57,291 --> 00:00:59,760
we often feel frustrated
and sense that an app

20
00:00:59,760 --> 00:01:01,228
is hard to use.

21
00:01:01,228 --> 00:01:05,198
But getting navigation right
requires focus and intention.

22
00:01:05,198 --> 00:01:08,502
And although the concepts
I'm covering today are not new,

23
00:01:08,502 --> 00:01:10,370
they are fundamental,

24
00:01:10,370 --> 00:01:14,074
and they're essential to having
a successful app on iOS.

25
00:01:14,074 --> 00:01:16,710
So whether you're new to
the platform or looking for ways

26
00:01:16,710 --> 00:01:20,347
to improve your app experience,
then this session is for you.

27
00:01:20,347 --> 00:01:23,016
Today, we're going
to discuss tab bars,

28
00:01:23,016 --> 00:01:27,220
a common form
of navigation on iOS.

29
00:01:27,220 --> 00:01:30,691
Then we'll discuss interactions
for moving between screens

30
00:01:30,691 --> 00:01:34,127
by exploring
hierarchical navigation

31
00:01:34,127 --> 00:01:36,496
and modal presentations.

32
00:01:36,496 --> 00:01:39,466
As you can see, we'll only
be covering a subset

33
00:01:39,466 --> 00:01:42,369
of the large topic area
of navigation.

34
00:01:42,369 --> 00:01:44,905
But we'll start here
because these core patterns

35
00:01:44,905 --> 00:01:49,042
represent a foundation
which we often see misused,

36
00:01:49,042 --> 00:01:51,979
and understanding them
can set you up for success

37
00:01:51,979 --> 00:01:56,016
as your app evolves
or supports other devices.

38
00:01:56,016 --> 00:01:58,485
Let's get started with tab bars.

39
00:01:58,485 --> 00:02:01,121
Tab bars are a global
navigation control

40
00:02:01,121 --> 00:02:02,956
that sit at the bottom
of the screen,

41
00:02:02,956 --> 00:02:06,793
categorizing an app's content
into different sections.

42
00:02:06,793 --> 00:02:08,895
Think of tabs
as a control to reflect

43
00:02:08,895 --> 00:02:12,199
your information hierarchy.

44
00:02:12,199 --> 00:02:14,267
The UI control itself
should translate

45
00:02:14,267 --> 00:02:17,337
an already-clear grouping
and establish relationship

46
00:02:17,337 --> 00:02:20,407
between different areas
of your app.

47
00:02:20,407 --> 00:02:23,543
So the Tab bar represents
your top-level content,

48
00:02:23,543 --> 00:02:26,446
which should be the top
of your app's hierarchy.

49
00:02:26,446 --> 00:02:29,783
Each tab communicates
your app's menu of options,

50
00:02:29,783 --> 00:02:33,720
and these sections should be
meaningful and descriptive.

51
00:02:33,720 --> 00:02:36,156
This likely sounds
really straightforward,

52
00:02:36,156 --> 00:02:39,159
but in practice
and for various reasons,

53
00:02:39,159 --> 00:02:42,996
it can be easy to lose sight of
in your app.

54
00:02:42,996 --> 00:02:45,098
Let's look at
some good examples.

55
00:02:45,098 --> 00:02:47,968
Without seeing any
of the content of these apps,

56
00:02:47,968 --> 00:02:51,138
notice how the tabs
hint at functionality.

57
00:02:51,138 --> 00:02:53,874
They tell a story about
what the app can do

58
00:02:53,874 --> 00:02:56,843
just by displaying
concise labels.

59
00:02:56,843 --> 00:03:00,881
Listen Now and Radio indicate
that this is a content-based app

60
00:03:00,881 --> 00:03:04,084
with auditory media.

61
00:03:04,084 --> 00:03:08,789
For this app, Library and Albums
hint at a content-rich app

62
00:03:08,789 --> 00:03:13,927
with a For You tab that signals
strong personalization.

63
00:03:13,927 --> 00:03:17,597
This app has tabs that are so
focused that their functionality

64
00:03:17,597 --> 00:03:20,467
is self-evident and tell me
exactly what I can do

65
00:03:20,467 --> 00:03:23,403
in those content areas.

66
00:03:23,403 --> 00:03:26,373
What we see often
is that the first tab of apps

67
00:03:26,373 --> 00:03:29,409
tend to be loaded
heaviest with features.

68
00:03:29,409 --> 00:03:31,311
Try to create balance
in your interface

69
00:03:31,311 --> 00:03:34,381
by distributing functionality
throughout your tabs.

70
00:03:34,381 --> 00:03:36,149
Let's go through this
with an example

71
00:03:36,149 --> 00:03:39,486
to explore how tabs can
oftentimes be misguiding

72
00:03:39,486 --> 00:03:41,822
or confusing.

73
00:03:41,822 --> 00:03:45,058
Imagine I have a fake app
that lets people discover

74
00:03:45,058 --> 00:03:48,695
curated routes in cities
just like a local cyclist.

75
00:03:48,695 --> 00:03:51,531
And if you're traveling,
moving to a new city,

76
00:03:51,531 --> 00:03:54,334
or just getting into the sport,
then there's an easy way

77
00:03:54,334 --> 00:03:57,571
to save routes
and create itineraries.

78
00:03:57,571 --> 00:03:58,939
Here it is.

79
00:03:58,939 --> 00:04:01,708
Since this app is about
finding routes to bike,

80
00:04:01,708 --> 00:04:07,247
the first thing you'll see is a
map view with filters for rides.

81
00:04:07,247 --> 00:04:10,183
Then, there's a section
with an upcoming itinerary

82
00:04:10,183 --> 00:04:12,853
that I can interact with
by editing the content

83
00:04:12,853 --> 00:04:15,822
or inviting friends.

84
00:04:15,822 --> 00:04:17,557
And then there are routes
grouped together

85
00:04:17,557 --> 00:04:19,092
in collection views.

86
00:04:19,092 --> 00:04:22,762
It can be tempting to add all
your functionality into one tab

87
00:04:22,762 --> 00:04:26,366
just like this, because
it's available at a glance.

88
00:04:26,366 --> 00:04:28,668
Or maybe your app
has evolved over time

89
00:04:28,668 --> 00:04:31,204
and you've lost sight of
grouping your functionality

90
00:04:31,204 --> 00:04:33,573
into sections on the tab bar.

91
00:04:33,573 --> 00:04:38,145
Well today, I invite you
to reconsider this in your app.

92
00:04:38,145 --> 00:04:41,148
In this design,
people may have to scroll a lot

93
00:04:41,148 --> 00:04:43,817
for what they're looking for,
and it takes effort

94
00:04:43,817 --> 00:04:47,687
to mentally parse unrelated,
disparate features.

95
00:04:47,687 --> 00:04:50,590
Filtering a map view
and editing an itinerary

96
00:04:50,590 --> 00:04:54,060
are two very different
features -- and mindsets --

97
00:04:54,060 --> 00:04:56,863
when someone opens
this app to use it.

98
00:04:56,863 --> 00:04:59,966
Be cautious of combining your
app's functionality in this way

99
00:04:59,966 --> 00:05:02,169
or doing it out of fear
that people won't interact

100
00:05:02,169 --> 00:05:03,904
with the rest of your app.

101
00:05:03,904 --> 00:05:06,973
It's much easier to understand
an app's functionality

102
00:05:06,973 --> 00:05:11,011
when it's well organized
and clearly communicated.

103
00:05:11,011 --> 00:05:15,015
One way to do this is to take
a step back and ask yourself,

104
00:05:15,015 --> 00:05:17,417
Why do people use your app?

105
00:05:17,417 --> 00:05:20,353
Remember, great apps
have focused solutions.

106
00:05:20,353 --> 00:05:22,956
They aim to do
a few things really well,

107
00:05:22,956 --> 00:05:25,892
opposed to trying to solve
everything in one app.

108
00:05:25,892 --> 00:05:28,962
Let's reconsider the tab bar
on this cycling app.

109
00:05:28,962 --> 00:05:30,997
People use this app
to find routes

110
00:05:30,997 --> 00:05:34,034
in the places they care about,
that are right for their level.

111
00:05:34,034 --> 00:05:36,403
This is one of the most
important views in the app,

112
00:05:36,403 --> 00:05:39,973
as it represents the content
that people care about the most.

113
00:05:39,973 --> 00:05:43,210
So let's take a step back
and reassess the tab bar

114
00:05:43,210 --> 00:05:45,845
to understand how a route
may be used

115
00:05:45,845 --> 00:05:48,415
and how that content can be
represented in the app

116
00:05:48,415 --> 00:05:51,885
in a way that feels
more balanced.

117
00:05:51,885 --> 00:05:54,421
This is a route detail.

118
00:05:54,421 --> 00:05:56,590
Someone would expect
to see an overview,

119
00:05:56,590 --> 00:06:00,026
like distance
and elevation gain,

120
00:06:00,026 --> 00:06:02,729
as well as access to the map
and road surfaces

121
00:06:02,729 --> 00:06:06,099
throughout the route,
like sidewalks or roads.

122
00:06:06,099 --> 00:06:09,836
Seeing specific callouts
for steep climbs or descents

123
00:06:09,836 --> 00:06:13,473
could help me understand if this
route is right for my level.

124
00:06:13,473 --> 00:06:15,675
And finally, food stops
along the route

125
00:06:15,675 --> 00:06:17,844
are great for planning.

126
00:06:17,844 --> 00:06:22,549
OK. So, how do people make sense
of this core functionality

127
00:06:22,549 --> 00:06:24,484
of viewing routes?

128
00:06:24,484 --> 00:06:29,723
Well, a route is only helpful
if you know where it is located.

129
00:06:29,723 --> 00:06:32,292
Routes should likely
have a relationship

130
00:06:32,292 --> 00:06:35,929
with the city
they're associated with.

131
00:06:35,929 --> 00:06:38,265
That may lead me
to have a city overview

132
00:06:38,265 --> 00:06:41,768
that tells me helpful
information about cycling there.

133
00:06:41,768 --> 00:06:43,203
And if you scroll down the view,

134
00:06:43,203 --> 00:06:47,007
you'd have that list of all
the routes you can ride.

135
00:06:47,007 --> 00:06:50,944
But this app also supports
routes in different cities,

136
00:06:50,944 --> 00:06:56,316
which means each city should go
back to a list of all places.

137
00:06:56,316 --> 00:06:59,185
Places can become the top level
of the hierarchy

138
00:06:59,185 --> 00:07:01,454
when navigating to routes.

139
00:07:01,454 --> 00:07:04,791
As you can see, there's a lot of
content in this workflow alone,

140
00:07:04,791 --> 00:07:09,162
and it's really key to the value
that this app provides.

141
00:07:09,162 --> 00:07:12,232
This is great justification
for a tab-bar item.

142
00:07:12,232 --> 00:07:14,901
Notice now how
it's self-contained.

143
00:07:14,901 --> 00:07:17,570
It wouldn't make sense
to put anything in this tab

144
00:07:17,570 --> 00:07:20,674
that isn't about a place.

145
00:07:20,674 --> 00:07:24,878
Part of designing great tab
bars is organizing your content.

146
00:07:24,878 --> 00:07:28,081
Look for these natural ways
to address relationships.

147
00:07:28,081 --> 00:07:30,850
I can go through this exercise
with other key features

148
00:07:30,850 --> 00:07:34,321
in the app, like itineraries,
and I can ask myself,

149
00:07:34,321 --> 00:07:35,889
What is an itinerary?

150
00:07:35,889 --> 00:07:37,524
How will people use it?

151
00:07:37,524 --> 00:07:41,127
And where can I dedicate
a place for them in my app?

152
00:07:41,127 --> 00:07:44,564
Even if people are unfamiliar
with the content of your app,

153
00:07:44,564 --> 00:07:46,999
and perhaps
especially if they are,

154
00:07:46,999 --> 00:07:49,302
it's best to communicate
your functionality

155
00:07:49,302 --> 00:07:51,004
and content clearly,

156
00:07:51,004 --> 00:07:53,206
assess where it belongs
in your hierarchy,

157
00:07:53,206 --> 00:07:55,408
and how people engage with it.

158
00:07:55,408 --> 00:07:58,678
Then, this app can improve
from having all of the features

159
00:07:58,678 --> 00:08:02,349
crammed into the first tab,
to a much clearer

160
00:08:02,349 --> 00:08:05,385
and straightforward form
of navigation.

161
00:08:05,385 --> 00:08:09,155
Now, the core functionality
is more balanced on the tab bar

162
00:08:09,155 --> 00:08:11,891
because these sections
hold up on their own.

163
00:08:11,891 --> 00:08:12,826
They are related,

164
00:08:12,826 --> 00:08:16,863
yet distinctly different
content areas and workflows.

165
00:08:16,863 --> 00:08:21,000
This makes navigation
so much more intuitive.

166
00:08:21,000 --> 00:08:24,237
Next, I want to discuss
a slightly related topic,

167
00:08:24,237 --> 00:08:26,573
but we see it
expressed differently.

168
00:08:26,573 --> 00:08:28,675
Avoid duplicating
your functionality

169
00:08:28,675 --> 00:08:32,746
and consolidating it
into a single tab.

170
00:08:32,746 --> 00:08:34,814
In content-rich apps
like this one,

171
00:08:34,814 --> 00:08:38,451
a tab titled Home, may seem
like an attractive catchall

172
00:08:38,451 --> 00:08:40,954
to showcase functionality
throughout an app

173
00:08:40,954 --> 00:08:43,757
in a single place.

174
00:08:43,757 --> 00:08:46,860
For example, maybe it seems like
people aren't engaging

175
00:08:46,860 --> 00:08:49,763
with the Itineraries feature,
and you may be worried

176
00:08:49,763 --> 00:08:52,766
it's because they don't know
the functionality exists.

177
00:08:54,434 --> 00:08:57,303
So it may seem logical
to encourage engagement

178
00:08:57,303 --> 00:09:00,740
by repeating actions in
the tab bar for more visibility,

179
00:09:00,740 --> 00:09:04,811
such as New Itinerary
on the Places cards

180
00:09:04,811 --> 00:09:07,547
and maybe creating a version
of an itinerary view

181
00:09:07,547 --> 00:09:09,749
that has the features
front and center,

182
00:09:09,749 --> 00:09:12,485
such as inviting friends;

183
00:09:12,485 --> 00:09:17,323
or listing the stops
with an easy action to add.

184
00:09:17,323 --> 00:09:19,325
It might be tempting to do
this out of fear

185
00:09:19,325 --> 00:09:23,062
that some functionality won't be
discovered throughout your app.

186
00:09:23,062 --> 00:09:27,233
And to clarify, this isn't
about duplicating content.

187
00:09:27,233 --> 00:09:29,302
In many scenarios,
it can make sense

188
00:09:29,302 --> 00:09:33,406
to have similar types of
content, like songs or photos,

189
00:09:33,406 --> 00:09:36,976
exist on many tabs, but organized
in a different way.

190
00:09:36,976 --> 00:09:38,711
But when it's your app's
functionality,

191
00:09:38,711 --> 00:09:41,848
which are the actions people
can take to achieve things,

192
00:09:41,848 --> 00:09:45,785
the redundancy
creates confusion.

193
00:09:45,785 --> 00:09:49,856
And in practice, Home tabs
disrupt an app's hierarchy.

194
00:09:49,856 --> 00:09:54,027
If functionality from different
tabs or areas throughout an app

195
00:09:54,027 --> 00:09:57,464
are duplicated and added
to a single screen

196
00:09:57,464 --> 00:09:59,332
without sufficient context,

197
00:09:59,332 --> 00:10:02,202
it creates redundancy
and confusion.

198
00:10:02,202 --> 00:10:04,771
Home becomes the tab
where every feature

199
00:10:04,771 --> 00:10:07,474
is fighting for real estate,
because the tab

200
00:10:07,474 --> 00:10:10,610
is trying to solve a problem
of discoverability.

201
00:10:10,610 --> 00:10:13,446
But in reality, it creates
a dissociation

202
00:10:13,446 --> 00:10:16,883
between understanding content
and how to act on it.

203
00:10:16,883 --> 00:10:18,017
If this is your app,

204
00:10:18,017 --> 00:10:20,687
consider removing
the Home tab altogether.

205
00:10:20,687 --> 00:10:23,122
The redundancy of features
prohibits people

206
00:10:23,122 --> 00:10:26,960
from understanding where
things belong and why.

207
00:10:26,960 --> 00:10:28,628
Another concern about Home tabs

208
00:10:28,628 --> 00:10:30,597
is that the repeated
functionality

209
00:10:30,597 --> 00:10:33,433
may cause someone to tab-jump
because the action exists

210
00:10:33,433 --> 00:10:35,835
in another tab too.

211
00:10:35,835 --> 00:10:39,005
Transporting someone to another
tab by tapping on an element

212
00:10:39,005 --> 00:10:42,242
within a view is jarring
and disorienting.

213
00:10:42,242 --> 00:10:46,746
Never force someone
to change tabs automatically.

214
00:10:46,746 --> 00:10:50,283
Next, one of the biggest selling
points of a tabbed navigation

215
00:10:50,283 --> 00:10:53,386
is access to multiple
top-level hierarchies,

216
00:10:53,386 --> 00:10:55,655
so avoid hiding
or removing the tab bar

217
00:10:55,655 --> 00:10:58,658
throughout your navigation.

218
00:10:58,658 --> 00:11:01,961
Persistent access to the tab
bar gives someone the ability

219
00:11:01,961 --> 00:11:03,963
to toggle between
different levels

220
00:11:03,963 --> 00:11:05,732
of your information hierarchy

221
00:11:05,732 --> 00:11:08,167
while maintaining context
in each.

222
00:11:08,167 --> 00:11:11,437
For example, I can look at a new
route I'm considering riding

223
00:11:11,437 --> 00:11:15,508
in the Places tab

224
00:11:15,508 --> 00:11:17,510
and compare it to an itinerary
I'm building

225
00:11:17,510 --> 00:11:20,613
in the Itinerary tab

226
00:11:20,613 --> 00:11:23,383
with routes I've already saved

227
00:11:23,383 --> 00:11:26,686
that are two levels deep
into my hierarchy.

228
00:11:26,686 --> 00:11:30,189
This only works well
if tabs have defined purpose

229
00:11:30,189 --> 00:11:34,727
and represent specific
categories of content.

230
00:11:34,727 --> 00:11:36,996
Finally, all of the work
you invest

231
00:11:36,996 --> 00:11:39,198
in a solid information
architecture

232
00:11:39,198 --> 00:11:42,235
should be honored
with clear and concise labels.

233
00:11:42,235 --> 00:11:43,670
Let's look at
an Apple Design winner

234
00:11:43,670 --> 00:11:46,272
from the Interaction category
this year.

235
00:11:46,272 --> 00:11:48,207
This is the Slopes app.

236
00:11:48,207 --> 00:11:50,643
I think it's so great
that when you launch the app,

237
00:11:50,643 --> 00:11:53,012
you land on the middle tab,
which is your Logbook

238
00:11:53,012 --> 00:11:55,915
with your season stats.

239
00:11:55,915 --> 00:11:57,817
The other tabs are specific.

240
00:11:57,817 --> 00:12:01,254
They're easy to understand,
and I have an immediate sense

241
00:12:01,254 --> 00:12:03,990
of what the app does
and how to use it.

242
00:12:03,990 --> 00:12:07,260
At a glance, this is because
the labels are representative

243
00:12:07,260 --> 00:12:08,795
of the content.

244
00:12:08,795 --> 00:12:11,097
Record a ski day,
browse resorts,

245
00:12:11,097 --> 00:12:13,967
compare stats with friends;
they all represent

246
00:12:13,967 --> 00:12:18,438
core functionality
with a succinct label.

247
00:12:18,438 --> 00:12:21,674
Tab bars are a powerful control
for navigation.

248
00:12:21,674 --> 00:12:24,310
Let's recap everything
we've learned.

249
00:12:24,310 --> 00:12:28,748
Use tabs to reflect
your information hierarchy.

250
00:12:28,748 --> 00:12:31,184
Organize your features
in a way that balances them

251
00:12:31,184 --> 00:12:33,319
across your tabs.

252
00:12:33,319 --> 00:12:38,491
Avoid duplicating features and
merging them into a single tab.

253
00:12:38,491 --> 00:12:42,395
Always keep the tab bar
persistent throughout your app.

254
00:12:42,395 --> 00:12:46,933
Finally, use clear and concise
labels for each tab.

255
00:12:46,933 --> 00:12:49,969
All right,
let's dive into interactions.

256
00:12:49,969 --> 00:12:52,972
When it comes to navigating
between screens of an app,

257
00:12:52,972 --> 00:12:55,475
there are two very common
forms of transition:

258
00:12:55,475 --> 00:12:57,543
you can navigate through
an app's hierarchy

259
00:12:57,543 --> 00:13:00,246
with a term we sometimes
refer to as a "push,"

260
00:13:00,246 --> 00:13:02,715
such as pushing
into more detail.

261
00:13:02,715 --> 00:13:06,452
Or, you can transition
with a modal presentation.

262
00:13:06,452 --> 00:13:09,055
These are nonintrusive
and familiar ways

263
00:13:09,055 --> 00:13:12,125
to traverse an app's hierarchy
and transition between views.

264
00:13:12,125 --> 00:13:14,160
Let me show you both.

265
00:13:14,160 --> 00:13:17,096
When you transition
through hierarchical navigation,

266
00:13:17,096 --> 00:13:19,332
a view pushes,
which means a person

267
00:13:19,332 --> 00:13:21,834
has tapped on an element
and the next screen

268
00:13:21,834 --> 00:13:24,804
slides into view
from right to left.

269
00:13:24,804 --> 00:13:27,640
A push transition
is an expected default

270
00:13:27,640 --> 00:13:30,810
when drilling further
into an app's hierarchy.

271
00:13:30,810 --> 00:13:33,279
Pushing is great
because it directly reflects

272
00:13:33,279 --> 00:13:35,081
your information hierarchy.

273
00:13:35,081 --> 00:13:38,284
It's a literal representation
of moving through content

274
00:13:38,284 --> 00:13:41,421
from a high level
and drilling into more detail.

275
00:13:41,421 --> 00:13:43,790
On the other hand,
a modal is reserved

276
00:13:43,790 --> 00:13:46,526
for a self-contained task
in an interface.

277
00:13:46,526 --> 00:13:49,462
Modals work great for workflows
that are independent,

278
00:13:49,462 --> 00:13:52,331
meaning someone has enough
information in that view

279
00:13:52,331 --> 00:13:55,168
to make decisions
and complete a task.

280
00:13:55,168 --> 00:13:57,937
Modals are unique
because they create focus

281
00:13:57,937 --> 00:14:01,774
by separating people
from the information hierarchy.

282
00:14:01,774 --> 00:14:04,377
For example,
creating a new itinerary

283
00:14:04,377 --> 00:14:07,714
is presented in a modal view.

284
00:14:07,714 --> 00:14:11,984
Someone can make selections
or input data such as a title,

285
00:14:11,984 --> 00:14:16,255
a city, a range of dates,
and even invite friends.

286
00:14:16,255 --> 00:14:18,858
This is suitable for a modal
because the UI is intended

287
00:14:18,858 --> 00:14:22,428
to be edited and completed
before dismissing the view

288
00:14:22,428 --> 00:14:24,764
or navigating around
the rest of the app.

289
00:14:24,764 --> 00:14:28,301
Since it's all user input,
the rest of the app isn't needed

290
00:14:28,301 --> 00:14:31,037
as a reference
to complete the fields.

291
00:14:31,037 --> 00:14:33,372
Now that you're familiar
with these interactions,

292
00:14:33,372 --> 00:14:35,274
let's dive deep on both.

293
00:14:35,274 --> 00:14:37,810
Starting
with hierarchical navigation.

294
00:14:37,810 --> 00:14:40,480
Here are a couple
of guidelines to consider.

295
00:14:40,480 --> 00:14:42,648
Use a push transition
to navigate between

296
00:14:42,648 --> 00:14:46,119
different levels
of your app's hierarchy.

297
00:14:46,119 --> 00:14:49,689
Hierarchical navigation
reinforces the relationship

298
00:14:49,689 --> 00:14:52,825
between top-level
and secondary content.

299
00:14:52,825 --> 00:14:55,862
The top-level content
is higher in the hierarchy.

300
00:14:55,862 --> 00:14:59,532
As I want more detail,
I access the supplemental views

301
00:14:59,532 --> 00:15:03,002
by drilling into the hierarchy.

302
00:15:03,002 --> 00:15:05,938
As I make selections,
I narrow my options

303
00:15:05,938 --> 00:15:09,575
and eliminate access
to the rest of the hierarchy.

304
00:15:09,575 --> 00:15:11,577
This is how it should be.

305
00:15:11,577 --> 00:15:14,080
Content should become
increasingly more specific

306
00:15:14,080 --> 00:15:16,983
and there should be
fewer options as I push in

307
00:15:16,983 --> 00:15:20,186
and drill into detail.

308
00:15:20,186 --> 00:15:21,788
When using a push transition,

309
00:15:21,788 --> 00:15:23,589
it's really important
that the tab bar

310
00:15:23,589 --> 00:15:27,860
remains persistently anchored
to the bottom of the screen.

311
00:15:27,860 --> 00:15:29,595
As we talked about before,

312
00:15:29,595 --> 00:15:31,230
this is one of the biggest
selling points

313
00:15:31,230 --> 00:15:32,799
of a tabbed navigation.

314
00:15:32,799 --> 00:15:34,133
It's consistent.

315
00:15:34,133 --> 00:15:36,602
It gives access
to core areas of your app

316
00:15:36,602 --> 00:15:38,704
because it's always available.

317
00:15:38,704 --> 00:15:40,540
This means people
can explore content

318
00:15:40,540 --> 00:15:42,608
at different hierarchies.

319
00:15:42,608 --> 00:15:44,977
As views push in,
it feels natural

320
00:15:44,977 --> 00:15:48,614
to swipe left to right to go
back to where you came from

321
00:15:48,614 --> 00:15:50,583
without losing access
to hierarchies

322
00:15:50,583 --> 00:15:54,887
in other tabs where your state
should be preserved.

323
00:15:54,887 --> 00:15:57,456
Next, it's important to use
the navigation bar

324
00:15:57,456 --> 00:16:00,193
at the top of the screen
with appropriate labels

325
00:16:00,193 --> 00:16:02,428
to orient people
in your hierarchy.

326
00:16:02,428 --> 00:16:04,931
Let me show you.

327
00:16:04,931 --> 00:16:06,532
As I drill into content

328
00:16:06,532 --> 00:16:08,601
and move through
my information hierarchy,

329
00:16:08,601 --> 00:16:12,004
notice how the back button
in the navigation bar changes

330
00:16:12,004 --> 00:16:16,375
to reflect the title
of the screen I just came from.

331
00:16:16,375 --> 00:16:19,745
This is helpful as I navigate
further into an app

332
00:16:19,745 --> 00:16:22,448
by scrolling screens
and drilling in,

333
00:16:22,448 --> 00:16:24,851
so I never have to remember
where I came from

334
00:16:24,851 --> 00:16:27,453
or how to get back there,
because the back button

335
00:16:27,453 --> 00:16:31,958
can indicate the level up
in the hierarchy.

336
00:16:31,958 --> 00:16:34,794
The other place to use
hierarchical navigation

337
00:16:34,794 --> 00:16:40,032
is in all instances when
a disclosure indicator is used.

338
00:16:40,032 --> 00:16:41,434
A disclosure indicator,

339
00:16:41,434 --> 00:16:43,903
which is also
referred to as a chevron,

340
00:16:43,903 --> 00:16:47,840
points in the direction you're
expected to transition to.

341
00:16:47,840 --> 00:16:50,243
When a chevron initiates
a different transition,

342
00:16:50,243 --> 00:16:52,812
there's a disconnect
between what the UI represents

343
00:16:52,812 --> 00:16:55,414
and the interaction
that follows.

344
00:16:55,414 --> 00:16:59,886
The concept of pushing maps to
our mental model of progression.

345
00:16:59,886 --> 00:17:02,989
In western cultures,
we read left to right,

346
00:17:02,989 --> 00:17:05,324
and that direction
indicates progress.

347
00:17:05,324 --> 00:17:08,828
But in right to left languages,
such as Arabic and Hebrew,

348
00:17:08,828 --> 00:17:13,266
the mental model of progress is
flowing in the other direction.

349
00:17:13,266 --> 00:17:15,835
If your app supports
right to left languages,

350
00:17:15,835 --> 00:17:17,970
then the transition
of pushing is flipped

351
00:17:17,970 --> 00:17:22,975
to create an association
with the flow of content.

352
00:17:22,975 --> 00:17:26,545
The last consideration for when
to use hierarchical navigation

353
00:17:26,545 --> 00:17:28,748
is about the context
of the workflow,

354
00:17:28,748 --> 00:17:31,017
such as when someone
is navigating frequently

355
00:17:31,017 --> 00:17:33,753
between content.

356
00:17:33,753 --> 00:17:36,155
If you're presenting a workflow
that you expect people

357
00:17:36,155 --> 00:17:40,059
to interact with frequently
by toggling between views often,

358
00:17:40,059 --> 00:17:41,928
app switching
during the workflow,

359
00:17:41,928 --> 00:17:45,898
or spending significant time
in the view, then use a push.

360
00:17:45,898 --> 00:17:48,267
A familiar example
is the Messages app.

361
00:17:48,267 --> 00:17:50,636
Even though the hierarchy
is relatively flat,

362
00:17:50,636 --> 00:17:53,205
I can easily move
in and out of the messages

363
00:17:53,205 --> 00:17:55,308
with a push transition.

364
00:17:55,308 --> 00:17:58,711
If each message wasn't a push,
but instead a modal,

365
00:17:58,711 --> 00:18:00,546
it would be difficult
to seamlessly move

366
00:18:00,546 --> 00:18:02,415
between different chats.

367
00:18:02,415 --> 00:18:05,651
Messaging should feel fluid,
but dismissing a modal

368
00:18:05,651 --> 00:18:08,487
when it's not relevant
makes people have to think about

369
00:18:08,487 --> 00:18:11,657
leaving the screen,
and that feels overcomplicated.

370
00:18:11,657 --> 00:18:13,993
Pushing allows
frictionless transition

371
00:18:13,993 --> 00:18:17,263
between core areas of an app.

372
00:18:17,263 --> 00:18:20,433
That is an overview
of hierarchical navigation.

373
00:18:20,433 --> 00:18:21,701
Let's review.

374
00:18:21,701 --> 00:18:24,437
Primarily, push transitions
are used to traverse

375
00:18:24,437 --> 00:18:26,806
an app's hierarchy.

376
00:18:26,806 --> 00:18:29,208
Always keep the tab bar
persistently anchored

377
00:18:29,208 --> 00:18:31,911
to the bottom of the screen.

378
00:18:31,911 --> 00:18:34,280
Use the navigation bar
of each screen to reflect

379
00:18:34,280 --> 00:18:38,918
a clear title and back label to
orient people in your hierarchy.

380
00:18:38,918 --> 00:18:42,455
Use a push when a disclosure
indicator is present.

381
00:18:42,455 --> 00:18:44,890
And when workflows require
navigating frequently

382
00:18:44,890 --> 00:18:47,326
between content.

383
00:18:47,326 --> 00:18:49,695
Hierarchical navigation
is a very common

384
00:18:49,695 --> 00:18:51,797
and a relatively
simple interaction,

385
00:18:51,797 --> 00:18:56,635
so this transition is likely to
be used frequently in your app.

386
00:18:56,635 --> 00:19:00,773
However, modal presentations
are more about a context shift.

387
00:19:00,773 --> 00:19:03,809
It's about isolating someone
into a focused workflow

388
00:19:03,809 --> 00:19:05,711
or self-contained task.

389
00:19:05,711 --> 00:19:07,713
When using modals on iOS,

390
00:19:07,713 --> 00:19:11,150
always present them
from the bottom of the screen.

391
00:19:11,150 --> 00:19:13,552
A modal interrupts
information hierarchy.

392
00:19:13,552 --> 00:19:17,823
It comes from the bottom of the
screen to cover your tab bar.

393
00:19:17,823 --> 00:19:20,526
This prevents people from
drilling further into your app.

394
00:19:20,526 --> 00:19:23,262
And it's an intentional
disruption because the purpose

395
00:19:23,262 --> 00:19:27,400
is to reinforce focus.

396
00:19:27,400 --> 00:19:30,736
So now you may be wondering,
what is a self-contained task?

397
00:19:30,736 --> 00:19:34,073
Let's talk about
three broad examples.

398
00:19:34,073 --> 00:19:37,543
You can use modal presentations
for a simple task,

399
00:19:37,543 --> 00:19:41,447
a multi-step task,
or for full-screen content.

400
00:19:41,447 --> 00:19:45,551
I'll share an example of each.

401
00:19:45,551 --> 00:19:47,987
First, use modality
for a workflow

402
00:19:47,987 --> 00:19:50,523
that requires accomplishing
a simple task,

403
00:19:50,523 --> 00:19:53,926
such as creating an event
or setting a reminder.

404
00:19:53,926 --> 00:19:55,628
Creating a reminder requires

405
00:19:55,628 --> 00:19:58,564
I edit and modify
the entry fields.

406
00:19:58,564 --> 00:20:00,833
Locking in focus
while doing this helps someone

407
00:20:00,833 --> 00:20:03,669
achieve this task
without distraction.

408
00:20:03,669 --> 00:20:06,372
It also minimizes
the possibility of accidentally

409
00:20:06,372 --> 00:20:11,911
abandoning the flow by tapping
on another element or tab.

410
00:20:11,911 --> 00:20:14,880
Second, use modality
for a workflow that accommodates

411
00:20:14,880 --> 00:20:16,749
a complicated task.

412
00:20:16,749 --> 00:20:18,784
This is potentially
multiple steps

413
00:20:18,784 --> 00:20:21,987
such as adding
a transit card to the wallet.

414
00:20:21,987 --> 00:20:24,256
It may seem counterintuitive
to use a modal

415
00:20:24,256 --> 00:20:27,293
for a complicated task,
but remember,

416
00:20:27,293 --> 00:20:30,763
the purpose is to reinforce
focus by hiding the tab bar

417
00:20:30,763 --> 00:20:33,365
and preventing people
from moving around the app

418
00:20:33,365 --> 00:20:37,336
before the task is complete
or canceled.

419
00:20:37,336 --> 00:20:40,973
And third, use a modal
when viewing an article, video,

420
00:20:40,973 --> 00:20:43,909
or full-screen content
that requires minimal

421
00:20:43,909 --> 00:20:45,811
additional navigation.

422
00:20:45,811 --> 00:20:48,214
When in the Fitness app
starting a workout,

423
00:20:48,214 --> 00:20:50,116
which is presented as a video,

424
00:20:50,116 --> 00:20:54,720
is a great scenario
for a modal presentation.

425
00:20:54,720 --> 00:20:57,456
In the hierarchical section,
we talked about the importance

426
00:20:57,456 --> 00:20:59,992
of the navigation bar
to orient people.

427
00:20:59,992 --> 00:21:03,996
It's equally important
with modal presentations.

428
00:21:03,996 --> 00:21:06,098
When looking at
the anatomy of a modal,

429
00:21:06,098 --> 00:21:09,702
think about the navigation bar
as a guide for wayfinding.

430
00:21:09,702 --> 00:21:13,105
The use of labels and actions
can make people feel confident

431
00:21:13,105 --> 00:21:15,908
about where they are
and what actions they can take

432
00:21:15,908 --> 00:21:19,145
to go other places.

433
00:21:19,145 --> 00:21:22,581
A title helps orient people
to the content of the screen,

434
00:21:22,581 --> 00:21:25,618
such as "New Itinerary."

435
00:21:25,618 --> 00:21:28,487
The right label is intended
to be the preferred action,

436
00:21:28,487 --> 00:21:33,225
so it's often seen in a bolder
font to emphasize importance.

437
00:21:33,225 --> 00:21:36,095
The label itself is a concise,
affirmative verb

438
00:21:36,095 --> 00:21:39,431
that tells me exactly
what to expect when tapped.

439
00:21:39,431 --> 00:21:41,634
The preferred action
dismisses the modal

440
00:21:41,634 --> 00:21:45,571
and the previous state
of the app should be preserved.

441
00:21:45,571 --> 00:21:48,607
If there is not yet input
or interaction on the modal,

442
00:21:48,607 --> 00:21:51,377
then having the preferred
action be inactive

443
00:21:51,377 --> 00:21:53,779
is a good way to clarify
that fields are required

444
00:21:53,779 --> 00:21:57,983
in order to save or continue.

445
00:21:57,983 --> 00:22:00,786
If you have a preferred action,
then using the left action

446
00:22:00,786 --> 00:22:03,322
to dismiss the modal
with "Cancel"

447
00:22:03,322 --> 00:22:06,025
clearly indicates that I'm
abandoning the workflow.

448
00:22:06,025 --> 00:22:08,994
If I've entered any information
before tapping Cancel,

449
00:22:08,994 --> 00:22:12,097
this is a good time to display
an alert, or an action sheet

450
00:22:12,097 --> 00:22:14,200
as you see here.

451
00:22:14,200 --> 00:22:16,735
Letting someone know that
they will lose the data

452
00:22:16,735 --> 00:22:18,804
if continuing to cancel.

453
00:22:18,804 --> 00:22:21,240
But if I haven't
interacted with the UI,

454
00:22:21,240 --> 00:22:25,711
tapping Cancel should simply
dismiss the modal.

455
00:22:25,711 --> 00:22:29,248
Use close symbols sparingly and
only when modal presentations

456
00:22:29,248 --> 00:22:33,452
require minimal interaction
and no text input.

457
00:22:33,452 --> 00:22:36,121
Sometimes,
you'll see an "X" in a modal

458
00:22:36,121 --> 00:22:38,857
as the primary way to dismiss,
such as this article

459
00:22:38,857 --> 00:22:41,360
from the Today tab
in the App Store.

460
00:22:41,360 --> 00:22:44,797
The close symbol works here
because there is no user input,

461
00:22:44,797 --> 00:22:46,532
so the subtle dismiss action

462
00:22:46,532 --> 00:22:49,134
helps someone focus
on the content.

463
00:22:49,134 --> 00:22:52,104
Here's an example of how the
close symbol can be problematic

464
00:22:52,104 --> 00:22:55,741
in a modal that requires
input and interaction.

465
00:22:55,741 --> 00:22:58,811
After I select a filter,
if I tap close,

466
00:22:58,811 --> 00:23:01,614
will the selections be
applied or canceled?

467
00:23:01,614 --> 00:23:04,750
Without a clearly labeled
action, people will wonder,

468
00:23:04,750 --> 00:23:07,219
"What happens if I tap close?"

469
00:23:07,219 --> 00:23:10,389
So keep in mind that using
labels in the navigation bar

470
00:23:10,389 --> 00:23:12,958
is usually preferred,
as it's more affirming

471
00:23:12,958 --> 00:23:15,995
and the actions
are more explicit.

472
00:23:15,995 --> 00:23:19,465
Lastly, we try to limit
modals over modals

473
00:23:19,465 --> 00:23:23,602
because it can feel
jarring and overcomplicated.

474
00:23:23,602 --> 00:23:25,904
It's worth calling out,
that a modal view itself

475
00:23:25,904 --> 00:23:29,375
can support subviews
and transitions when relevant.

476
00:23:29,375 --> 00:23:31,977
I mentioned earlier
that this is an edit view,

477
00:23:31,977 --> 00:23:35,314
meaning that the text fields
and table cells have selections

478
00:23:35,314 --> 00:23:37,416
and input which are intended

479
00:23:37,416 --> 00:23:41,120
to be interacted with
and not just viewed.

480
00:23:41,120 --> 00:23:43,722
For example,
I can tap on a table cell

481
00:23:43,722 --> 00:23:46,859
of one of my friends
I've added to the itinerary.

482
00:23:46,859 --> 00:23:50,262
You expect this to push because
it has a chevron, remember?

483
00:23:50,262 --> 00:23:53,465
When I push in, this view may
show information about Kate

484
00:23:53,465 --> 00:23:57,903
and give me the option to remove
her from the itinerary.

485
00:23:57,903 --> 00:24:01,240
But the labels "Add People"
and "Upload Photo" are in

486
00:24:01,240 --> 00:24:05,811
tint color, which indicates
that these actions are tappable.

487
00:24:05,811 --> 00:24:07,146
In each of these scenarios,

488
00:24:07,146 --> 00:24:09,448
they're workflows
within workflows.

489
00:24:09,448 --> 00:24:11,483
I started by adding
an itinerary,

490
00:24:11,483 --> 00:24:15,287
now I'm adding
a photo to the itinerary.

491
00:24:15,287 --> 00:24:17,723
Uploading a photo
is a workflow that includes

492
00:24:17,723 --> 00:24:19,725
quite a bit of interaction,

493
00:24:19,725 --> 00:24:23,796
like scrolling through my camera
roll and selecting a new photo.

494
00:24:23,796 --> 00:24:27,066
I would also define
this as a self-contained task.

495
00:24:27,066 --> 00:24:30,102
Once a photo is chosen,
that modal is dismissed

496
00:24:30,102 --> 00:24:34,073
and I'm back to the first modal
of the new itinerary.

497
00:24:34,073 --> 00:24:36,575
Try to limit
multiple modality stacks,

498
00:24:36,575 --> 00:24:38,210
but sometimes they're required

499
00:24:38,210 --> 00:24:42,381
to drive consistency
and focus in subviews.

500
00:24:42,381 --> 00:24:46,385
That is an overview
of modal presentation on iOS.

501
00:24:46,385 --> 00:24:49,388
Modals should present
from the bottom of the screen.

502
00:24:49,388 --> 00:24:51,824
They can be used
for three types of tasks:

503
00:24:51,824 --> 00:24:55,260
simple, multi-step,
or full-screen.

504
00:24:55,260 --> 00:25:00,132
Use the preferred and cancel
actions in the navigation bar.

505
00:25:00,132 --> 00:25:04,036
Use the close symbol for content
with minimal interaction.

506
00:25:04,036 --> 00:25:06,972
And limit modals over modals.

507
00:25:06,972 --> 00:25:09,341
I hope this deep dive
was helpful for you.

508
00:25:09,341 --> 00:25:12,044
When designing navigation
for your iOS apps,

509
00:25:12,044 --> 00:25:14,580
think about how
content is organized,

510
00:25:14,580 --> 00:25:16,582
how people interact
with your functionality,

511
00:25:16,582 --> 00:25:20,185
and how best to represent it
in relation to your hierarchy.

512
00:25:20,185 --> 00:25:23,255
This way, people can easily
access and interact

513
00:25:23,255 --> 00:25:25,691
with all of your app's
amazing features.

514
00:25:25,691 --> 00:25:26,792
Thanks for listening.

515
00:25:26,792 --> 00:25:30,529
♪

