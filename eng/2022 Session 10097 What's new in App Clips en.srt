1
00:00:00,701 --> 00:00:08,709
♪ ♪

2
00:00:09,643 --> 00:00:11,745
Hi. I'm Charles Ying.

3
00:00:11,778 --> 00:00:14,715
Welcome to What's new in App Clips.

4
00:00:14,748 --> 00:00:17,518
An App Clip is a small part of an app.

5
00:00:17,551 --> 00:00:20,187
They're light and fast,
and easy to discover,

6
00:00:20,220 --> 00:00:23,790
so you can quickly get what you need
right when you need it.

7
00:00:23,824 --> 00:00:27,427
They can be found in Messages,
Maps, Spotlight, and Safari,

8
00:00:27,461 --> 00:00:31,198
or out in the world with QR codes
and App Clip Codes.

9
00:00:31,231 --> 00:00:33,567
One really cool example is Toast.

10
00:00:33,600 --> 00:00:39,706
Toast's app clip lets you scan a QR code
to pay for your food right at your table!

11
00:00:39,740 --> 00:00:43,377
Toast configured their App Clip to open
from an existing QR code

12
00:00:43,410 --> 00:00:45,112
printed on a receipt.

13
00:00:45,145 --> 00:00:48,515
The App Clip has resulted
in users checking out faster,

14
00:00:48,549 --> 00:00:51,818
and more users
choosing to install the full app.

15
00:00:51,852 --> 00:00:55,556
Building an App Clip into
an existing flow is a great way

16
00:00:55,589 --> 00:00:57,791
to streamline your experience.

17
00:00:58,492 --> 00:01:02,696
Today you'll learn about new features
that let your users do more

18
00:01:02,729 --> 00:01:07,768
with your App Clip,
and make developing App Clips even easier.

19
00:01:07,801 --> 00:01:11,238
Let's start with the App Clip size limit.

20
00:01:11,939 --> 00:01:16,076
App Clips are light and fast,
and designed for speed.

21
00:01:16,109 --> 00:01:19,947
To make App Clips feel instant,
they need to be small.

22
00:01:19,980 --> 00:01:23,851
And since wireless networks
are faster than they were two years ago,

23
00:01:23,884 --> 00:01:27,721
I'm happy to say that new in iOS 16,

24
00:01:27,754 --> 00:01:32,559
App Clips can now be up to 15 MB in size.

25
00:01:32,593 --> 00:01:36,496
This gives you more room
to build your ideal experience.

26
00:01:36,530 --> 00:01:40,734
Set your App Clip's minimum version
to iOS 16 for the new limit,

27
00:01:40,767 --> 00:01:45,739
or stay under 10 MB to be compatible
with iOS 15 and earlier.

28
00:01:45,772 --> 00:01:49,176
Either way, you can always download
additional resources

29
00:01:49,209 --> 00:01:51,879
after your App Clip launches.

30
00:01:51,912 --> 00:01:54,882
Speed is still key to a great experience.

31
00:01:54,915 --> 00:01:58,585
Your users won't always be
in locations with a fast network,

32
00:01:58,619 --> 00:02:03,357
so optimizing your App Clip
is still as critical as ever.

33
00:02:03,390 --> 00:02:05,759
To learn more
about optimizing your App Clip,

34
00:02:05,792 --> 00:02:10,063
please watch,
"Build light and fast App Clips”.

35
00:02:10,097 --> 00:02:13,634
Next, I'm really excited to show you
a simple new tool

36
00:02:13,667 --> 00:02:19,106
that makes sure your App Clip experience
or universal link is set up correctly.

37
00:02:19,139 --> 00:02:21,008
Here's how it works.

38
00:02:21,041 --> 00:02:24,311
On your iPhone or iPad,
go to Developer Settings

39
00:02:24,344 --> 00:02:28,782
and under App Clips Testing,
select Diagnostics.

40
00:02:28,815 --> 00:02:31,351
Now, enter your URL.

41
00:02:31,385 --> 00:02:36,857
You can turn on Developer Settings
by connecting your device to Xcode.

42
00:02:36,890 --> 00:02:40,060
iOS will check your URL's configuration.

43
00:02:40,093 --> 00:02:43,864
If everything is set up right,
you'll see these green checkboxes.

44
00:02:44,998 --> 00:02:48,302
But, if there's something wrong,
you'll see a screen like this one

45
00:02:48,335 --> 00:02:51,538
that tells you exactly what's happening.

46
00:02:51,572 --> 00:02:55,409
This will help you fix problems
like Safari's banner not showing,

47
00:02:55,442 --> 00:02:58,946
or navigating to a web page
instead of your App Clip.

48
00:02:58,979 --> 00:03:01,915
Each diagnostic has a link
to documentation

49
00:03:01,949 --> 00:03:04,852
to explain the configuration step further.

50
00:03:04,885 --> 00:03:08,021
Now you'll be able
to see exactly what's wrong.

51
00:03:09,289 --> 00:03:14,194
App Clip diagnostics checks App Clip
experiences that use physical codes,

52
00:03:14,228 --> 00:03:15,629
Safari and iMessage,

53
00:03:15,662 --> 00:03:20,634
and it will also check your universal link
associated domains configuration.

54
00:03:20,667 --> 00:03:26,106
This simple new tool makes it so much
easier to get your configuration right.

55
00:03:27,307 --> 00:03:29,643
Next, CloudKit.

56
00:03:30,777 --> 00:03:35,682
CloudKit is a framework that lets your app
access data stored on iCloud.

57
00:03:35,716 --> 00:03:40,220
Up until now, CloudKit has
not been available for App Clips.

58
00:03:40,254 --> 00:03:44,958
Your App Clip might be using a server
to read data or resources.

59
00:03:46,226 --> 00:03:49,930
New in iOS 16,
App Clips can also read data

60
00:03:49,963 --> 00:03:53,400
and resources stored
in a CloudKit public database.

61
00:03:53,433 --> 00:03:57,237
You can now share the same code,
access the same data

62
00:03:57,271 --> 00:03:59,573
in both your app and App Clip

63
00:03:59,606 --> 00:04:03,644
with all the power and scale
CloudKit provides.

64
00:04:03,677 --> 00:04:07,648
An important difference between apps
and App Clips is that App Clips can read

65
00:04:07,681 --> 00:04:11,885
from a public database
but can't write data to CloudKit.

66
00:04:11,919 --> 00:04:16,123
App Clips also can't use cloud documents
and the key-value store.

67
00:04:16,156 --> 00:04:20,294
This keeps the promise to users
that when an App Clip isn't used anymore,

68
00:04:20,327 --> 00:04:23,263
iOS will delete the App Clip and its data.

69
00:04:24,264 --> 00:04:27,067
To enable CloudKit
for your App Clip in Xcode,

70
00:04:27,100 --> 00:04:31,238
open your App Clip target's
Signing and Capabilities tab,

71
00:04:31,271 --> 00:04:35,542
and select the CloudKit container
you want your App Clip to use.

72
00:04:35,576 --> 00:04:39,112
This CloudKit container can be a new
or existing container

73
00:04:39,146 --> 00:04:41,181
shared with your full app.

74
00:04:41,949 --> 00:04:47,120
Here's an example of how to read
CloudKit public data from your App Clip.

75
00:04:47,154 --> 00:04:50,224
Create a CKContainer
with the container's identifier

76
00:04:50,257 --> 00:04:53,827
and access
the publicCloudDatabase property.

77
00:04:53,861 --> 00:04:57,464
Then fetch the record you want
from the public database.

78
00:04:59,867 --> 00:05:02,769
Next, keychain migration.

79
00:05:03,537 --> 00:05:06,273
Today, when you want to transfer
sensitive information,

80
00:05:06,306 --> 00:05:09,243
like authentication tokens
and payment information

81
00:05:09,276 --> 00:05:11,645
from your App Clip to your full app,

82
00:05:11,678 --> 00:05:16,016
your App Clip would store this data
in a shared app group container.

83
00:05:16,049 --> 00:05:21,421
iOS saves this data when a user upgrades
from your App Clip to your full app.

84
00:05:22,723 --> 00:05:24,958
Your full app reads
the app group container

85
00:05:24,992 --> 00:05:27,561
and stores that information
in the keychain.

86
00:05:28,862 --> 00:05:32,566
However, the keychain is the ideal place
to securely store

87
00:05:32,599 --> 00:05:35,369
this type of information.

88
00:05:35,402 --> 00:05:38,772
New this year,
when a user installs your app,

89
00:05:38,805 --> 00:05:41,842
items stored in your App Clip's keychain
are transferred

90
00:05:41,875 --> 00:05:44,411
from your App Clip to your app.

91
00:05:44,444 --> 00:05:48,081
Now your App Clip can simply store
secure items in the keychain

92
00:05:48,115 --> 00:05:51,251
and they will be moved to your app
when it's installed.

93
00:05:51,952 --> 00:05:56,256
Shared keychain groups
and iCloud Keychain are not supported.

94
00:05:56,290 --> 00:05:59,493
This keeps the promise to users
that keychain information

95
00:05:59,526 --> 00:06:03,030
won't stick around
when an App Clip isn't used anymore.

96
00:06:04,231 --> 00:06:08,702
Here's an example of how to store and
read login information in the keychain.

97
00:06:08,735 --> 00:06:12,406
The code is the same
for both app and App Clip.

98
00:06:12,439 --> 00:06:16,109
You can add new items to
the keychain with SecItemAdd.

99
00:06:16,143 --> 00:06:20,380
And fetch these items from the keychain
with SecItemCopyMatching.

100
00:06:20,414 --> 00:06:23,817
And add a label to your items
to help your full app

101
00:06:23,851 --> 00:06:27,654
identify that the items were saved
by your App Clip.

102
00:06:28,822 --> 00:06:32,125
Finally, the App Clip experiences API.

103
00:06:32,159 --> 00:06:37,497
As your app clip grows, you'll have more
and more advanced App Clip experiences,

104
00:06:37,531 --> 00:06:41,068
each with their own information
or location.

105
00:06:41,101 --> 00:06:45,839
You need an easy way to add
and update all of these experiences.

106
00:06:45,873 --> 00:06:49,376
App Store Connect has
an App Clip experiences web API

107
00:06:49,409 --> 00:06:53,347
that's designed to automate this workflow.

108
00:06:53,380 --> 00:06:57,084
Let's look at an example
that uses this API

109
00:06:57,117 --> 00:06:59,920
to add an advanced App Clip experience.

110
00:07:00,754 --> 00:07:03,857
First, get the App Clip resource ID.

111
00:07:03,891 --> 00:07:06,793
Next, upload your header image.

112
00:07:06,827 --> 00:07:10,831
Last, create the advanced
App Clip experience.

113
00:07:10,864 --> 00:07:14,535
First, let's find the resource ID
for the app clip.

114
00:07:14,568 --> 00:07:19,706
Call the web API with your app's item ID
and App Clip bundle ID.

115
00:07:19,740 --> 00:07:24,311
And from the response,
save the App Clip resource ID for later.

116
00:07:24,344 --> 00:07:28,749
Next, upload a header image
for the advanced App Clip experience.

117
00:07:28,782 --> 00:07:33,253
Save the header image's resource ID
for the next step.

118
00:07:33,287 --> 00:07:36,857
Last, with your App Clip resource ID
and your header image ID,

119
00:07:36,890 --> 00:07:40,027
we can now create
your advanced App Clip experience.

120
00:07:40,694 --> 00:07:43,063
There are three dictionaries to fill in:

121
00:07:43,096 --> 00:07:46,700
attributes, relationships, and included.

122
00:07:48,202 --> 00:07:52,773
In the attributes dictionary,
add information like the action name,

123
00:07:52,806 --> 00:07:54,875
which category and language,

124
00:07:54,908 --> 00:07:58,011
and the link
for the advanced App Clip experience.

125
00:07:58,045 --> 00:08:03,550
If your advanced experience is tied to
a Maps location, add a place dictionary.

126
00:08:03,584 --> 00:08:07,120
In the place dictionary,
add the matching Maps business place name,

127
00:08:07,154 --> 00:08:10,991
a map action, and the map coordinates.

128
00:08:11,024 --> 00:08:12,860
In the relationships dictionary,

129
00:08:12,893 --> 00:08:17,331
add the App Clip resource ID
and the header image ID.

130
00:08:17,364 --> 00:08:21,301
And in the included dictionary,
add a localized title and subtitle

131
00:08:21,335 --> 00:08:23,704
for the advanced App Clip experience.

132
00:08:23,737 --> 00:08:25,873
And that's it!

133
00:08:25,906 --> 00:08:28,342
With this App Store Connect API,

134
00:08:28,375 --> 00:08:32,346
you can fully automate creating
advanced App Clip experiences.

135
00:08:32,379 --> 00:08:34,748
To learn more about App Store Connect,

136
00:08:34,781 --> 00:08:37,317
check out “Automating App Store Connect”

137
00:08:37,351 --> 00:08:39,219
and “What's new in App Store Connect”

138
00:08:39,253 --> 00:08:42,222
from WWDC 2020.

139
00:08:42,990 --> 00:08:47,394
To wrap up, the new App Clip size limit
gives you more room

140
00:08:47,427 --> 00:08:50,230
to build your ideal experience.

141
00:08:50,264 --> 00:08:54,701
App Clip diagnostics tools are a great way
to understand your App Clip

142
00:08:54,735 --> 00:08:58,272
and universal link configuration
end to end.

143
00:08:58,305 --> 00:09:01,441
CloudKit and keychain can ease
your development

144
00:09:01,475 --> 00:09:04,344
by sharing more code with your app.

145
00:09:04,378 --> 00:09:07,714
And the App Clip experiences API
automates the workflow

146
00:09:07,748 --> 00:09:11,518
for managing
your advanced App Clip experiences.

147
00:09:11,552 --> 00:09:14,188
To learn more about developing App Clips,

148
00:09:14,221 --> 00:09:16,823
please watch “What's new in App Clips”

149
00:09:16,857 --> 00:09:19,993
from WWDC 2021

150
00:09:20,027 --> 00:09:24,998
and “Design great App Clips” from WWDC 2020.

151
00:09:25,699 --> 00:09:28,402
You developers have made
such great App Clips.

152
00:09:28,435 --> 00:09:29,870
They're so creative!

153
00:09:29,903 --> 00:09:35,175
We hope these new features help you build
your next great App Clip.

154
00:09:35,209 --> 00:09:37,444
Thanks for watching!  ♪ ♪

