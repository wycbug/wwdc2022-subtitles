1
00:00:00,501 --> 00:00:08,509
â™ª â™ª

2
00:00:12,746 --> 00:00:16,550
Harry: Hi, I'm Harry,
an engineer on the SwiftUI team.

3
00:00:16,583 --> 00:00:21,221
Welcome to the second part
of the SwiftUI on iPad series.

4
00:00:21,255 --> 00:00:24,992
In the first part of this series,
my colleague Raj dove deep

5
00:00:25,025 --> 00:00:27,294
into how you can use lists, tables,

6
00:00:27,327 --> 00:00:30,330
selection, and split views
to really make your apps shine

7
00:00:30,364 --> 00:00:34,935
using the iPad's larger screens
and various input devices.

8
00:00:34,968 --> 00:00:36,470
If you haven't seen that session,

9
00:00:36,503 --> 00:00:38,839
I highly recommend starting with that.

10
00:00:38,872 --> 00:00:42,109
I really enjoyed seeing Raj build out
the Places app

11
00:00:42,142 --> 00:00:44,811
and I wanted to add some features
of my own.

12
00:00:44,845 --> 00:00:46,947
So in this session
I'll be looking at something

13
00:00:46,980 --> 00:00:50,150
near and dear to my heart, toolbars!

14
00:00:50,184 --> 00:00:53,787
In SwiftUI, the toolbar API
configures many system bars

15
00:00:53,820 --> 00:00:56,790
like the navigation bar
or bottom bar on iOS

16
00:00:56,823 --> 00:00:59,493
or the window toolbar on macOS.

17
00:00:59,526 --> 00:01:03,830
Toolbars provide quick actions
to a lot of your most common features.

18
00:01:03,864 --> 00:01:09,036
Creating a good toolbar can really improve
the productivity of people using your app.

19
00:01:10,103 --> 00:01:12,673
I've been spending a lot of time
thinking about toolbars

20
00:01:12,706 --> 00:01:17,411
and how Places could use some of
the new toolbar features in iOS 16.

21
00:01:17,444 --> 00:01:20,080
I'd like to start by briefly showing you
what I've built

22
00:01:20,113 --> 00:01:23,450
to give you a taste
of what is now possible on iPad.

23
00:01:24,885 --> 00:01:28,021
After all my changes,
here is the updated Places app.

24
00:01:29,823 --> 00:01:33,694
You might notice some new features,
like leading aligned navigation titles,

25
00:01:33,727 --> 00:01:36,930
title menus, title menu headers,

26
00:01:36,964 --> 00:01:39,867
and centered aligned toolbar items.

27
00:01:39,900 --> 00:01:43,036
If you've used a Mac, you might
also be familiar with features

28
00:01:43,070 --> 00:01:44,872
like Toolbar customization,

29
00:01:44,905 --> 00:01:48,575
which allows people to make toolbars
uniquely their own.

30
00:01:48,609 --> 00:01:52,412
These powerful Mac features
are making their debut on the iPad.

31
00:01:53,514 --> 00:01:54,715
To start this session,

32
00:01:54,748 --> 00:01:58,185
I'll show some enhancements
to the toolbar API.

33
00:01:58,218 --> 00:02:02,589
Then I'll walk you through
some new APIs for titles and documents.

34
00:02:02,623 --> 00:02:05,259
So let's dive right in with toolbars.

35
00:02:05,292 --> 00:02:09,630
Now, many of you have already configured
toolbars in your own iOS app

36
00:02:09,663 --> 00:02:12,132
and to optimize for a smaller screen,

37
00:02:12,165 --> 00:02:16,236
you might've added a menu like I did
when I first looked at Places.

38
00:02:17,471 --> 00:02:20,073
My menu looked like this in code.

39
00:02:21,141 --> 00:02:25,946
You can see I have a toolbar item
with a primary action placement.

40
00:02:25,979 --> 00:02:27,948
Inside, I have a more menu,

41
00:02:27,981 --> 00:02:31,985
with a few controls as the menu's content.

42
00:02:32,019 --> 00:02:34,788
Let's see what this looks like on iPad.

43
00:02:35,756 --> 00:02:38,125
As you might have guessed,
it doesn't really take advantage

44
00:02:38,158 --> 00:02:40,093
of the space available there.

45
00:02:40,127 --> 00:02:42,963
What's great, though, is that in iOS 16,

46
00:02:42,996 --> 00:02:46,900
toolbars can implement these kind of menus
on your behalf.

47
00:02:46,934 --> 00:02:49,002
We call these overflow menus

48
00:02:49,036 --> 00:02:50,671
and to make best use of them,

49
00:02:50,704 --> 00:02:53,841
I'll want to restructure
the content of my toolbar.

50
00:02:55,008 --> 00:03:00,347
I'll start by converting the toolbar item
into a toolbar item group.

51
00:03:00,380 --> 00:03:03,083
I'll then remove the menu
and make its content

52
00:03:03,116 --> 00:03:06,320
the content of the toolbar item group.

53
00:03:06,353 --> 00:03:11,425
This group inserts individual toolbar
items for each view in the group.

54
00:03:11,458 --> 00:03:13,360
On iPad and Mac,
this is all that's needed

55
00:03:13,393 --> 00:03:17,364
to automatically move items into
an overflow menu when needed.

56
00:03:17,397 --> 00:03:20,501
There's more I can do here,
but before I can get to that,

57
00:03:20,534 --> 00:03:23,604
I'll need to think about the placement
of my toolbar items.

58
00:03:24,505 --> 00:03:27,708
Placements define the area
in which a toolbar item is rendered.

59
00:03:27,741 --> 00:03:31,512
Different placements
can resolve to the same area.

60
00:03:31,545 --> 00:03:35,682
You can think of a navigation bar
as having three distinct areas:

61
00:03:35,716 --> 00:03:40,053
the leading, the center,
and the trailing area.

62
00:03:40,087 --> 00:03:44,291
The leading and trailing areas
typically contain controls.

63
00:03:44,324 --> 00:03:47,661
While the center contains
your app's navigation title.

64
00:03:47,694 --> 00:03:50,264
Let's look at this
in the context of Places.

65
00:03:51,765 --> 00:03:54,668
In Places
my primary action toolbar item group

66
00:03:54,701 --> 00:03:58,872
resolves to the trailing area
on iPad or Mac.

67
00:03:58,906 --> 00:04:02,376
Primary actions represent
the most common action available

68
00:04:02,409 --> 00:04:04,878
to the user for a particular screen.

69
00:04:05,779 --> 00:04:10,317
In iOS 16, there's a new placement
called secondary action.

70
00:04:10,350 --> 00:04:14,221
These items represent controls
that are not the most used controls,

71
00:04:14,254 --> 00:04:16,957
but still warrant their own toolbar items.

72
00:04:16,990 --> 00:04:21,495
Actions like favoriting and editing
aren't the most important in Places,

73
00:04:21,528 --> 00:04:23,430
so I'll make them secondary actions.

74
00:04:24,498 --> 00:04:29,403
By default, secondary actions
will not be visible in the toolbar.

75
00:04:29,436 --> 00:04:32,973
Instead, they live in the overflow menu.

76
00:04:33,006 --> 00:04:37,477
You can change that behavior
by using the new toolbarRole modifier.

77
00:04:39,012 --> 00:04:44,885
This modifier influences the behavior of
a toolbar by assigning it a semantic role.

78
00:04:44,918 --> 00:04:48,188
Here I pass an editor role
which tells the navigation bar

79
00:04:48,222 --> 00:04:52,192
that it should be optimized
for editing content.

80
00:04:52,226 --> 00:04:55,562
The navigation bar interprets this
as a desire to have more space

81
00:04:55,596 --> 00:04:59,266
to render toolbar items
and so it moves the navigation title

82
00:04:59,299 --> 00:05:02,236
from the center area to the leading area.

83
00:05:02,269 --> 00:05:05,639
This makes room for secondary actions
to be placed in the center

84
00:05:05,672 --> 00:05:08,842
before moving to the overflow menu.

85
00:05:08,876 --> 00:05:12,379
In compact size classes,
the navigation bar doesn't change

86
00:05:12,412 --> 00:05:15,649
and continues to render the title
in the center.

87
00:05:16,884 --> 00:05:19,953
Using the secondary action
and toolbar role API

88
00:05:19,987 --> 00:05:23,957
really lets Places start to take advantage
of the iPad's size.

89
00:05:23,991 --> 00:05:27,661
With the center available to me,
I can add more items to my toolbar,

90
00:05:27,694 --> 00:05:29,997
like a noise button,
or a comfort level button,

91
00:05:30,030 --> 00:05:31,265
or a trash button.

92
00:05:31,298 --> 00:05:33,433
But if I start adding a lot of items,

93
00:05:33,467 --> 00:05:37,104
my toolbar might become unwieldy
for some users.

94
00:05:37,137 --> 00:05:39,973
MacOS has long supported
customizable toolbars

95
00:05:40,007 --> 00:05:43,177
which lets each person choose the toolbar
best for them

96
00:05:43,210 --> 00:05:48,682
and I'm excited to say that now iPadOS
also supports user customization.

97
00:05:48,715 --> 00:05:51,919
You can use the existing toolbar
customization API

98
00:05:51,952 --> 00:05:54,521
that's worked on macOS
to adopt this feature.

99
00:05:54,555 --> 00:05:56,590
Let's look at that now.

100
00:05:57,391 --> 00:05:59,760
Only toolbar items are customizable

101
00:05:59,793 --> 00:06:05,365
so I'll first split up my toolbar item
group into individual toolbar items.

102
00:06:05,399 --> 00:06:08,602
Note that there is no functional
difference after this change.

103
00:06:08,635 --> 00:06:11,905
Customization also requires
every item in the toolbar

104
00:06:11,939 --> 00:06:14,808
to be associated with a unique identifier

105
00:06:14,842 --> 00:06:18,011
so I'll add IDs to each of my items.

106
00:06:18,045 --> 00:06:22,783
It's important for these IDs to be unique
and consistent across app launches.

107
00:06:22,816 --> 00:06:25,052
When a user customizes their toolbar,

108
00:06:25,085 --> 00:06:27,287
SwiftUI persists these IDs

109
00:06:27,321 --> 00:06:31,225
and uses them to look up
the associated view to render.

110
00:06:31,258 --> 00:06:34,962
Finally, I'll add an ID
to the toolbar modifier as a whole.

111
00:06:34,995 --> 00:06:38,465
Altogether, this opts the toolbar
into supporting customization.

112
00:06:39,833 --> 00:06:41,935
Unique to customizable toolbars,

113
00:06:41,969 --> 00:06:46,874
toolbar items have the ability to not be
initially present in the toolbar.

114
00:06:46,907 --> 00:06:50,210
These items start their life
in the customization popover

115
00:06:50,244 --> 00:06:52,880
and can be added to the toolbar later.

116
00:06:52,913 --> 00:06:55,082
Because these items
aren't initially present,

117
00:06:55,115 --> 00:06:59,620
this is a good option for actions that are
more useful to specific workflows.

118
00:06:59,653 --> 00:07:01,021
Let's check them out.

119
00:07:02,222 --> 00:07:06,760
I want to hide some of my current toolbar
items to make my new items easier to see.

120
00:07:07,928 --> 00:07:11,131
Now let's add a toolbar item
that contains a share link.

121
00:07:11,164 --> 00:07:16,503
Share links are new in SwiftUI and rely on
a new protocol called transferable.

122
00:07:16,537 --> 00:07:19,473
For more information
on Transferable and ShareLink,

123
00:07:19,506 --> 00:07:22,743
be sure to check out
the Meet Transferable session.

124
00:07:22,776 --> 00:07:24,411
With my toolbar item in place,

125
00:07:24,444 --> 00:07:28,048
I'll provide a value of false to the shows
by default parameter

126
00:07:28,081 --> 00:07:31,418
which makes this item
not be initially present in the bar.

127
00:07:32,920 --> 00:07:35,255
Now you can see my share link
living its best life

128
00:07:35,289 --> 00:07:38,392
in the customization popover.

129
00:07:38,425 --> 00:07:42,596
And I'm able to drag it from
the customization popover into the bar.

130
00:07:42,629 --> 00:07:45,465
People are going to love that.

131
00:07:45,499 --> 00:07:47,868
With my share link in place,
I started to think about

132
00:07:47,901 --> 00:07:51,471
the relationship between my toolbar items.

133
00:07:51,505 --> 00:07:53,607
After moving the share link into the bar,

134
00:07:53,640 --> 00:07:57,477
I noticed that my image
and map adjustment items are separated,

135
00:07:57,511 --> 00:08:00,814
but I think of these items
as a group of quick editing control,

136
00:08:00,848 --> 00:08:04,418
and I'd like to model that relationship
in the toolbar itself.

137
00:08:05,786 --> 00:08:09,890
iOS 16 and macOS Ventura support
modeling this relationship

138
00:08:09,923 --> 00:08:11,692
by using ControlGroup.

139
00:08:11,725 --> 00:08:13,894
I'll show you how.

140
00:08:13,927 --> 00:08:16,430
You can see
I have two individual toolbar items

141
00:08:16,463 --> 00:08:19,166
for my image and map adjustment actions.

142
00:08:19,199 --> 00:08:23,904
To group them together,
I'll first move them to the same item.

143
00:08:23,937 --> 00:08:26,240
Then I'll wrap them in a control group.

144
00:08:27,975 --> 00:08:32,613
A user can now add or remove them
from the toolbar as a unit.

145
00:08:32,646 --> 00:08:35,682
That's pretty cool,
but I can take this even further

146
00:08:35,716 --> 00:08:39,720
using a new API available on ControlGroup.

147
00:08:39,753 --> 00:08:42,356
By providing a label to the control group,

148
00:08:42,389 --> 00:08:45,859
this group of items can collapse
into its own smaller menu

149
00:08:45,893 --> 00:08:49,162
before moving into the overflow menu.

150
00:08:50,063 --> 00:08:52,266
The toolbar is really
starting to come together.

151
00:08:52,299 --> 00:08:54,701
There's one last change I'd like to make.

152
00:08:54,735 --> 00:08:58,372
Adding a new place
is a common and important action,

153
00:08:58,405 --> 00:09:00,774
so I'd like to add a toolbar item
for that.

154
00:09:02,142 --> 00:09:05,546
To do that,
I'll add a new button to my toolbar,

155
00:09:05,579 --> 00:09:08,949
but this time
I'll use the primary action placement

156
00:09:08,982 --> 00:09:12,486
as I consider the new button
to be the most common action.

157
00:09:14,788 --> 00:09:19,593
This placement highlights an important
distinction between iOS and macOS.

158
00:09:19,626 --> 00:09:25,465
All items within a customizable toolbar
modifier support customization on macOS,

159
00:09:25,499 --> 00:09:29,903
but on iPadOS,
only secondary actions do.

160
00:09:29,937 --> 00:09:33,540
So my new button here renders
in the trailing area of the bar

161
00:09:33,574 --> 00:09:37,010
and is not customizable by the user.

162
00:09:37,044 --> 00:09:38,378
Wow!

163
00:09:38,412 --> 00:09:39,780
That was a lot about toolbars

164
00:09:39,813 --> 00:09:41,748
and those aren't the only improvements.

165
00:09:41,782 --> 00:09:44,117
Navigation titles gained
some new features as well

166
00:09:44,151 --> 00:09:46,854
around menus, documents, and more.

167
00:09:46,887 --> 00:09:49,223
Let's take documents as an example.

168
00:09:49,256 --> 00:09:51,191
There are lot of kinds of documents.

169
00:09:51,225 --> 00:09:53,493
You might be familiar with documents
that are managed

170
00:09:53,527 --> 00:09:55,996
by the document group API.

171
00:09:56,029 --> 00:09:59,233
Document groups come with
a lot of built-in functionality

172
00:09:59,266 --> 00:10:02,236
for representing
and managing their documents.

173
00:10:02,269 --> 00:10:06,673
All of what I'm about to talk about
comes for free when using document groups.

174
00:10:07,975 --> 00:10:12,779
In Places, though, an individual place
can be considered a document

175
00:10:12,813 --> 00:10:16,717
even though Places
isn't using a document group.

176
00:10:16,750 --> 00:10:18,485
It has properties that you can edit,

177
00:10:18,519 --> 00:10:21,021
you can add or remove them
to the Places app,

178
00:10:21,054 --> 00:10:23,357
and you can share
a place with your friends.

179
00:10:23,390 --> 00:10:25,726
Let's look at how
we can show off this relationship

180
00:10:25,759 --> 00:10:28,562
in a non-document group based app.

181
00:10:28,595 --> 00:10:33,400
I already associate the name of the place
as the navigation title of the view.

182
00:10:33,433 --> 00:10:38,105
So I'm already associating a piece
of the place to the title of my toolbar.

183
00:10:38,138 --> 00:10:41,074
In iOS 16, I can take that even further

184
00:10:41,108 --> 00:10:44,144
by using new navigation title modifiers.

185
00:10:44,178 --> 00:10:47,481
Navigation titles now support
presenting a menu.

186
00:10:47,514 --> 00:10:51,185
You can kind of think of this
like the File menu on macOS.

187
00:10:51,218 --> 00:10:52,886
To create one of these menus,

188
00:10:52,920 --> 00:10:55,722
provide a set of actions
to the navigation title,

189
00:10:55,756 --> 00:10:57,925
just like you would a normal menu.

190
00:10:57,958 --> 00:11:01,528
Notice that the title now has
a menu indicator attached to it

191
00:11:01,562 --> 00:11:04,765
that presents a menu
populated with your actions.

192
00:11:04,798 --> 00:11:07,801
And that's not all
navigation titles can do.

193
00:11:07,835 --> 00:11:12,573
One of my favorite parts is its
new ability to support editable titles.

194
00:11:12,606 --> 00:11:15,209
You can pass a binding
to your navigation title

195
00:11:15,242 --> 00:11:19,513
and this tells the toolbar
that you support editing the title.

196
00:11:19,546 --> 00:11:23,317
All you're missing is a way
to actually start editing.

197
00:11:23,350 --> 00:11:26,987
You can use the new RenameButton
inside your titles menus actions

198
00:11:27,020 --> 00:11:28,889
to accomplish this.

199
00:11:30,424 --> 00:11:34,595
Tapping on the rename button
allows you to start renaming the title.

200
00:11:34,628 --> 00:11:37,831
Just like you can associate
a navigation title to your view,

201
00:11:37,865 --> 00:11:42,135
you can now also associate a document,
like my place.

202
00:11:42,169 --> 00:11:44,671
When provided a document,
the title menu renders

203
00:11:44,705 --> 00:11:48,408
a specialized header that shows
a preview of that document.

204
00:11:48,442 --> 00:11:53,080
The preview can be dragged and there's
quick access to share the document.

205
00:11:53,113 --> 00:11:56,517
To get one of these headers,
associate your navigation document

206
00:11:56,550 --> 00:12:00,654
to your view using the new
navigation document modifier.

207
00:12:00,687 --> 00:12:02,523
You can do this by providing a type

208
00:12:02,556 --> 00:12:06,960
that conforms to transferable,
or by providing a URL directly.

209
00:12:06,994 --> 00:12:12,299
Here I'll provide a URL that will open
the Maps app to the place I'm viewing.

210
00:12:12,332 --> 00:12:16,570
The navigation document modifier
will also configure the proxy icon

211
00:12:16,603 --> 00:12:20,174
of the window toolbar on macOS
when providing a URL.

212
00:12:21,441 --> 00:12:25,279
After all that, I think I'll take a break
from updating my app's toolbars.

213
00:12:25,312 --> 00:12:27,614
Can you believe all the features
I've added in this time?

214
00:12:27,648 --> 00:12:30,150
I can't wait to start using them.

215
00:12:30,184 --> 00:12:35,255
I covered a lot in my journey
to improve the Places experience on iPad.

216
00:12:35,289 --> 00:12:37,491
Toolbars on iPad have gained
a lot of new features

217
00:12:37,524 --> 00:12:41,061
like overflow menus
and user customization.

218
00:12:41,094 --> 00:12:44,698
Use the secondary action placement
and customization APIs

219
00:12:44,731 --> 00:12:48,535
to really make the most of the larger
space available on iPad and Mac.

220
00:12:50,003 --> 00:12:53,640
Titles have gained some new ways
to represent themselves in the toolbar.

221
00:12:53,674 --> 00:12:59,546
Use a navigation title or create
a title menu or support title renaming.

222
00:12:59,580 --> 00:13:04,351
And remember to use the navigation
document modifier when appropriate.

223
00:13:04,384 --> 00:13:07,221
I hope you've enjoyed
the SwiftUI on iPad series.

224
00:13:07,254 --> 00:13:10,424
With all the improvements in tables,
selection, toolbars, and more,

225
00:13:10,457 --> 00:13:13,260
go out and take your iPad apps
to the next level.

226
00:13:13,293 --> 00:13:15,662
Thank you, and have a great WW.

